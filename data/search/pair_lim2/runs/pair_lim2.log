>>> t = 0 ===================================================================================================
(pair) len(F.columns) = 42
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 51
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [5:,15:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[ 5:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:,20:, 10:5] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2012.0, 2012.25, 2009.25, 2013.75, 2013.5, 2009.75, 2010.75, 2011.5, 2012.75, 2013.25, 2014.0}), frozenset({2015.0, 2011.25, 2011.75, 2009.0, 2014.75, 2014.25, 2009.5, 2010.25, 2011.0, 2012.5, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [137, 105]
train = [1.034869884723976, 0.8339196109018779]
scores = [0.45093157822913105, 0.3046944564120497]
score = 0.37781301732059036
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [77, 326]
train = [0.99225906625136, 1.065921942920842]
scores = [0.4285400956361278, 0.30431471820904016]
score = 0.366427406922584
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [124, 339]
train = [0.8161328776814704, 0.9455242859346925]
scores = [0.45113827805982765, 0.3365310853851695]
score = 0.3938346817224986
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [124, 339]
train = [0.8161328776814704, 0.9455242859346925]
scores = [0.45113827805982765, 0.3365310853851695]
score = 0.3938346817224986
>>> t = 1 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 51
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [5:,15:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[ 5:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:,20:, 10:5] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.0, 2011.25, 2011.5, 2009.5, 2009.25, 2015.25, 2011.75, 2009.0, 2013.0, 2014.0, 2015.0}), frozenset({2010.0, 2012.25, 2012.5, 2012.75, 2013.5, 2013.75, 2014.5, 2014.25, 2009.75, 2010.25, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [86, 232]
train = [0.8508689019360858, 1.2741963731930577]
scores = [0.42621490030850134, 0.33670180177461273]
score = 0.381458351041557
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [124, 216]
train = [0.931615095002866, 1.8570824944278015]
scores = [0.42034421421637086, 0.36088363493539566]
score = 0.3906139245758833
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [139, 274]
train = [0.8791918112130155, 1.032810465000595]
scores = [0.4515793469385365, 0.2990736361916958]
score = 0.37532649156511616
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [124, 216]
train = [0.931615095002866, 1.8570824944278015]
scores = [0.42034421421637086, 0.36088363493539566]
score = 0.3906139245758833
>>> t = 100 ===================================================================================================
(pair) len(F.columns) = 104
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 143
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Drawup[1] 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp1dd)
            & [12:,15:,18:,6:3,18:15,21:18,12:6,18:12,12:3,15:6,15:3,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:10] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2011.0, 2011.25, 2012.75, 2009.75, 2009.5, 2014.5, 2009.0, 2010.0, 2011.5, 2012.25, 2013.25, 2014.0, 2015.0}), frozenset({2010.5, 2010.75, 2012.5, 2013.5, 2013.75, 2014.25, 2009.25, 2010.25, 2011.75, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [339, 64]
train = [1.2922194350513938, 1.259732107252499]
scores = [0.27330244739900833, 0.4135550040827758]
score = 0.34342872574089206
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [134, 37]
train = [1.1326231858988727, 1.2265819864220695]
scores = [0.2425064548690072, 0.38305613097602337]
score = 0.3127812929225153
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [49, 91]
train = [0.6369661079982613, 1.1642866637181988]
scores = [0.21860123422850983, 0.42632405488697317]
score = 0.3224626445577415
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [339, 64]
train = [1.2922194350513938, 1.259732107252499]
scores = [0.27330244739900833, 0.4135550040827758]
score = 0.34342872574089206
>>> t = 101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 143
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Drawup[1] 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp1dd)
            & [12:,15:,18:,6:3,18:15,21:18,12:6,18:12,12:3,15:6,15:3,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:10] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.25, 2011.25, 2011.0, 2011.5, 2009.0, 2013.5, 2009.25, 2010.5, 2011.75, 2012.5, 2013.75, 2014.5, 2015.25}), frozenset({2010.75, 2012.25, 2012.75, 2009.75, 2013.25, 2014.25, 2014.0, 2009.5, 2010.0, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [46, 131]
train = [0.8576087724361185, 1.5292744556910014]
scores = [0.24105611354624132, 0.4047041034371323]
score = 0.3228801084916868
>>> t = 200 ===================================================================================================
(pair) len(F.columns) = 23
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [9:,15:,18:,6:3,9:6,18:15,21:18,12:6,            15:9,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:, 10:5,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,125:] 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.5, 2012.5, 2009.75, 2013.25, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.5, 2015.0}), frozenset({2011.75, 2012.75, 2009.25, 2013.75, 2014.25, 2014.0, 2009.0, 2010.25, 2011.25, 2012.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [96, 494]
train = [1.053740025991405, 0.9152370148140428]
scores = [0.5539119274148527, 0.37325201150055665]
score = 0.4635819694577047
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [58, 454]
train = [1.1321417559576943, 0.9282285704324521]
scores = [0.5686259634808434, 0.35900509810192166]
score = 0.4638155307913825
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [129, 453]
train = [0.9266064849424583, 0.8837232891345856]
scores = [0.45570593217956923, 0.3498396495006738]
score = 0.4027727908401215
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [58, 454]
train = [1.1321417559576943, 0.9282285704324521]
scores = [0.5686259634808434, 0.35900509810192166]
score = 0.4638155307913825
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [52, 13]
train = [0.990599840515699, 0.7542585423428609]
scores = [0.5655056369122077, 0.28794252719313146]
score = 0.42672408205266954
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [42, 16]
train = [1.2294379219416813, 0.795900526606715]
scores = [0.5976555215613425, 0.3096416661158812]
score = 0.45364859383861184
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [192, 455]
train = [1.1355122256685457, 0.9876314944526288]
scores = [0.475122583832761, 0.3623715243780407]
score = 0.41874705410540086
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [42, 16]
train = [1.2294379219416813, 0.795900526606715]
scores = [0.5976555215613425, 0.3096416661158812]
score = 0.45364859383861184
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [37, 36]
train = [1.0072257054862441, 0.798180187726165]
scores = [0.5806546248826883, 0.31581807467295564]
score = 0.44823634977782195
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [23, 13]
train = [1.2092587503952752, 0.9618081052278324]
scores = [0.6087587863034203, 0.32538027885644455]
score = 0.46706953257993244
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [140, 619]
train = [1.126585252731392, 1.1734314842956963]
scores = [0.480185610838954, 0.37755282188394845]
score = 0.42886921636145126
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [23, 13]
train = [1.2092587503952752, 0.9618081052278324]
scores = [0.6087587863034203, 0.32538027885644455]
score = 0.46706953257993244
>>> t = 201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [9:,15:,18:,6:3,9:6,18:15,21:18,12:6,            15:9,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:, 10:5,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,125:] 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.5, 2012.5, 2009.25, 2014.5, 2014.75, 2009.5, 2015.25, 2011.75, 2012.25, 2013.5, 2014.25, 2015.0}), frozenset({2010.25, 2010.75, 2011.25, 2012.75, 2009.75, 2013.25, 2013.75, 2009.0, 2010.5, 2011.0, 2012.0, 2013.0, 2014.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [180, 55]
train = [0.9687915593410915, 0.7674543765401881]
scores = [0.48273091083121816, 0.4353674433480653]
score = 0.45904917708964177
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [170, 34]
train = [1.0670274999623606, 0.7316262426263813]
scores = [0.42220506772299, 0.3908749697135801]
score = 0.40654001871828505
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [85, 356]
train = [0.6600318997389868, 1.0839203949988703]
scores = [0.43377856027129824, 0.4411485337252257]
score = 0.43746354699826195
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [180, 55]
train = [0.9687915593410915, 0.7674543765401881]
scores = [0.48273091083121816, 0.4353674433480653]
score = 0.45904917708964177
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [32, 20]
train = [0.8032880289956057, 0.8891824654081845]
scores = [0.47124978059224737, 0.41765978146820876]
score = 0.44445478103022806
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [4, 17]
train = [0.7679689824873567, 0.8490998132520193]
scores = [0.4169285675707324, 0.38153247477848085]
score = 0.3992305211746066
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [245, 201]
train = [0.9696288780605818, 1.089675937524988]
scores = [0.46752256944878173, 0.4521406384956215]
score = 0.45983160397220163
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [245, 201]
train = [0.9696288780605818, 1.089675937524988]
scores = [0.46752256944878173, 0.4521406384956215]
score = 0.45983160397220163
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [33, 30]
train = [0.8884885829231979, 0.9241480622836697]
scores = [0.4847292155738515, 0.4367638665904213]
score = 0.4607465410821364
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [8, 2]
train = [0.9530576378065203, 1.028825990602574]
scores = [0.441440483167532, 0.3615176416174325]
score = 0.4014790623924822
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [227, 151]
train = [1.0341659799009923, 1.071292986750599]
scores = [0.47151557277957906, 0.4579027184987143]
score = 0.46470914563914667
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [227, 151]
train = [1.0341659799009923, 1.071292986750599]
scores = [0.47151557277957906, 0.4579027184987143]
score = 0.46470914563914667
>>> t = 202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [9:,15:,18:,6:3,9:6,18:15,21:18,12:6,            15:9,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:, 10:5,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,125:] 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.5, 2011.5, 2012.25, 2009.75, 2009.25, 2013.5, 2009.0, 2010.0, 2011.75, 2012.5, 2013.75, 2015.0}), frozenset({2011.25, 2012.75, 2013.25, 2014.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.0, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [261, 46]
train = [0.8531322420301197, 0.8335908150279931]
scores = [0.45205824539147754, 0.3836754062508841]
score = 0.41786682582118084
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [125, 31]
train = [0.7205577799143168, 0.947596070751819]
scores = [0.40377300403876715, 0.4659142651607527]
score = 0.43484363459975994
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [363, 42]
train = [0.8605385050521905, 0.6308310265993968]
scores = [0.42600661813173907, 0.32645382401768025]
score = 0.37623022107470966
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [125, 31]
train = [0.7205577799143168, 0.947596070751819]
scores = [0.40377300403876715, 0.4659142651607527]
score = 0.43484363459975994
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [200, 44]
train = [0.8829671448752163, 0.8938923179623177]
scores = [0.4530724700363556, 0.394648898983903]
score = 0.42386068451012926
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [220, 32]
train = [0.9860747923495355, 1.1577881728932882]
scores = [0.4365666506126197, 0.46937015824935524]
score = 0.45296840443098746
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [348, 110]
train = [0.9848404855841637, 0.9064843873517784]
scores = [0.43987218140354706, 0.33995754012800217]
score = 0.38991486076577464
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [220, 32]
train = [0.9860747923495355, 1.1577881728932882]
scores = [0.4365666506126197, 0.46937015824935524]
score = 0.45296840443098746
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [231, 35]
train = [0.9684468581107873, 0.8780685730184874]
scores = [0.4517907945719337, 0.39481019445513005]
score = 0.4233004945135319
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [71, 30]
train = [0.8777446388921922, 1.3472487509987894]
scores = [0.424919147179505, 0.49167072092139413]
score = 0.4582949340504496
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [310, 88]
train = [1.0643680215919356, 0.8719020332377326]
scores = [0.44762461867998715, 0.34323993002277425]
score = 0.39543227435138073
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [71, 30]
train = [0.8777446388921922, 1.3472487509987894]
scores = [0.424919147179505, 0.49167072092139413]
score = 0.4582949340504496
>>> t = 300 ===================================================================================================
(pair) len(F.columns) = 26
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 55
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd|Volatility)
            & [12:,15:,12:9,12:6,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Drawup[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[10:] 
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
              )
            & Since[ 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.25, 2012.0, 2012.25, 2009.25, 2009.5, 2013.75, 2009.75, 2010.75, 2011.5, 2012.5, 2013.25, 2014.75, 2015.0}), frozenset({2010.25, 2010.5, 2011.75, 2013.5, 2014.25, 2014.0, 2009.0, 2010.0, 2011.0, 2012.75, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [2, 200]
train = [0.4799482437390684, 0.8773412518106715]
scores = [0.2385096803052298, 0.17663269233484258]
score = 0.20757118632003618
>>> t = 301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 55
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd|Volatility)
            & [12:,15:,12:9,12:6,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Drawup[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[10:] 
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
              )
            & Since[ 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2010.75, 2012.75, 2012.5, 2009.75, 2014.75, 2009.25, 2010.0, 2011.0, 2009.5, 2013.5, 2014.25, 2015.25}), frozenset({2011.25, 2011.75, 2012.25, 2013.25, 2013.75, 2014.0, 2009.0, 2010.5, 2011.5, 2012.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [123, 9]
train = [1.0614097565442997, 0.6251883535848454]
scores = [0.3416349885382618, 0.30550525760510183]
score = 0.3235701230716818
>>> t = 400 ===================================================================================================
(pair) len(F.columns) = 35
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 58
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo)
            & [12:,15:,18:15,12:6,            15:9,21:9,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| VP)
        & [10:,20:,60:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [3:,9:,12:,15:,12:9,9:3,            15:9,18:12,12:3,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:] 
                | Since{Max&index[5]} 
                | Since{Min&index[0]} 
              )
            & Since[ 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.5, 2011.0, 2012.0, 2013.25, 2013.5, 2014.0, 2009.0, 2010.75, 2011.25, 2012.5, 2013.75, 2014.75}), frozenset({2010.25, 2010.5, 2015.0, 2012.75, 2009.25, 2009.75, 2014.25, 2009.5, 2010.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = [72, 5]
train = [0.7965141957886805, 0.5996517492584288]
scores = [0.3601529490913698, 0.4517079988916212]
score = 0.4059304739914955
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 38)
train = (0.62596249729158626, 0.76041808144601031)
scores = (0.34781824018813395, 0.44358005744168283)
score = 0.3956991488149084
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 116)
train = (0.71288714166156097, 0.72940257207273651)
scores = (0.37013623191760892, 0.46912550974762396)
score = 0.4196308708326164
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (63, 116)
train = (0.71288714166156097, 0.72940257207273651)
scores = (0.37013623191760892, 0.46912550974762396)
score = 0.4196308708326164
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 5)
train = (0.86351031584886317, 0.65255810032758144)
scores = (0.35573322190551926, 0.4306281013054527)
score = 0.393180661605486
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 32)
train = (0.74584086963598661, 0.89907703604000477)
scores = (0.33895639843633996, 0.40237571528110444)
score = 0.3706660568587222
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (81, 112)
train = (0.77128502355247519, 0.75894450365213639)
scores = (0.36747850854243175, 0.4705983159966467)
score = 0.4190384122695392
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (81, 112)
train = (0.77128502355247519, 0.75894450365213639)
scores = (0.36747850854243175, 0.4705983159966467)
score = 0.4190384122695392
>>> t = 401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 58
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo)
            & [12:,15:,18:15,12:6,            15:9,21:9,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| VP)
        & [10:,20:,60:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [3:,9:,12:,15:,12:9,9:3,            15:9,18:12,12:3,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:] 
                | Since{Max&index[5]} 
                | Since{Min&index[0]} 
              )
            & Since[ 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.0, 2015.0, 2013.25, 2014.25, 2014.75, 2014.5, 2009.5, 2010.5, 2011.5, 2009.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.25, 2011.0, 2011.25, 2012.25, 2012.5, 2012.75, 2009.75, 2013.75, 2009.25, 2010.75, 2011.75, 2012.0, 2013.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (97, 83)
train = (0.77918034629749089, 0.75705422138095735)
scores = (0.41087749027731174, 0.40883585226725255)
score = 0.40985667127228215
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (97, 2)
train = (0.76870790743674133, 0.67273372872379955)
scores = (0.41265396024849793, 0.39705880837523211)
score = 0.404856384311865
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (134, 121)
train = (0.76381611748247624, 0.72453890740213822)
scores = (0.42757866857205279, 0.42694957020932056)
score = 0.42726411939068665
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (134, 121)
train = (0.76381611748247624, 0.72453890740213822)
scores = (0.42757866857205279, 0.42694957020932056)
score = 0.42726411939068665
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 79)
train = (0.82021981382329934, 0.81786875663045944)
scores = (0.3994576667823474, 0.40391522938716318)
score = 0.4016864480847553
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 1)
train = (0.83027731622422385, 0.8154893705079348)
scores = (0.37157654938857154, 0.31042778534715582)
score = 0.3410021673678637
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (129, 118)
train = (0.79387090225240786, 0.75147766269053384)
scores = (0.42772384191952728, 0.42543179794689473)
score = 0.426577819933211
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (129, 118)
train = (0.79387090225240786, 0.75147766269053384)
scores = (0.42772384191952728, 0.42543179794689473)
score = 0.426577819933211
>>> t = 500 ===================================================================================================
(pair) len(F.columns) = 83
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 116
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd)
            & [20:15,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[0,10]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [20:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [3:,6:,12:,15:,9:6,15:12,12:6,18:12,12:3,15:6,15:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0]} 
                | Drawup[1, 10:5] 
                | Since{Min & index[0,10,20]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        | FracRec[62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo)
            & index[0,1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd|vp5dd)
            & [5:,15:,15:10,15:5,20:5] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.0, 2009.0, 2013.0, 2013.5, 2014.75, 2014.5, 2009.25, 2010.0, 2011.75, 2012.5, 2013.25, 2014.25}), frozenset({2010.75, 2015.0, 2011.5, 2012.25, 2012.75, 2009.75, 2009.5, 2010.25, 2011.25, 2012.0, 2013.75, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 11)
train = (0.57942306099183205, 0.65439824489718867)
scores = (0.36575824322022993, 0.41109427768496293)
score = 0.38842626045259643
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 75)
train = (0.6501157736022628, 1.3975555804308999)
scores = (0.35312579287708851, 0.4370854121452874)
score = 0.395105602511188
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 269)
train = (0.46459815713482694, 1.3320853651605065)
scores = (0.38889009306856631, 0.47498043891297193)
score = 0.43193526599076915
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 269)
train = (0.46459815713482694, 1.3320853651605065)
scores = (0.38889009306856631, 0.47498043891297193)
score = 0.43193526599076915
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 1)
train = (0.62368313669284681, 0.64812089006790941)
scores = (0.37108707043180139, 0.41371340624982617)
score = 0.3924002383408138
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 94)
train = (0.73109831685660365, 1.5883370790775619)
scores = (0.36775952578119209, 0.45773820627914563)
score = 0.41274886603016886
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 185)
train = (0.46459815713482694, 1.3109651723493145)
scores = (0.38889009306856631, 0.47368464354993539)
score = 0.43128736830925085
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 185)
train = (0.46459815713482694, 1.3109651723493145)
scores = (0.38889009306856631, 0.47368464354993539)
score = 0.43128736830925085
>>> t = 501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 116
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd)
            & [20:15,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[0,10]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [20:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [3:,6:,12:,15:,9:6,15:12,12:6,18:12,12:3,15:6,15:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0]} 
                | Drawup[1, 10:5] 
                | Since{Min & index[0,10,20]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        | FracRec[62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo)
            & index[0,1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd|vp5dd)
            & [5:,15:,15:10,15:5,20:5] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.25, 2012.25, 2009.5, 2013.25, 2014.75, 2014.5, 2009.0, 2010.5, 2011.0, 2012.75, 2013.5, 2014.25}), frozenset({2010.0, 2010.75, 2015.0, 2012.5, 2009.75, 2013.75, 2009.25, 2010.25, 2011.5, 2012.0, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 16)
train = (0.62109822448857877, 0.78441214495585521)
scores = (0.26803496282132633, 0.55820473926976699)
score = 0.41311985104554666
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 6)
train = (0.64776256012265354, 0.60516746983060843)
scores = (0.26552788319156284, 0.48832783660901596)
score = 0.37692785990028943
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 69)
train = (0.5196451612567774, 0.96024834723912944)
scores = (0.24746740181184146, 0.63558486207179465)
score = 0.44152613194181806
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 69)
train = (0.5196451612567774, 0.96024834723912944)
scores = (0.24746740181184146, 0.63558486207179465)
score = 0.44152613194181806
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 13)
train = (0.64694768854550355, 0.9150399645925229)
scores = (0.27016599428559318, 0.56792096627386579)
score = 0.4190434802797295
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 6)
train = (0.76060363981163426, 0.77997805652496754)
scores = (0.26421875699329428, 0.47657986186005613)
score = 0.3703993094266752
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 78)
train = (0.5196451612567774, 1.0647327728294991)
scores = (0.24746740181184146, 0.65923752852060602)
score = 0.45335246516622374
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 78)
train = (0.5196451612567774, 1.0647327728294991)
scores = (0.24746740181184146, 0.65923752852060602)
score = 0.45335246516622374
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 17)
train = (0.65689357770784318, 0.97883574689454778)
scores = (0.26826904799171986, 0.57150857574242175)
score = 0.41988881186707083
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (205, 6)
train = (1.276221597744486, 0.94125288847576605)
scores = (0.3266261352216937, 0.45299315233532411)
score = 0.3898096437785089
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 79)
train = (0.5196451612567774, 1.1154193386428664)
scores = (0.24746740181184146, 0.65544990326932839)
score = 0.4514586525405849
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 79)
train = (0.5196451612567774, 1.1154193386428664)
scores = (0.24746740181184146, 0.65544990326932839)
score = 0.4514586525405849
>>> t = 502 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 116
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd)
            & [20:15,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[0,10]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [20:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [3:,6:,12:,15:,9:6,15:12,12:6,18:12,12:3,15:6,15:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0]} 
                | Drawup[1, 10:5] 
                | Since{Min & index[0,10,20]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        | FracRec[62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo)
            & index[0,1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd|vp5dd)
            & [5:,15:,15:10,15:5,20:5] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.5, 2011.0, 2009.5, 2009.25, 2013.5, 2013.0, 2009.0, 2010.0, 2011.75, 2009.75, 2013.75, 2014.25}), frozenset({2015.0, 2011.5, 2012.25, 2012.5, 2012.75, 2014.5, 2014.0, 2010.75, 2011.25, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 3)
train = (0.54750611479180744, 0.69658725501903462)
scores = (0.34554136884430864, 0.35427434325244517)
score = 0.34990785604837693
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 17)
train = (0.57034797630988709, 0.90943022338800328)
scores = (0.34656962362707222, 0.30428514520934496)
score = 0.3254273844182086
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 2)
train = (0.49513175927542963, 0.54577731363795423)
scores = (0.34486606724177404, 0.35750594640318023)
score = 0.35118600682247714
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (11, 2)
train = (0.49513175927542963, 0.54577731363795423)
scores = (0.34486606724177404, 0.35750594640318023)
score = 0.35118600682247714
>>> t = 600 ===================================================================================================
(pair) len(F.columns) = 27
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 46
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|dcc)
            & index[ 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo)
            & [6:,12:,15:,18:,15:12,21:18,12:6,12:3,15:6,21:12,15:3,18:3,21:6] 
          }
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doc|daoc)
            & index[0,1,1:2,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.25, 2012.75, 2012.5, 2012.0, 2009.75, 2009.5, 2009.0, 2010.25, 2011.75, 2012.25, 2013.25, 2015.0}), frozenset({2010.5, 2010.75, 2013.5, 2013.75, 2014.5, 2014.25, 2014.0, 2009.25, 2010.0, 2011.5, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 9)
train = (0.64503670575586414, 0.67922331343626274)
scores = (0.39323170179386113, 0.48737575914694803)
score = 0.4403037304704046
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 8)
train = (0.70446741053048823, 0.70665281929672608)
scores = (0.39621300989109487, 0.47615085804407542)
score = 0.43618193396758514
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 9)
train = (0.62949215796324187, 0.60101660281837932)
scores = (0.37519769478098164, 0.46403852278350799)
score = 0.4196181087822448
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (19, 9)
train = (0.64503670575586414, 0.67922331343626274)
scores = (0.39323170179386113, 0.48737575914694803)
score = 0.4403037304704046
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 9)
train = (0.67392052879532938, 0.7030464910914328)
scores = (0.39578777263405424, 0.48556426316369522)
score = 0.44067601789887473
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 9)
train = (0.85312480398188639, 0.86549191037931028)
scores = (0.39630050432002928, 0.48504521775241949)
score = 0.4406728610362244
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 9)
train = (0.62659506072643167, 0.60120152032546625)
scores = (0.3749553302408829, 0.46643024533775623)
score = 0.42069278778931957
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (14, 9)
train = (0.67392052879532938, 0.7030464910914328)
scores = (0.39578777263405424, 0.48556426316369522)
score = 0.44067601789887473
>>> t = 601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 46
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|dcc)
            & index[ 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo)
            & [6:,12:,15:,18:,15:12,21:18,12:6,12:3,15:6,21:12,15:3,18:3,21:6] 
          }
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doc|daoc)
            & index[0,1,1:2,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.75, 2011.0, 2012.0, 2009.75, 2013.0, 2013.25, 2009.0, 2010.25, 2011.25, 2012.5, 2013.75, 2014.75}), frozenset({2015.0, 2011.75, 2012.75, 2009.25, 2014.25, 2014.0, 2009.5, 2010.5, 2011.5, 2012.25, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 1)
train = (0.6691732282905789, 0.56328512525896257)
scores = (0.40163186343736751, 0.41008681407606501)
score = 0.40585933875671626
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (68, 11)
train = (0.7665982162356475, 0.70373509181076388)
scores = (0.38888412678400203, 0.40299238198698634)
score = 0.3959382543854942
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 93)
train = (0.58430268838166965, 0.65862245693875099)
scores = (0.40830410540418, 0.39460619352166099)
score = 0.4014551494629205
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (5, 1)
train = (0.6691732282905789, 0.56328512525896257)
scores = (0.40163186343736751, 0.41008681407606501)
score = 0.40585933875671626
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 9)
train = (0.70548758510110443, 0.64825882500089382)
scores = (0.40593325462870289, 0.42044718195981351)
score = 0.41319021829425817
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 16)
train = (0.9028952875395565, 0.87939008840506383)
scores = (0.38539093790783846, 0.40053277616014493)
score = 0.39296185703399167
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 91)
train = (0.58403979691641772, 0.68108729740625795)
scores = (0.41183897114144963, 0.39576722139067044)
score = 0.40380309626606004
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (8, 9)
train = (0.70548758510110443, 0.64825882500089382)
scores = (0.40593325462870289, 0.42044718195981351)
score = 0.41319021829425817
>>> t = 700 ===================================================================================================
(pair) len(F.columns) = 124
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.25, 2009.25, 2013.25, 2013.0, 2009.5, 2010.25, 2011.75, 2009.75, 2013.75, 2014.0, 2015.0}), frozenset({2010.5, 2011.5, 2012.5, 2012.75, 2014.5, 2014.25, 2009.0, 2010.0, 2011.0, 2012.0, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 132)
train = (1.2481426791708519, 0.97851675887468936)
scores = (0.54693949880155268, 0.44022245304325941)
score = 0.493580975922406
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (169, 294)
train = (1.4097559656709875, 1.1086213603307129)
scores = (0.56132943095266541, 0.43077157650647735)
score = 0.4960505037295714
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 248)
train = (1.0899874351625582, 1.0321242149561534)
scores = (0.56296480902509449, 0.4437180317424041)
score = 0.5033414203837493
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (149, 248)
train = (1.0899874351625582, 1.0321242149561534)
scores = (0.56296480902509449, 0.4437180317424041)
score = 0.5033414203837493
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (171, 101)
train = (1.5067107808625237, 1.0138084560490295)
scores = (0.56994421213241031, 0.44481055421677212)
score = 0.5073773831745912
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (141, 312)
train = (1.5674355676345839, 1.2810987072484286)
scores = (0.56191506801559377, 0.43587176904034991)
score = 0.49889341852797187
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 252)
train = (1.201090746224861, 1.1248225909678011)
scores = (0.55954781761003125, 0.4470679893933534)
score = 0.5033079035016923
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (171, 101)
train = (1.5067107808625237, 1.0138084560490295)
scores = (0.56994421213241031, 0.44481055421677212)
score = 0.5073773831745912
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 62)
train = (1.5361986652067527, 0.98749750092454325)
scores = (0.57563961341083647, 0.43765609606384948)
score = 0.506647854737343
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (92, 171)
train = (1.6741299070906273, 1.2642084131987694)
scores = (0.55473388079132657, 0.43399684661705001)
score = 0.49436536370418827
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (190, 277)
train = (1.3645526683099745, 1.2505591525878037)
scores = (0.5606620813374017, 0.44222851837441629)
score = 0.501445299855909
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (152, 62)
train = (1.5361986652067527, 0.98749750092454325)
scores = (0.57563961341083647, 0.43765609606384948)
score = 0.506647854737343
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (140, 165)
train = (1.5999773494785343, 1.2209461937376145)
scores = (0.57589152031254787, 0.45580432696298417)
score = 0.515847923637766
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 257)
train = (1.8150456800903525, 1.5131821109016508)
scores = (0.57193917550754636, 0.45041090184314242)
score = 0.5111750386753444
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (139, 202)
train = (1.2479918528139695, 1.1859506601545633)
scores = (0.55565483232492785, 0.44217098827417861)
score = 0.4989129102995532
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (140, 165)
train = (1.5999773494785343, 1.2209461937376145)
scores = (0.57589152031254787, 0.45580432696298417)
score = 0.515847923637766
>>> t = 701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2009.75, 2009.25, 2013.75, 2014.25, 2014.75, 2014.0, 2009.5, 2010.5, 2011.0, 2009.0, 2013.0, 2014.5, 2015.0}), frozenset({2010.0, 2010.75, 2011.5, 2011.75, 2012.25, 2012.5, 2012.75, 2013.5, 2010.25, 2011.25, 2012.0, 2013.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 4)
train = (0.6654932313957419, 0.69615360047072117)
scores = (0.50229530690759017, 0.39883755945309202)
score = 0.45056643318034106
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (102, 1)
train = (0.89515247146006338, 0.71849341016259161)
scores = (0.52871189701945009, 0.37209239084361656)
score = 0.4504021439315333
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (242, 135)
train = (1.045609721587115, 0.96438246873767475)
scores = (0.53504336476814218, 0.41003202339226985)
score = 0.472537694080206
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (242, 135)
train = (1.045609721587115, 0.96438246873767475)
scores = (0.53504336476814218, 0.41003202339226985)
score = 0.472537694080206
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 3)
train = (0.77601522611247797, 0.74361291594125623)
scores = (0.50751901643883512, 0.40427854209672948)
score = 0.45589877926778233
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 2)
train = (1.0651595137928609, 1.0140983529068708)
scores = (0.51744285146309632, 0.35625116559121467)
score = 0.4368470085271555
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (467, 94)
train = (1.2757830236650236, 0.9106864717057308)
scores = (0.54794785471019625, 0.40826557360775451)
score = 0.4781067141589754
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (467, 94)
train = (1.2757830236650236, 0.9106864717057308)
scores = (0.54794785471019625, 0.40826557360775451)
score = 0.4781067141589754
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 3)
train = (0.79145279961834591, 0.74892433289637295)
scores = (0.51442480139817193, 0.40323667821695897)
score = 0.45883073980756545
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (93, 3)
train = (1.1383400786727256, 1.1940616039647529)
scores = (0.53307685839009311, 0.35935234830379309)
score = 0.4462146033469431
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 107)
train = (1.0997219085657677, 0.97889116526505027)
scores = (0.5375236857166904, 0.40719719719793751)
score = 0.47236044145731393
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (177, 107)
train = (1.0997219085657677, 0.97889116526505027)
scores = (0.5375236857166904, 0.40719719719793751)
score = 0.47236044145731393
>>> t = 702 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.25, 2009.0, 2009.5, 2013.0, 2014.0, 2009.25, 2010.0, 2011.5, 2012.75, 2013.5, 2014.75}), frozenset({2010.5, 2015.0, 2011.75, 2012.5, 2013.75, 2014.25, 2009.75, 2010.25, 2011.0, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (280, 187)
train = (1.0637826898820397, 1.4116067283747937)
scores = (0.45308525410150535, 0.52913098695623229)
score = 0.4911081205288688
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (303, 39)
train = (1.1357213375259831, 1.1382333981144455)
scores = (0.45259133091853909, 0.49236818832125934)
score = 0.4724797596198992
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (368, 338)
train = (1.0997231460653685, 1.3948373321658465)
scores = (0.45089306562265385, 0.53429396872120971)
score = 0.4925935171719318
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (368, 338)
train = (1.0997231460653685, 1.3948373321658465)
scores = (0.45089306562265385, 0.53429396872120971)
score = 0.4925935171719318
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 191)
train = (0.69867708917022264, 1.5706848554101549)
scores = (0.41138365388947434, 0.53347637612175292)
score = 0.47243001500561366
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (189, 54)
train = (1.1703225727378757, 1.5151662286833869)
scores = (0.46407457317408951, 0.47745452055539295)
score = 0.47076454686474123
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (273, 277)
train = (1.1354571074273945, 1.4105208134144112)
scores = (0.4498969829227909, 0.52668370172221435)
score = 0.4882903423225026
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (273, 277)
train = (1.1354571074273945, 1.4105208134144112)
scores = (0.4498969829227909, 0.52668370172221435)
score = 0.4882903423225026
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 140)
train = (0.70658773395460461, 1.5291711797089427)
scores = (0.41208064034708458, 0.53698434280924978)
score = 0.4745324915781672
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (216, 43)
train = (1.3813481312138902, 1.6072441450747073)
scores = (0.47413574188374358, 0.49849614554377064)
score = 0.4863159437137571
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (199, 350)
train = (1.0982482050392937, 1.6009234167382029)
scores = (0.44947801525692965, 0.54394162553741787)
score = 0.49670982039717376
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (199, 350)
train = (1.0982482050392937, 1.6009234167382029)
scores = (0.44947801525692965, 0.54394162553741787)
score = 0.49670982039717376
>>> t = 703 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2012.0, 2012.5, 2009.25, 2013.0, 2014.0, 2014.25, 2014.75, 2009.5, 2011.0, 2012.75, 2013.75, 2014.5}), frozenset({2010.0, 2010.5, 2010.75, 2015.0, 2011.75, 2009.75, 2013.5, 2009.0, 2010.25, 2011.25, 2012.25, 2013.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 23)
train = (0.9948634510871377, 0.66298933920526526)
scores = (0.51550656018783581, 0.30317282113320115)
score = 0.40933969066051845
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 108)
train = (0.98325464629376702, 0.88265177742568945)
scores = (0.49339962913028218, 0.33462654846556267)
score = 0.4140130887979224
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 43)
train = (0.84189107985144496, 0.62562669366951296)
scores = (0.55005234622569577, 0.29637252968993083)
score = 0.42321243795781327
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (55, 43)
train = (0.84189107985144496, 0.62562669366951296)
scores = (0.55005234622569577, 0.29637252968993083)
score = 0.42321243795781327
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (80, 2)
train = (1.1688183100879985, 0.65846913100869775)
scores = (0.51460538844781822, 0.3136547322699077)
score = 0.41413006035886296
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 148)
train = (1.1611912415891246, 1.1732686764077254)
scores = (0.4790308593619354, 0.36093821000443804)
score = 0.41998453468318675
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (44, 321)
train = (0.82534072532237934, 1.1474519659619726)
scores = (0.54498068845265135, 0.32204664345928857)
score = 0.43351366595596996
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (44, 321)
train = (0.82534072532237934, 1.1474519659619726)
scores = (0.54498068845265135, 0.32204664345928857)
score = 0.43351366595596996
>>> t = 800 ===================================================================================================
(pair) len(F.columns) = 119
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2015.25, 2012.5, 2009.0, 2013.25, 2014.5, 2009.75, 2010.0, 2011.0, 2012.25, 2013.5, 2014.0, 2015.0}), frozenset({2010.75, 2011.5, 2011.75, 2012.75, 2009.25, 2013.75, 2014.25, 2009.5, 2010.25, 2011.25, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (165, 69)
train = (0.97243075493285713, 0.93607607460652376)
scores = (0.43156327032309716, 0.59870267674721311)
score = 0.5151329735351551
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 45)
train = (0.82397500936235601, 0.80692880414647494)
scores = (0.35071289490588697, 0.51381953559853533)
score = 0.43226621525221115
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (143, 135)
train = (0.89856445050985456, 1.1692622098522896)
scores = (0.40792538969951503, 0.66494385080225693)
score = 0.536434620250886
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (143, 135)
train = (0.89856445050985456, 1.1692622098522896)
scores = (0.40792538969951503, 0.66494385080225693)
score = 0.536434620250886
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (58, 75)
train = (1.0103716772090705, 1.1543045549121915)
scores = (0.43056017423885196, 0.63647550106098782)
score = 0.5335178376499199
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 4)
train = (0.94587569552113016, 0.98073054866862874)
scores = (0.42700322269393431, 0.48505638792644684)
score = 0.45602980531019055
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (422, 87)
train = (1.2647559123194057, 1.1321047118563119)
scores = (0.42856246360424716, 0.65909638288998806)
score = 0.5438294232471176
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (422, 87)
train = (1.2647559123194057, 1.1321047118563119)
scores = (0.42856246360424716, 0.65909638288998806)
score = 0.5438294232471176
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (257, 91)
train = (1.281289817815622, 1.2916545369135572)
scores = (0.45167214765223335, 0.64564693271899287)
score = 0.5486595401856131
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 6)
train = (1.1492735670967853, 1.155543766920152)
scores = (0.34831462834433186, 0.48664759228068966)
score = 0.4174811103125108
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (280, 138)
train = (1.2338144651260154, 1.3321907605861851)
scores = (0.42170567366643863, 0.66646619820707464)
score = 0.5440859359367567
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (257, 91)
train = (1.281289817815622, 1.2916545369135572)
scores = (0.45167214765223335, 0.64564693271899287)
score = 0.5486595401856131
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (279, 67)
train = (1.4154313849926656, 1.2736871901767788)
scores = (0.46012349383193796, 0.66412283134866212)
score = 0.5621231625903
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 59)
train = (1.3318252339791297, 1.3604926791427399)
scores = (0.35962589529241162, 0.55342960845748823)
score = 0.4565277518749499
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (294, 92)
train = (1.3021556870156472, 1.2139830443181918)
scores = (0.418854760498926, 0.65270667633359036)
score = 0.5357807184162582
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (279, 67)
train = (1.4154313849926656, 1.2736871901767788)
scores = (0.46012349383193796, 0.66412283134866212)
score = 0.5621231625903
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (257, 91)
train = (1.2812898178156218, 1.2916545369135572)
scores = (0.45167214765223324, 0.64564693271899265)
score = 0.5486595401856129
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (125, 58)
train = (1.0075495055479389, 0.96491766848695293)
scores = (0.42672740389808522, 0.52731965236695821)
score = 0.4770235281325217
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (280, 138)
train = (1.2338144651260152, 1.3321907605861847)
scores = (0.42170567366643874, 0.66646619820707442)
score = 0.5440859359367566
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (257, 91)
train = (1.2812898178156218, 1.2916545369135572)
scores = (0.45167214765223324, 0.64564693271899265)
score = 0.5486595401856129
>>> t = 801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.75, 2011.0, 2011.25, 2012.0, 2009.75, 2013.25, 2009.25, 2010.25, 2011.5, 2009.5, 2013.0, 2014.0, 2015.0}), frozenset({2010.5, 2012.5, 2012.75, 2013.75, 2014.5, 2014.25, 2009.0, 2010.0, 2011.75, 2012.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 192)
train = (0.91446750833895207, 0.97704723006015115)
scores = (0.61645361227226902, 0.43220696809617165)
score = 0.5243302901842204
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 78)
train = (0.8084422229136109, 0.76461077199654448)
scores = (0.53120742069039661, 0.40429778128792038)
score = 0.4677526009891585
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 201)
train = (1.2197022575694854, 1.0046185750788792)
scores = (0.6397212066458724, 0.44321957686822316)
score = 0.5414703917570478
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (152, 201)
train = (1.2197022575694854, 1.0046185750788792)
scores = (0.6397212066458724, 0.44321957686822316)
score = 0.5414703917570478
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 110)
train = (1.0912512350686254, 1.0491262318641306)
scores = (0.60662283677029361, 0.4369058013908092)
score = 0.5217643190805514
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 227)
train = (0.9499954498085269, 1.1809459591901583)
scores = (0.41768251830661712, 0.42986999415112259)
score = 0.42377625622886983
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 1)
train = (1.2505786136720174, 0.5899731090950675)
scores = (0.63497834325748348, 0.38548318870149167)
score = 0.5102307659794876
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (42, 110)
train = (1.0912512350686254, 1.0491262318641306)
scores = (0.60662283677029361, 0.4369058013908092)
score = 0.5217643190805514
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 120)
train = (1.3675842685802495, 1.1450371042305856)
scores = (0.62638745892683523, 0.442407953754761)
score = 0.5343977063407981
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 120)
train = (1.181415898875144, 1.1903324034288481)
scores = (0.4469983408469228, 0.44641011134315184)
score = 0.44670422609503735
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (124, 1)
train = (1.3380155986086917, 0.5899731090950675)
scores = (0.62850291107604139, 0.38548318870149167)
score = 0.5069930498887665
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (91, 120)
train = (1.3675842685802495, 1.1450371042305856)
scores = (0.62638745892683523, 0.442407953754761)
score = 0.5343977063407981
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (86, 164)
train = (1.4634019592395178, 1.2760619631221639)
scores = (0.62281492111175618, 0.46021335395709806)
score = 0.5415141375344271
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 113)
train = (1.364007144057044, 1.3588333424200789)
scores = (0.47076898243250526, 0.44038556045846716)
score = 0.4555772714454862
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 1)
train = (1.3588029750565387, 0.58997310909506695)
scores = (0.63272898512330511, 0.38548318870149167)
score = 0.5091060869123984
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (86, 164)
train = (1.4634019592395178, 1.2760619631221639)
scores = (0.62281492111175618, 0.46021335395709806)
score = 0.5415141375344271
>>> t = 802 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2010.25, 2015.25, 2011.0, 2012.5, 2009.75, 2009.0, 2010.0, 2011.5, 2012.0, 2013.0, 2014.25, 2015.0}), frozenset({2011.75, 2012.75, 2009.25, 2013.5, 2013.75, 2014.5, 2014.0, 2009.5, 2010.75, 2011.25, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 84)
train = (0.85014027042447116, 1.0041632355269423)
scores = (0.58421193098372681, 0.45993600357324316)
score = 0.522073967278485
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 45)
train = (0.91468870506292888, 0.91007768133475386)
scores = (0.51646617630705594, 0.43037777630753693)
score = 0.47342197630729643
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 274)
train = (0.92759604493563197, 1.2047225986682688)
scores = (0.58593331967212192, 0.46680820096362002)
score = 0.526370760317871
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (88, 274)
train = (0.92759604493563197, 1.2047225986682688)
scores = (0.58593331967212192, 0.46680820096362002)
score = 0.526370760317871
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 113)
train = (0.97821901863857785, 1.1971104897923186)
scores = (0.59447247896862576, 0.47080926356466929)
score = 0.5326408712666475
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 73)
train = (0.885973011142559, 1.1905629271502598)
scores = (0.52012992091326593, 0.44176024586345741)
score = 0.48094508338836167
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (75, 229)
train = (1.0057278682203472, 1.2486041530829892)
scores = (0.57807225194651302, 0.47805665487098981)
score = 0.5280644534087514
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (37, 113)
train = (0.97821901863857785, 1.1971104897923186)
scores = (0.59447247896862576, 0.47080926356466929)
score = 0.5326408712666475
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (30, 115)
train = (1.0543066847427678, 1.3035764937641319)
scores = (0.60613759393518685, 0.48313562520258035)
score = 0.5446366095688836
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 81)
train = (1.092454724229809, 1.3866227556285617)
scores = (0.53895748014083777, 0.44992015338829727)
score = 0.4944388167645675
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (107, 307)
train = (1.1296862076050056, 1.4180734764707537)
scores = (0.58764230676483875, 0.47917412846282803)
score = 0.5334082176138334
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (30, 115)
train = (1.0543066847427678, 1.3035764937641319)
scores = (0.60613759393518685, 0.48313562520258035)
score = 0.5446366095688836
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 179)
train = (1.0959081740430732, 1.5178100218341111)
scores = (0.6109995942898625, 0.50072245415427719)
score = 0.5558610242220698
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (80, 46)
train = (1.2034399272659433, 1.5260537048296794)
scores = (0.54208324496169924, 0.46308151722235324)
score = 0.5025823810920262
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 416)
train = (1.1153668751551391, 1.5580110320664875)
scores = (0.59329098691570026, 0.48021855169703731)
score = 0.5367547693063688
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (32, 179)
train = (1.0959081740430732, 1.5178100218341111)
scores = (0.6109995942898625, 0.50072245415427719)
score = 0.5558610242220698
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (30, 115)
train = (1.0543066847427673, 1.3035764937641321)
scores = (0.60613759393518685, 0.48313562520258052)
score = 0.5446366095688837
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 221)
train = (0.9067273189120022, 1.3781436822670912)
scores = (0.52495725446739971, 0.45149076702850355)
score = 0.48822401074795163
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (107, 307)
train = (1.1296862076049261, 1.4180734764707534)
scores = (0.58764230676481, 0.47917347485462891)
score = 0.5334078908097195
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (30, 115)
train = (1.0543066847427673, 1.3035764937641321)
scores = (0.60613759393518685, 0.48313562520258052)
score = 0.5446366095688837
>>> t = 803 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2012.0, 2013.75, 2013.5, 2014.0, 2009.75, 2010.0, 2011.75, 2012.5, 2013.25, 2014.75, 2015.0}), frozenset({2010.75, 2011.25, 2012.75, 2009.0, 2009.25, 2014.25, 2009.5, 2010.5, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (158, 4)
train = (1.4087093120568392, 0.72216076427251052)
scores = (0.4575347418517296, 0.57507260227841051)
score = 0.51630367206507
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (54, 6)
train = (1.3030758761292602, 0.65121810069791364)
scores = (0.4250279751237655, 0.63589025845287184)
score = 0.5304591167883187
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (287, 11)
train = (1.3863040881847273, 0.71130707016400618)
scores = (0.43849060064893236, 0.57028454514765436)
score = 0.5043875728982934
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (54, 6)
train = (1.3030758761292602, 0.65121810069791364)
scores = (0.4250279751237655, 0.63589025845287184)
score = 0.5304591167883187
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 13)
train = (1.5242728262752985, 0.88819644904810224)
scores = (0.45638243175045878, 0.57836586257575384)
score = 0.5173741471631064
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 18)
train = (1.6748747853881023, 0.75860299392649977)
scores = (0.44047988090874785, 0.61479391298947583)
score = 0.5276368969491119
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 9)
train = (0.86080031551082759, 0.68515828734539441)
scores = (0.41352597131410762, 0.5677236601770751)
score = 0.49062481574559136
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (65, 18)
train = (1.6748747853881023, 0.75860299392649977)
scores = (0.44047988090874785, 0.61479391298947583)
score = 0.5276368969491119
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (129, 12)
train = (1.6394493555582799, 0.94132995629028737)
scores = (0.46379737837195412, 0.57473093319441826)
score = 0.5192641557831862
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 1)
train = (1.7655115637761742, 0.81166313422992487)
scores = (0.43271191262190772, 0.63880534721699989)
score = 0.5357586299194538
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 9)
train = (0.88266467416327232, 0.68515828734539408)
scores = (0.41803462151571991, 0.5677236601770751)
score = 0.4928791408463975
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (51, 1)
train = (1.7655115637761742, 0.81166313422992487)
scores = (0.43271191262190772, 0.63880534721699989)
score = 0.5357586299194538
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 18)
train = (1.8361354413985749, 0.97381655481546969)
scores = (0.46927216997782945, 0.57788236519150415)
score = 0.5235772675846668
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 8)
train = (1.9295026713003909, 1.0096468212001748)
scores = (0.44404740524957298, 0.59729505055164689)
score = 0.5206712279006099
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 9)
train = (0.88981286202773668, 0.68515828734539419)
scores = (0.41781435366634512, 0.56772366017707521)
score = 0.49276900692171016
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (159, 18)
train = (1.8361354413985749, 0.97381655481546969)
scores = (0.46927216997782945, 0.57788236519150415)
score = 0.5235772675846668
>>> t = 900 ===================================================================================================
(pair) len(F.columns) = 32
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 38
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd)
            & [3:,6:,9:,15:,6:3,12:6,            15:9,18:12,12:3,15:6,18:9,18:6] 
          }
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd)
            & [3:,15:,18:,18:12,12:3,15:6,18:9,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[10]} 
                | Drawup[20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.25, 2012.25, 2012.75, 2014.5, 2014.0, 2009.25, 2010.75, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}), frozenset({2010.5, 2011.75, 2009.0, 2009.75, 2013.25, 2013.5, 2009.5, 2010.0, 2011.5, 2012.5, 2013.0, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 3)
train = (0.45413789487000422, 0.40446532904515398)
scores = (0.25849266812730065, 0.19203334742156261)
score = 0.22526300777443165
>>> t = 901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 38
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd)
            & [3:,6:,9:,15:,6:3,12:6,            15:9,18:12,12:3,15:6,18:9,18:6] 
          }
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd)
            & [3:,15:,18:,18:12,12:3,15:6,18:9,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[10]} 
                | Drawup[20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.5, 2012.25, 2009.25, 2009.0, 2013.0, 2013.75, 2009.5, 2010.25, 2011.75, 2012.75, 2013.25, 2014.75, 2015.0}), frozenset({2010.5, 2010.75, 2011.25, 2012.5, 2014.25, 2014.0, 2009.75, 2010.0, 2011.0, 2012.0, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (460, 107)
train = (0.87521179027095941, 0.57181096551612076)
scores = (0.26652274086530819, 0.30788836397176667)
score = 0.2872055524185374
>>> t = 1000 ===================================================================================================
(pair) len(F.columns) = 95
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.25, 2011.0, 2012.5, 2009.25, 2009.0, 2013.5, 2013.75, 2009.75, 2011.5, 2012.0, 2013.25, 2014.0, 2015.25}), frozenset({2010.25, 2010.5, 2010.75, 2012.75, 2014.5, 2014.25, 2009.5, 2010.0, 2011.75, 2012.25, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (156, 117)
train = (0.9302860170794871, 1.0062668749306056)
scores = (0.46549542409351841, 0.53603527918109806)
score = 0.5007653516373083
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (173, 391)
train = (0.93160697102344792, 1.8079942796340136)
scores = (0.48798607064119787, 0.57014306537623627)
score = 0.529064568008717
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 260)
train = (0.93938296441231983, 0.99442897856428203)
scores = (0.44770201434204915, 0.49834638729513747)
score = 0.4730242008185933
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (173, 391)
train = (0.93160697102344792, 1.8079942796340136)
scores = (0.48798607064119787, 0.57014306537623627)
score = 0.529064568008717
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 99)
train = (1.0336915306715186, 1.1019162283906367)
scores = (0.4839289350100735, 0.54914939725323197)
score = 0.5165391661316527
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (282, 315)
train = (1.1730606865816684, 2.0381303969822251)
scores = (0.51300461510795214, 0.56833713457497093)
score = 0.5406708748414615
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (326, 356)
train = (1.1632060902712491, 1.2153194212421665)
scores = (0.47031509388231091, 0.51549012388301496)
score = 0.4929026088826629
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (282, 315)
train = (1.1730606865816684, 2.0381303969822251)
scores = (0.51300461510795214, 0.56833713457497093)
score = 0.5406708748414615
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (176, 105)
train = (1.0794680347634131, 1.1776382623812172)
scores = (0.47611761467125852, 0.55433488436694378)
score = 0.5152262495191011
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (369, 183)
train = (1.3521910902650414, 2.0562972713510193)
scores = (0.55043644436234396, 0.5429363759650776)
score = 0.5466864101637108
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (365, 567)
train = (1.2622696020109061, 1.5208400684491001)
scores = (0.47476488264874295, 0.52996047558712567)
score = 0.5023626791179343
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (369, 183)
train = (1.3521910902650414, 2.0562972713510193)
scores = (0.55043644436234396, 0.5429363759650776)
score = 0.5466864101637108
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (207, 92)
train = (1.1230471830494013, 1.1996193710203558)
scores = (0.49163385798322984, 0.54980401350486796)
score = 0.5207189357440489
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (327, 258)
train = (1.4333608384969476, 2.2919812303761025)
scores = (0.55546206267523279, 0.5470156425002386)
score = 0.5512388525877356
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (372, 472)
train = (1.3201714791820784, 1.4807061261653802)
scores = (0.47682861249580882, 0.53260418935352427)
score = 0.5047164009246665
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (327, 258)
train = (1.4333608384969476, 2.2919812303761025)
scores = (0.55546206267523279, 0.5470156425002386)
score = 0.5512388525877356
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (176, 105)
train = (1.0794680347634131, 1.1776382623812176)
scores = (0.47611761467125846, 0.55433488436694378)
score = 0.5152262495191011
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (261, 378)
train = (1.1320794158220375, 2.0641758779297743)
scores = (0.51658032548753374, 0.57205740191919685)
score = 0.5443188637033654
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (365, 567)
train = (1.2622696020109059, 1.5208400684491004)
scores = (0.47476488264874295, 0.52996047558712556)
score = 0.5023626791179343
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (261, 378)
train = (1.1320794158220375, 2.0641758779297743)
scores = (0.51658032548753374, 0.57205740191919685)
score = 0.5443188637033654
>>> t = 1001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.0, 2011.5, 2011.75, 2012.0, 2009.25, 2014.75, 2009.5, 2015.25, 2011.25, 2012.5, 2013.5, 2014.0, 2015.0}), frozenset({2010.0, 2010.5, 2010.75, 2012.75, 2009.75, 2013.25, 2013.75, 2014.25, 2009.0, 2010.25, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 203)
train = (1.0958380318096765, 0.90395385167543429)
scores = (0.49851685848480953, 0.52307348515051166)
score = 0.5107951718176607
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (303, 269)
train = (1.2343168659436226, 0.97820494200245078)
scores = (0.4805305936683873, 0.51622746534713482)
score = 0.49837902950776103
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (423, 302)
train = (1.2407399874796052, 0.94959727934367555)
scores = (0.51957984843345073, 0.50480710620248992)
score = 0.5121934773179704
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (423, 302)
train = (1.2407399874796052, 0.94959727934367555)
scores = (0.51957984843345073, 0.50480710620248992)
score = 0.5121934773179704
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 184)
train = (1.2012652755742239, 0.9688307934092556)
scores = (0.50290381094469594, 0.51944535961310234)
score = 0.5111745852788991
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (75, 124)
train = (1.1408910026252419, 1.0278261927541406)
scores = (0.46764591521295523, 0.49975867894368547)
score = 0.48370229707832035
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (416, 304)
train = (1.3224561488042235, 1.0468185678021191)
scores = (0.52259778322734385, 0.50309751266423097)
score = 0.5128476479457874
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (416, 304)
train = (1.3224561488042235, 1.0468185678021191)
scores = (0.52259778322734385, 0.50309751266423097)
score = 0.5128476479457874
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 125)
train = (1.2077120201774356, 0.99681578932815518)
scores = (0.50627584771002176, 0.52552536996856003)
score = 0.5159006088392909
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 121)
train = (1.327509732571033, 1.1956677490952894)
scores = (0.4702723272040491, 0.51379542410715673)
score = 0.4920338756556029
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (400, 309)
train = (1.3750323681451078, 1.1111652156330662)
scores = (0.52147512630963599, 0.50305407937040381)
score = 0.51226460284002
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 125)
train = (1.2077120201774356, 0.99681578932815518)
scores = (0.50627584771002176, 0.52552536996856003)
score = 0.5159006088392909
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (165, 124)
train = (1.3592509667912145, 1.0574165963404858)
scores = (0.49759334286721002, 0.52492637148221832)
score = 0.5112598571747142
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (108, 109)
train = (1.4651505088388841, 1.2618151195077909)
scores = (0.48063297326230708, 0.50003053765647643)
score = 0.4903317554593918
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (314, 320)
train = (1.3578851044197027, 1.1531820625127889)
scores = (0.52355072862129559, 0.50196280868633669)
score = 0.5127567686538161
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (314, 320)
train = (1.3578851044197027, 1.1531820625127889)
scores = (0.52355072862129559, 0.50196280868633669)
score = 0.5127567686538161
>>> t = 1002 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2011.0, 2011.25, 2013.5, 2014.25, 2014.5, 2009.25, 2010.75, 2011.75, 2012.25, 2013.75, 2014.75}), frozenset({2015.0, 2012.5, 2012.75, 2009.0, 2009.75, 2013.25, 2009.5, 2010.25, 2011.5, 2012.0, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (288, 207)
train = (1.1961567764227652, 0.95243017812338271)
scores = (0.51849926799235624, 0.52463031347422862)
score = 0.5215647907332924
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (196, 134)
train = (1.1609975386511022, 0.88563405055053901)
scores = (0.48805163402423329, 0.50541286392614615)
score = 0.49673224897518975
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (335, 197)
train = (1.1084714056534077, 0.92547398090145938)
scores = (0.48684915031987303, 0.52134250037665697)
score = 0.504095825348265
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (288, 207)
train = (1.1961567764227652, 0.95243017812338271)
scores = (0.51849926799235624, 0.52463031347422862)
score = 0.5215647907332924
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (320, 146)
train = (1.3232357910231094, 0.99626344134429279)
scores = (0.51147447913402955, 0.53096102535407097)
score = 0.5212177522440502
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 152)
train = (1.3831452784544034, 1.0561137610651117)
scores = (0.49278400834635838, 0.5048010365064729)
score = 0.49879252242641564
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (350, 232)
train = (1.2162986595012242, 1.0332304111334087)
scores = (0.49787550619984539, 0.52718649213606761)
score = 0.5125309991679565
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (320, 146)
train = (1.3232357910231094, 0.99626344134429279)
scores = (0.51147447913402955, 0.53096102535407097)
score = 0.5212177522440502
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (228, 135)
train = (1.3429936981330803, 1.049669033998301)
scores = (0.5165320205120113, 0.52508721283544313)
score = 0.5208096166737273
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (148, 156)
train = (1.4875410315510824, 1.2068014448675957)
scores = (0.509078860598834, 0.50218012205675011)
score = 0.5056294913277921
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (407, 163)
train = (1.3413345545354169, 1.0147991805095178)
scores = (0.50171972208276117, 0.52137081658225348)
score = 0.5115452693325073
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (228, 135)
train = (1.3429936981330803, 1.049669033998301)
scores = (0.5165320205120113, 0.52508721283544313)
score = 0.5208096166737273
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (224, 179)
train = (1.4030484279620421, 1.1573220874359667)
scores = (0.52120667863187353, 0.5232673113027434)
score = 0.5222369949673085
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 133)
train = (1.5913374946019716, 1.2995365090818976)
scores = (0.50816682114983913, 0.51032327754569518)
score = 0.5092450493477672
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (311, 326)
train = (1.2820450459700827, 1.2184558711401368)
scores = (0.49825513536934829, 0.54047496894169023)
score = 0.5193650521555193
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (224, 179)
train = (1.4030484279620421, 1.1573220874359667)
scores = (0.52120667863187353, 0.5232673113027434)
score = 0.5222369949673085
>>> t = 1003 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2015.0, 2011.5, 2011.0, 2012.25, 2009.0, 2013.0, 2009.25, 2010.75, 2011.25, 2009.75, 2013.5, 2015.25}), frozenset({2010.5, 2012.5, 2012.75, 2013.75, 2014.5, 2014.25, 2014.0, 2009.5, 2010.25, 2011.75, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (510, 242)
train = (1.0182527742483642, 1.1968439595024127)
scores = (0.51999967709928852, 0.54930264247788718)
score = 0.5346511597885879
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (543, 184)
train = (1.1376445845414027, 1.2922168722407186)
scores = (0.52738900107973241, 0.53639855790721813)
score = 0.5318937794934753
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (561, 354)
train = (1.109741347163143, 1.0996753831205681)
scores = (0.48926189267793413, 0.53632784842179226)
score = 0.5127948705498632
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (510, 242)
train = (1.0182527742483642, 1.1968439595024127)
scores = (0.51999967709928852, 0.54930264247788718)
score = 0.5346511597885879
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (476, 436)
train = (1.0910762680574824, 1.4287355685853333)
scores = (0.52616084065883817, 0.56774136163011923)
score = 0.5469511011444788
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (224, 209)
train = (1.0924353118829084, 1.5021308948801646)
scores = (0.50407345439707363, 0.56023686432619046)
score = 0.532155159361632
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (252, 274)
train = (1.0264766821631481, 1.1051205743907462)
scores = (0.4784108049640326, 0.54326002108682558)
score = 0.5108354130254291
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (476, 436)
train = (1.0910762680574824, 1.4287355685853333)
scores = (0.52616084065883817, 0.56774136163011923)
score = 0.5469511011444788
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (361, 190)
train = (1.1040637698039291, 1.2950791966956448)
scores = (0.52336988380416094, 0.55822563735256614)
score = 0.5407977605783636
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (404, 151)
train = (1.4049045003858514, 1.550141502565384)
scores = (0.53593261770531564, 0.54830994801027699)
score = 0.5421212828577964
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (284, 352)
train = (1.1380527962842182, 1.2234435303215758)
scores = (0.4881950461093113, 0.54694307584993906)
score = 0.5175690609796252
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (404, 151)
train = (1.4049045003858514, 1.550141502565384)
scores = (0.53593261770531564, 0.54830994801027699)
score = 0.5421212828577964
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (201, 217)
train = (1.0800756643467939, 1.3900503566215354)
scores = (0.50149173310590256, 0.55255727470775551)
score = 0.5270245039068291
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (261, 432)
train = (1.3766467312974593, 1.9071000786868999)
scores = (0.53654244938646922, 0.57691559493760558)
score = 0.5567290221620373
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (388, 466)
train = (1.3098220597209151, 1.3390900105834349)
scores = (0.49586656290324943, 0.55270844124349316)
score = 0.5242875020733713
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (261, 432)
train = (1.3766467312974593, 1.9071000786868999)
scores = (0.53654244938646922, 0.57691559493760558)
score = 0.5567290221620373
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (361, 190)
train = (1.1040637698039291, 1.295079196695645)
scores = (0.52336988380416083, 0.55822563735256614)
score = 0.5407977605783635
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (516, 236)
train = (1.2948344505338594, 1.4853130605602838)
scores = (0.54539344273798152, 0.56011201513295439)
score = 0.5527527289354679
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (284, 352)
train = (1.138052796284218, 1.2234435303215756)
scores = (0.48819504610931114, 0.54694307584993884)
score = 0.517569060979625
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (516, 236)
train = (1.2948344505338594, 1.4853130605602838)
scores = (0.54539344273798152, 0.56011201513295439)
score = 0.5527527289354679
>>> t = 1100 ===================================================================================================
(pair) len(F.columns) = 71
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 120
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,9:,15:,9:3,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP| Volatility)
        & [10:,60:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd|Volatility)
            & [6:,9:,12:,15:,18:,15:12,18:15,9:3,21:15,15:3,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:, 10:5,20:10] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.75, 2011.5, 2012.75, 2009.5, 2013.5, 2013.25, 2013.75, 2009.0, 2010.75, 2011.0, 2012.5, 2013.0, 2015.25}), frozenset({2010.0, 2010.5, 2012.25, 2009.75, 2014.5, 2014.25, 2014.0, 2009.25, 2010.25, 2011.25, 2012.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 1)
train = (0.76986629173000165, 0.69682864767104047)
scores = (0.35980396630631584, 0.40933423222402621)
score = 0.384569099265171
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 38)
train = (0.70435025558976927, 0.79510111405641137)
scores = (0.3540124329846398, 0.32744415787000053)
score = 0.3407282954273202
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 48)
train = (0.94230778498179257, 0.7815915337235031)
scores = (0.39135301079815737, 0.45943520169165231)
score = 0.4253941062449048
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 48)
train = (0.94230778498179257, 0.7815915337235031)
scores = (0.39135301079815737, 0.45943520169165231)
score = 0.4253941062449048
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 1)
train = (1.0232282857349315, 0.81177800040771919)
scores = (0.3771803788753208, 0.44631936768244485)
score = 0.4117498732788828
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (114, 53)
train = (1.0893480955138799, 1.003868161812717)
scores = (0.37021144449599991, 0.33445074443985467)
score = 0.3523310944679273
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (302, 77)
train = (1.2989738157715414, 0.9126629290896362)
scores = (0.413123706262843, 0.46333667646507171)
score = 0.43823019136395736
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (302, 77)
train = (1.2989738157715414, 0.9126629290896362)
scores = (0.413123706262843, 0.46333667646507171)
score = 0.43823019136395736
>>> t = 1101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 120
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,9:,15:,9:3,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP| Volatility)
        & [10:,60:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd|Volatility)
            & [6:,9:,12:,15:,18:,15:12,18:15,9:3,21:15,15:3,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:, 10:5,20:10] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.25, 2012.5, 2012.25, 2009.25, 2013.75, 2013.25, 2009.0, 2010.0, 2011.5, 2012.75, 2013.5, 2014.5, 2015.25}), frozenset({2010.5, 2010.75, 2011.75, 2009.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 138)
train = (0.74422048451444489, 1.2287659497008976)
scores = (0.28791153410585801, 0.54685982696747226)
score = 0.41738568053666514
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 116)
train = (0.86488727134259125, 1.3751616232092718)
scores = (0.30195278237024492, 0.50157338155278597)
score = 0.40176308196151544
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 67)
train = (0.61696741226896767, 0.95018617339417788)
scores = (0.29997199536012992, 0.53031626171682167)
score = 0.4151441285384758
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (4, 138)
train = (0.74422048451444489, 1.2287659497008976)
scores = (0.28791153410585801, 0.54685982696747226)
score = 0.41738568053666514
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 89)
train = (0.79610953637911519, 1.2499506509011544)
scores = (0.30110897959535504, 0.54317696605921395)
score = 0.4221429728272845
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (267, 90)
train = (1.1645866898875572, 1.4676470950003457)
scores = (0.34498310110381913, 0.48830863869966684)
score = 0.416645869901743
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 60)
train = (0.61696741226896767, 1.010154486838577)
scores = (0.29997199536012992, 0.52543302777410406)
score = 0.412702511567117
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (4, 89)
train = (0.79610953637911519, 1.2499506509011544)
scores = (0.30110897959535504, 0.54317696605921395)
score = 0.4221429728272845
>>> t = 1200 ===================================================================================================
(pair) len(F.columns) = 70
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.75, 2012.0, 2009.5, 2014.0, 2009.25, 2010.25, 2011.5, 2012.75, 2013.25, 2014.75, 2015.0}), frozenset({2010.75, 2012.5, 2009.75, 2013.5, 2013.75, 2014.25, 2009.0, 2010.0, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (129, 519)
train = (1.1089540207103286, 1.1586356664714506)
scores = (0.45027080112172252, 0.55474773352988982)
score = 0.5025092673258061
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 397)
train = (1.0415856493326121, 1.1272857062402004)
scores = (0.41909341307682363, 0.50104518111095486)
score = 0.4600692970938892
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (184, 397)
train = (1.1170694420887324, 1.1349290512402628)
scores = (0.471564551669095, 0.53976148868447282)
score = 0.5056630201767839
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (184, 397)
train = (1.1170694420887324, 1.1349290512402628)
scores = (0.471564551669095, 0.53976148868447282)
score = 0.5056630201767839
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 431)
train = (1.2091865996837019, 1.2481636884786238)
scores = (0.45885673418835649, 0.56386723155830154)
score = 0.511361982873329
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (67, 229)
train = (1.1832576937736681, 1.1749627912724301)
scores = (0.42240928245188125, 0.50342139709724421)
score = 0.46291533977456273
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (219, 295)
train = (1.2368617009295044, 1.163312049505655)
scores = (0.48110131603190875, 0.53681724451192769)
score = 0.5089592802719183
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (98, 431)
train = (1.2091865996837019, 1.2481636884786238)
scores = (0.45885673418835649, 0.56386723155830154)
score = 0.511361982873329
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 360)
train = (1.2785408382976526, 1.3251887839329497)
scores = (0.46118094789613817, 0.57128842284863401)
score = 0.516234685372386
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 301)
train = (1.3311145149544521, 1.4759414197038407)
scores = (0.43868358805828711, 0.53164289442938995)
score = 0.48516324124383853
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (464, 300)
train = (1.483152179273858, 1.2749815150542247)
scores = (0.49504223380244333, 0.54290870846148043)
score = 0.5189754711319619
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (464, 300)
train = (1.483152179273858, 1.2749815150542247)
scores = (0.49504223380244333, 0.54290870846148043)
score = 0.5189754711319619
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (184, 277)
train = (1.4269840563788181, 1.3422017539647138)
scores = (0.47428894336995059, 0.57287037431922827)
score = 0.5235796588445895
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 109)
train = (1.4041655783181173, 1.3091374191084266)
scores = (0.43993768093216151, 0.51882393953153683)
score = 0.4793808102318492
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (259, 384)
train = (1.38742931056971, 1.3982015357890243)
scores = (0.48326142148433854, 0.55332873428696805)
score = 0.5182950778856533
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (184, 277)
train = (1.4269840563788181, 1.3422017539647138)
scores = (0.47428894336995059, 0.57287037431922827)
score = 0.5235796588445895
>>> t = 1201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.5, 2012.0, 2012.5, 2009.75, 2009.5, 2009.0, 2010.25, 2011.25, 2012.75, 2013.5, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2011.75, 2013.25, 2013.75, 2014.5, 2014.0, 2009.25, 2010.0, 2011.0, 2012.25, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 106)
train = (0.96862183933600388, 1.1524549165714519)
scores = (0.42324997335018943, 0.50862540299608539)
score = 0.4659376881731374
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 53)
train = (0.85743292412639815, 0.91104149904485365)
scores = (0.39663286848768642, 0.44670589947026595)
score = 0.4216693839789762
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 236)
train = (1.0210533562369193, 1.2823074973653734)
scores = (0.43412194525375408, 0.54352416233211731)
score = 0.48882305379293567
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (218, 236)
train = (1.0210533562369193, 1.2823074973653734)
scores = (0.43412194525375408, 0.54352416233211731)
score = 0.48882305379293567
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (153, 123)
train = (1.0722945544955917, 1.3971870107970474)
scores = (0.43808971903893357, 0.5321517044522579)
score = 0.48512071174559573
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 16)
train = (0.84151811516012209, 0.89045740182722122)
scores = (0.40238928898505388, 0.45879904426388113)
score = 0.4305941666244675
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (232, 171)
train = (1.1357215163409491, 1.3162159503778863)
scores = (0.43423380835322584, 0.53364775416727572)
score = 0.48394078126025075
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (153, 123)
train = (1.0722945544955917, 1.3971870107970474)
scores = (0.43808971903893357, 0.5321517044522579)
score = 0.48512071174559573
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (114, 143)
train = (1.1165959763278832, 1.5782148886264005)
scores = (0.43404983140157422, 0.52629344720830185)
score = 0.480171639304938
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 17)
train = (0.96195594303284382, 1.1642800912920177)
scores = (0.41104057856787657, 0.46571152731995402)
score = 0.4383760529439153
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (167, 175)
train = (1.1300608129642535, 1.4085170753829501)
scores = (0.42944842035879677, 0.53266524731838594)
score = 0.4810568338385913
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (167, 175)
train = (1.1300608129642535, 1.4085170753829501)
scores = (0.42944842035879677, 0.53266524731838594)
score = 0.4810568338385913
>>> t = 1202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2015.0, 2011.0, 2012.25, 2013.25, 2013.5, 2014.5, 2009.5, 2010.25, 2011.25, 2009.25, 2013.0, 2014.0, 2015.25}), frozenset({2010.0, 2010.75, 2011.75, 2012.5, 2012.75, 2009.75, 2014.25, 2009.0, 2010.5, 2011.5, 2012.0, 2013.75, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (81, 2)
train = (0.91738026894727975, 0.61455481095038866)
scores = (0.37546731592799748, 0.48787024365439768)
score = 0.43166877979119755
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (125, 107)
train = (1.0614311555174232, 0.90501956035458297)
scores = (0.33612147210556004, 0.49841217888424239)
score = 0.41726682549490124
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 1)
train = (0.94874480583979715, 0.52505321401108618)
scores = (0.38460666667042126, 0.45954417710738499)
score = 0.4220754218889031
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (81, 2)
train = (0.91738026894727975, 0.61455481095038866)
scores = (0.37546731592799748, 0.48787024365439768)
score = 0.43166877979119755
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 1)
train = (1.1133634300559074, 0.64230385164785919)
scores = (0.38178212177538901, 0.50273470725375302)
score = 0.44225841451457104
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 81)
train = (1.1167044045350678, 1.035163671478966)
scores = (0.34568962363577593, 0.4948754539737209)
score = 0.4202825388047484
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (467, 1)
train = (1.4798044229297542, 0.52708556566039688)
scores = (0.41991046068703763, 0.46088968441928346)
score = 0.44040007255316055
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (111, 1)
train = (1.1133634300559074, 0.64230385164785919)
scores = (0.38178212177538901, 0.50273470725375302)
score = 0.44225841451457104
>>> t = 1203 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2009.5, 2009.25, 2014.5, 2014.0, 2009.0, 2010.75, 2011.75, 2012.75, 2013.0, 2014.75, 2015.0}), frozenset({2010.0, 2011.25, 2012.25, 2012.5, 2013.5, 2013.75, 2009.75, 2010.25, 2011.0, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (191, 190)
train = (0.92190993374256958, 1.518970033114551)
scores = (0.57241080857859938, 0.47324547343170414)
score = 0.5228281410051517
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (386, 246)
train = (1.1165180718945942, 1.7717712233829863)
scores = (0.63009708274880682, 0.54689350117334901)
score = 0.588495291961078
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (188, 598)
train = (0.98079779313627724, 1.684631621816612)
scores = (0.56407163858483345, 0.51199161354870537)
score = 0.5380316260667695
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (386, 246)
train = (1.1165180718945942, 1.7717712233829863)
scores = (0.63009708274880682, 0.54689350117334901)
score = 0.588495291961078
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (148, 459)
train = (1.015682784294403, 1.7974139737250712)
scores = (0.58375072824621255, 0.51089842457984547)
score = 0.547324576413029
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (138, 175)
train = (1.0930827623319526, 1.8494560303199754)
scores = (0.59400472263584814, 0.56561380319457422)
score = 0.5798092629152112
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (183, 619)
train = (1.0853052385810336, 1.7952033742488367)
scores = (0.5731253343813737, 0.52233693113711288)
score = 0.5477311327592433
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (138, 175)
train = (1.0930827623319526, 1.8494560303199754)
scores = (0.59400472263584814, 0.56561380319457422)
score = 0.5798092629152112
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (127, 271)
train = (1.0682649735909353, 1.7901925004700103)
scores = (0.58264566630573011, 0.51335668408940849)
score = 0.5480011751975693
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (175, 272)
train = (1.3179407638684562, 1.9985899466653634)
scores = (0.59984980892286999, 0.58685640963808139)
score = 0.5933531092804757
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 456)
train = (1.087023655361935, 1.7663480283258512)
scores = (0.5720674915913101, 0.50282078992575507)
score = 0.5374441407585326
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (175, 272)
train = (1.3179407638684562, 1.9985899466653634)
scores = (0.59984980892286999, 0.58685640963808139)
score = 0.5933531092804757
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (412, 205)
train = (1.3480642866486592, 1.8279986604343652)
scores = (0.62385292170127193, 0.50254811014480916)
score = 0.5632005159230405
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (171, 490)
train = (1.4225160053580335, 2.2794639464152966)
scores = (0.59735567829948, 0.62821109051434953)
score = 0.6127833844069148
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (281, 536)
train = (1.2743686050417311, 1.8459277119041244)
scores = (0.59730017185528617, 0.5073538169896108)
score = 0.5523269944224485
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (171, 490)
train = (1.4225160053580335, 2.2794639464152966)
scores = (0.59735567829948, 0.62821109051434953)
score = 0.6127833844069148
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (127, 271)
train = (1.0682649735909353, 1.7901925004700103)
scores = (0.58264566630573011, 0.51335668408940849)
score = 0.5480011751975693
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 442)
train = (0.93327101254169942, 1.9332643197618833)
scores = (0.61182272452997766, 0.60860349857008822)
score = 0.6102131115500329
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 456)
train = (1.0870236553619346, 1.7663480283258521)
scores = (0.57206749159131032, 0.50282078992575518)
score = 0.5374441407585328
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 442)
train = (0.93327101254169942, 1.9332643197618833)
scores = (0.61182272452997766, 0.60860349857008822)
score = 0.6102131115500329
>>>  k = 20 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (255, 292)
train = (1.5288766474005764, 1.9920949871965605)
scores = (0.62390851328140928, 0.54204662963071482)
score = 0.5829775714560621
>>>  k = 21 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 221)
train = (1.7399528955560315, 2.4296813055138435)
scores = (0.5943587916922326, 0.61277064352431898)
score = 0.6035647176082758
>>>  k = 22 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (319, 491)
train = (1.3128714520958784, 1.8237224252704025)
scores = (0.59169656019705019, 0.50979790428780258)
score = 0.5507472322424264
>>>  k = 23 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (104, 221)
train = (1.7399528955560315, 2.4296813055138435)
scores = (0.5943587916922326, 0.61277064352431898)
score = 0.6035647176082758
>>>  k = 24 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (127, 271)
train = (1.0682649735909353, 1.7901925004700106)
scores = (0.58264566630573011, 0.51335668408940827)
score = 0.5480011751975692
>>>  k = 25 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (175, 272)
train = (1.3179407638684562, 1.9985899466653634)
scores = (0.59984980892286965, 0.58685640963808094)
score = 0.5933531092804754
>>>  k = 26 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 456)
train = (1.087023655361935, 1.7663480283258515)
scores = (0.5720674915913101, 0.50282078992575541)
score = 0.5374441407585328
>>>  k = 27 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (175, 272)
train = (1.3179407638684562, 1.9985899466653634)
scores = (0.59984980892286965, 0.58685640963808094)
score = 0.5933531092804754
>>> t = 1204 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2012.0, 2012.75, 2013.25, 2013.0, 2013.5, 2014.25, 2009.25, 2010.75, 2011.25, 2009.0, 2013.75, 2014.0}), frozenset({2010.5, 2015.0, 2011.5, 2011.75, 2012.5, 2009.75, 2014.5, 2009.5, 2010.0, 2011.0, 2012.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 562)
train = (0.91027432717292067, 2.0509569483483134)
scores = (0.48007729856532388, 0.57536481393008054)
score = 0.5277210562477022
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (409, 205)
train = (1.0680730385443065, 1.8234457890893807)
scores = (0.57267949051369316, 0.51376817720778312)
score = 0.5432238338607381
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (180, 516)
train = (1.0480313690153242, 1.6424294885728705)
scores = (0.51749909288357565, 0.55177627237436822)
score = 0.5346376826289719
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (409, 205)
train = (1.0680730385443065, 1.8234457890893807)
scores = (0.57267949051369316, 0.51376817720778312)
score = 0.5432238338607381
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (58, 246)
train = (1.0162561612102667, 1.9395377523979003)
scores = (0.49716693070911594, 0.55460135044460168)
score = 0.5258841405768588
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 130)
train = (0.74934941571486857, 2.0402405408579134)
scores = (0.50501660441953422, 0.55099867644020484)
score = 0.5280076404298695
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (181, 305)
train = (1.1206836607112196, 1.5430352610475409)
scores = (0.51962173210817297, 0.54669160034422437)
score = 0.5331566662261986
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (181, 305)
train = (1.1206836607112196, 1.5430352610475409)
scores = (0.51962173210817297, 0.54669160034422437)
score = 0.5331566662261986
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (53, 695)
train = (1.0753105968927985, 2.5569661225605143)
scores = (0.49838515204786116, 0.61733135387505622)
score = 0.5578582529614586
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 201)
train = (0.89827707113004851, 2.4857954492903525)
scores = (0.52575826828138272, 0.56339525850983396)
score = 0.5445767633956083
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (184, 424)
train = (1.187519089519905, 1.8599766954731607)
scores = (0.53316532277979345, 0.56947281056144894)
score = 0.5513190666706211
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (53, 695)
train = (1.0753105968927985, 2.5569661225605143)
scores = (0.49838515204786116, 0.61733135387505622)
score = 0.5578582529614586
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (164, 163)
train = (1.1261507633924179, 1.9969604492238902)
scores = (0.54673227774841049, 0.55314512317494458)
score = 0.5499387004616776
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 300)
train = (1.0308196398391085, 2.7320309986605218)
scores = (0.5389589295104652, 0.57418838127625793)
score = 0.5565736553933616
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (166, 318)
train = (1.2041300661012846, 1.7123946651149977)
scores = (0.52821329724604504, 0.55827344564035875)
score = 0.5432433714432019
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (8, 300)
train = (1.0308196398391085, 2.7320309986605218)
scores = (0.5389589295104652, 0.57418838127625793)
score = 0.5565736553933616
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (53, 695)
train = (1.0753105968928007, 2.5569661225605147)
scores = (0.4983851520478616, 0.61733135387505622)
score = 0.5578582529614589
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (327, 292)
train = (1.1401286605799197, 2.4052656694556083)
scores = (0.56727918407289635, 0.57368582745546659)
score = 0.5704825057641815
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (184, 424)
train = (1.187519089519905, 1.8599766954731605)
scores = (0.53316532277979356, 0.56947281056144861)
score = 0.5513190666706211
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (327, 292)
train = (1.1401286605799197, 2.4052656694556083)
scores = (0.56727918407289635, 0.57368582745546659)
score = 0.5704825057641815
>>> t = 1300 ===================================================================================================
(pair) len(F.columns) = 202
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.5, 2012.75, 2009.25, 2014.75, 2009.0, 2010.25, 2011.25, 2009.75, 2013.5, 2014.5, 2015.0}), frozenset({2011.75, 2012.25, 2012.5, 2013.25, 2013.75, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (787, 278)
train = (1.1773305168790742, 1.3913183815386574)
scores = (0.42056180073931282, 0.56518053056227813)
score = 0.4928711656507955
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (318, 279)
train = (1.0231557501432269, 1.5192594205513117)
scores = (0.40536076188615444, 0.54050630221365725)
score = 0.47293353204990585
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (846, 397)
train = (1.1810453525151063, 1.4534929186460934)
scores = (0.41698082101465206, 0.60071461317367303)
score = 0.5088477170941625
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (846, 397)
train = (1.1810453525151063, 1.4534929186460934)
scores = (0.41698082101465206, 0.60071461317367303)
score = 0.5088477170941625
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (589, 242)
train = (1.2241951109568927, 1.5019025280096749)
scores = (0.4092004307921186, 0.58753264445499331)
score = 0.498366537623556
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (521, 125)
train = (1.3644722931007449, 1.5166324790421037)
scores = (0.45004297193924964, 0.568113668836431)
score = 0.5090783203878403
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (616, 288)
train = (1.2413281720517761, 1.4702601870283174)
scores = (0.41392249073992793, 0.59597375415006215)
score = 0.504948122444995
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (521, 125)
train = (1.3644722931007449, 1.5166324790421037)
scores = (0.45004297193924964, 0.568113668836431)
score = 0.5090783203878403
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (535, 138)
train = (1.2889656089434041, 1.5082500354628605)
scores = (0.41397744126558206, 0.57147162703748722)
score = 0.4927245341515346
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (702, 165)
train = (1.6538781355553724, 1.7251068697518646)
scores = (0.46720940716649428, 0.5706358829382856)
score = 0.5189226450523899
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (480, 209)
train = (1.289585410284203, 1.4542048683131754)
scores = (0.41249886472234037, 0.59995515881752404)
score = 0.5062270117699322
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (702, 165)
train = (1.6538781355553724, 1.7251068697518646)
scores = (0.46720940716649428, 0.5706358829382856)
score = 0.5189226450523899
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (710, 154)
train = (1.4329422615344296, 1.5773602201948558)
scores = (0.43109905337656973, 0.57386201444342855)
score = 0.5024805339099991
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (612, 100)
train = (1.7393890922468016, 1.7318602403284145)
scores = (0.46205366833475048, 0.55715340819011727)
score = 0.5096035382624339
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (664, 200)
train = (1.4537678482222167, 1.4648795712664262)
scores = (0.43681667658812612, 0.58955866663386558)
score = 0.5131876716109959
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (664, 200)
train = (1.4537678482222167, 1.4648795712664262)
scores = (0.43681667658812612, 0.58955866663386558)
score = 0.5131876716109959
>>> t = 1301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2011.25, 2009.25, 2013.0, 2014.75, 2014.0, 2009.5, 2010.0, 2011.5, 2009.75, 2013.75, 2014.25, 2015.0}), frozenset({2010.25, 2011.75, 2012.25, 2012.5, 2012.75, 2013.5, 2009.0, 2010.75, 2011.0, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (197, 131)
train = (1.2566161278914332, 0.9824618438591457)
scores = (0.57345680328911042, 0.43603150347899544)
score = 0.5047441533840529
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 188)
train = (1.1610909564711229, 0.97762024701841388)
scores = (0.52279186724227344, 0.42848171629354875)
score = 0.47563679176791107
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (193, 418)
train = (1.2036273025629498, 1.1584755380144731)
scores = (0.56217037315236407, 0.47050150797160056)
score = 0.5163359405619823
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (193, 418)
train = (1.2036273025629498, 1.1584755380144731)
scores = (0.56217037315236407, 0.47050150797160056)
score = 0.5163359405619823
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (167, 163)
train = (1.3744139685644245, 1.0943774832871169)
scores = (0.58379450317966319, 0.44899888499336599)
score = 0.5163966940865146
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (54, 166)
train = (1.0851806790264906, 1.102578054936092)
scores = (0.52131456917337038, 0.43675531724036276)
score = 0.47903494320686657
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (243, 299)
train = (1.3737817056589514, 1.1870879951801423)
scores = (0.5939539625182938, 0.48025538935569667)
score = 0.5371046759369953
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (243, 299)
train = (1.3737817056589514, 1.1870879951801423)
scores = (0.5939539625182938, 0.48025538935569667)
score = 0.5371046759369953
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 133)
train = (1.4665617784491753, 1.1427914066252642)
scores = (0.57449606279426901, 0.4565286494891807)
score = 0.5155123561417249
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (151, 142)
train = (1.6176948089014351, 1.1936410143811733)
scores = (0.5448024669404401, 0.4425162831749534)
score = 0.49365937505769675
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (245, 290)
train = (1.4541793873256721, 1.2630281756521453)
scores = (0.58319978647396886, 0.47484449279062613)
score = 0.5290221396322975
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (245, 290)
train = (1.4541793873256721, 1.2630281756521453)
scores = (0.58319978647396886, 0.47484449279062613)
score = 0.5290221396322975
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (92, 127)
train = (1.4653690128638479, 1.1948946023928451)
scores = (0.5731117646387377, 0.4586044941265191)
score = 0.5158581293826284
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (71, 163)
train = (1.5947611401346937, 1.3586206037543009)
scores = (0.53998585433624435, 0.44826883143522639)
score = 0.49412734288573534
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (278, 275)
train = (1.5333937214010613, 1.2924101204521694)
scores = (0.58976402025734298, 0.47809910238583908)
score = 0.533931561321591
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (278, 275)
train = (1.5333937214010613, 1.2924101204521694)
scores = (0.58976402025734298, 0.47809910238583908)
score = 0.533931561321591
>>> t = 1302 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2011.0, 2009.25, 2014.25, 2014.75, 2014.5, 2009.75, 2010.0, 2011.25, 2012.5, 2013.5, 2014.0, 2015.0}), frozenset({2010.75, 2011.75, 2012.25, 2012.75, 2009.0, 2013.25, 2013.75, 2009.5, 2010.25, 2011.5, 2012.0, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (329, 127)
train = (1.1930732237745643, 0.96496531746960879)
scores = (0.57001718559384229, 0.50119804760086595)
score = 0.5356076165973541
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (317, 497)
train = (1.2233928229741882, 1.1619335007968223)
scores = (0.53242541465804427, 0.49324156745717623)
score = 0.5128334910576102
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (602, 241)
train = (1.3066176395336622, 1.0811800578491912)
scores = (0.56783270025522936, 0.53235838354666176)
score = 0.5500955419009456
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (602, 241)
train = (1.3066176395336622, 1.0811800578491912)
scores = (0.56783270025522936, 0.53235838354666176)
score = 0.5500955419009456
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (407, 97)
train = (1.4181949975760446, 1.0217888688463377)
scores = (0.57202463341316556, 0.50960579429887121)
score = 0.5408152138560184
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (278, 57)
train = (1.4397182754558324, 0.95556065657657274)
scores = (0.52760264977298321, 0.45757779361499207)
score = 0.49259022169398764
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (454, 438)
train = (1.3833980213359092, 1.2676811824185275)
scores = (0.57603102031528475, 0.55720925107270802)
score = 0.5666201356939964
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (454, 438)
train = (1.3833980213359092, 1.2676811824185275)
scores = (0.57603102031528475, 0.55720925107270802)
score = 0.5666201356939964
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (530, 128)
train = (1.6543309472505292, 1.1334914868202659)
scores = (0.59518172571384254, 0.51963681260467209)
score = 0.5574092691592574
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (339, 196)
train = (1.744904187931916, 1.3061015840798273)
scores = (0.53472766240099445, 0.49584342056636793)
score = 0.5152855414836812
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (421, 180)
train = (1.4600163952672267, 1.1736548082485714)
scores = (0.58072703215070987, 0.55165295400258541)
score = 0.5661899930766476
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (421, 180)
train = (1.4600163952672267, 1.1736548082485714)
scores = (0.58072703215070987, 0.55165295400258541)
score = 0.5661899930766476
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (373, 194)
train = (1.6273803837221623, 1.2498680297244269)
scores = (0.58734319070449359, 0.54024691498956601)
score = 0.5637950528470298
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (158, 396)
train = (1.6127501672596056, 1.6622222140436427)
scores = (0.53276231529956786, 0.51480841958217549)
score = 0.5237853674408717
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (423, 309)
train = (1.514969718560301, 1.3221444420833786)
scores = (0.57623605217471474, 0.56013054611160584)
score = 0.5681832991431603
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (423, 309)
train = (1.514969718560301, 1.3221444420833786)
scores = (0.57623605217471474, 0.56013054611160584)
score = 0.5681832991431603
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (530, 128)
train = (1.6543309472505292, 1.1334914868202655)
scores = (0.59518172571384265, 0.51963681260467209)
score = 0.5574092691592574
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 370)
train = (1.0334379201790074, 1.2717737166251262)
scores = (0.50778044185023197, 0.47964928002503388)
score = 0.49371486093763295
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (421, 180)
train = (1.4600163952672272, 1.1736548082485714)
scores = (0.58072703215070987, 0.55165295400258552)
score = 0.5661899930766476
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (421, 180)
train = (1.4600163952672272, 1.1736548082485714)
scores = (0.58072703215070987, 0.55165295400258552)
score = 0.5661899930766476
>>> t = 1303 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2011.0, 2012.75, 2009.75, 2013.75, 2014.25, 2014.75, 2009.0, 2010.5, 2011.25, 2012.25, 2013.0, 2014.5}), frozenset({2010.75, 2015.0, 2011.75, 2012.5, 2009.25, 2013.5, 2009.5, 2010.25, 2011.5, 2012.0, 2013.25, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 59)
train = (0.87470803920695228, 0.89699195187674807)
scores = (0.47865103791016167, 0.55274292840972272)
score = 0.5156969831599422
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 47)
train = (0.74818592164110553, 0.85146779762789182)
scores = (0.3918386392797234, 0.51326109456941604)
score = 0.4525498669245697
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (867, 192)
train = (1.3064444750682573, 1.0718837023233416)
scores = (0.51576255558746786, 0.5862095032961987)
score = 0.5509860294418333
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (867, 192)
train = (1.3064444750682573, 1.0718837023233416)
scores = (0.51576255558746786, 0.5862095032961987)
score = 0.5509860294418333
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (644, 57)
train = (1.286401925228861, 0.98906666791252995)
scores = (0.53265701561056034, 0.57649627353926203)
score = 0.5545766445749112
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (71, 45)
train = (0.97911302955882695, 1.0244319219193772)
scores = (0.45983425912625858, 0.53134677909678663)
score = 0.49559051911152263
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 133)
train = (0.8918361407996882, 1.0700810273906145)
scores = (0.46816355405758853, 0.59195691191956001)
score = 0.5300602329885743
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (644, 57)
train = (1.286401925228861, 0.98906666791252995)
scores = (0.53265701561056034, 0.57649627353926203)
score = 0.5545766445749112
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 64)
train = (1.0827627335240821, 1.1051098481456594)
scores = (0.50426178111195286, 0.57471104934193873)
score = 0.5394864152269458
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (228, 48)
train = (1.3385037205950929, 1.1947988826668521)
scores = (0.50111918387672627, 0.53784112427322583)
score = 0.519480154074976
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (596, 198)
train = (1.4581812362080908, 1.2668365032490863)
scores = (0.52560793816070583, 0.60675626755673751)
score = 0.5661821028587217
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (596, 198)
train = (1.4581812362080908, 1.2668365032490863)
scores = (0.52560793816070583, 0.60675626755673751)
score = 0.5661821028587217
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (242, 148)
train = (1.2967356499325942, 1.3746736203659613)
scores = (0.51792611051649484, 0.58205622961435188)
score = 0.5499911700654234
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (141, 61)
train = (1.3513807267537465, 1.3623247344469125)
scores = (0.48919932487120388, 0.55313558951330388)
score = 0.5211674571922539
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (587, 195)
train = (1.5231053041474643, 1.2883826681382931)
scores = (0.53163274537014826, 0.60235312920039763)
score = 0.5669929372852729
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (587, 195)
train = (1.5231053041474643, 1.2883826681382931)
scores = (0.53163274537014826, 0.60235312920039763)
score = 0.5669929372852729
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 64)
train = (1.0827627335240808, 1.1051098481456594)
scores = (0.50426178111195086, 0.57471104934193862)
score = 0.5394864152269447
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 45)
train = (0.92165434749471975, 0.96521567220361515)
scores = (0.4644541209973661, 0.52302357384647424)
score = 0.4937388474219202
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (596, 198)
train = (1.4581812362080908, 1.2668365032490865)
scores = (0.52560793816070583, 0.60675337726114276)
score = 0.5661806577109243
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (596, 198)
train = (1.4581812362080908, 1.2668365032490865)
scores = (0.52560793816070583, 0.60675337726114276)
score = 0.5661806577109243
>>> t = 1304 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2011.25, 2012.25, 2009.25, 2009.5, 2013.25, 2009.0, 2010.75, 2011.0, 2012.75, 2013.5, 2014.75, 2015.25}), frozenset({2010.0, 2011.75, 2012.5, 2013.75, 2014.25, 2014.0, 2009.75, 2010.5, 2011.5, 2012.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (264, 101)
train = (0.98117363735432594, 1.1533361107938216)
scores = (0.41353052684760905, 0.58069729832208028)
score = 0.49711391258484466
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (931, 137)
train = (1.3015590938947115, 1.2913675950809993)
scores = (0.51475641077650258, 0.56743791749835515)
score = 0.5410971641374289
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (259, 136)
train = (1.0110958826135068, 1.1751903315287084)
scores = (0.39894713638750212, 0.55065262899230338)
score = 0.47479988268990275
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (931, 137)
train = (1.3015590938947115, 1.2913675950809993)
scores = (0.51475641077650258, 0.56743791749835515)
score = 0.5410971641374289
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (695, 146)
train = (1.2506220819248073, 1.41064765082543)
scores = (0.47169293468112228, 0.58646725076573203)
score = 0.5290800927234272
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (668, 104)
train = (1.4455093794816019, 1.4565100315448991)
scores = (0.53359251975435718, 0.59988167460171615)
score = 0.5667370971780367
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (264, 160)
train = (1.1087623537689979, 1.2920121378877858)
scores = (0.40237965898814193, 0.56767275677248263)
score = 0.48502620788031225
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (668, 104)
train = (1.4455093794816019, 1.4565100315448991)
scores = (0.53359251975435718, 0.59988167460171615)
score = 0.5667370971780367
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (420, 147)
train = (1.2346416015142934, 1.4627314655408878)
scores = (0.45985657804438718, 0.59719855533808786)
score = 0.5285275666912375
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (784, 121)
train = (1.7029767738861021, 1.6848620010794957)
scores = (0.54253266395632627, 0.60702706401847084)
score = 0.5747798639873986
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 174)
train = (1.1111380684169652, 1.3565753445962481)
scores = (0.39946780784043145, 0.55963586440678847)
score = 0.47955183612360996
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (784, 121)
train = (1.7029767738861021, 1.6848620010794957)
scores = (0.54253266395632627, 0.60702706401847084)
score = 0.5747798639873986
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (715, 185)
train = (1.4400347551430683, 1.5806721067407872)
scores = (0.5098536378043188, 0.59364238084288468)
score = 0.5517480093236018
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 102)
train = (1.1786614630905234, 1.7234926992489137)
scores = (0.39716591115372568, 0.61061320225816895)
score = 0.5038895567059474
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (257, 184)
train = (1.1966115228431562, 1.4040120741514237)
scores = (0.4099376974428392, 0.56965737758495261)
score = 0.4897975375138959
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (715, 185)
train = (1.4400347551430683, 1.5806721067407872)
scores = (0.5098536378043188, 0.59364238084288468)
score = 0.5517480093236018
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (420, 147)
train = (1.2346416015142874, 1.4627314655408874)
scores = (0.45985657804437213, 0.59719855533808774)
score = 0.5285275666912299
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (732, 118)
train = (1.4586130028869648, 1.4777965821612027)
scores = (0.5108010387563624, 0.59347595967068534)
score = 0.5521384992135239
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 174)
train = (1.1111380684169652, 1.3565753445962483)
scores = (0.39946780784043151, 0.55963485891668907)
score = 0.47955133337856026
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (732, 118)
train = (1.4586130028869648, 1.4777965821612027)
scores = (0.5108010387563624, 0.59347595967068534)
score = 0.5521384992135239
>>> t = 1400 ===================================================================================================
(pair) len(F.columns) = 42
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 123
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.5, 2012.5, 2009.25, 2013.75, 2013.25, 2014.0, 2009.75, 2010.25, 2011.0, 2012.0, 2013.0, 2014.75, 2015.0}), frozenset({2010.75, 2011.5, 2011.75, 2012.75, 2009.0, 2014.25, 2009.5, 2010.0, 2011.25, 2012.25, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (302, 191)
train = (1.2569719703132358, 0.91956856447804447)
scores = (0.53760683610361337, 0.35396047627262067)
score = 0.445783656188117
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (100, 3)
train = (1.0816738719491958, 0.69771059429092996)
scores = (0.52700961001560587, 0.35607407682803577)
score = 0.4415418434218208
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (166, 389)
train = (0.88464870949275121, 0.96246497131688891)
scores = (0.53991139958704271, 0.36034236657694901)
score = 0.4501268830819959
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (166, 389)
train = (0.88464870949275121, 0.96246497131688891)
scores = (0.53991139958704271, 0.36034236657694901)
score = 0.4501268830819959
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (324, 183)
train = (1.3937365800851436, 1.004858323444441)
scores = (0.54394962739696795, 0.36253204785906412)
score = 0.45324083762801604
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (78, 4)
train = (1.239048597346728, 0.8550414245164748)
scores = (0.53021806593151621, 0.36314073224500454)
score = 0.4466793990882604
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (184, 302)
train = (0.98805748284308315, 0.97754856102392662)
scores = (0.54591333432709155, 0.35916911425267539)
score = 0.45254122428988347
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (324, 183)
train = (1.3937365800851436, 1.004858323444441)
scores = (0.54394962739696795, 0.36253204785906412)
score = 0.45324083762801604
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (282, 229)
train = (1.4697580878499104, 1.1019847430757634)
scores = (0.54637453382392376, 0.36134648518839013)
score = 0.453860509506157
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 4)
train = (1.4757644284380922, 1.0015516864971714)
scores = (0.53417335619706874, 0.37220673678321214)
score = 0.45319004649014044
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (339, 324)
train = (1.2755748934077069, 1.0311278893551539)
scores = (0.5554618874506082, 0.3621919140339126)
score = 0.4588269007422604
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (339, 324)
train = (1.2755748934077069, 1.0311278893551539)
scores = (0.5554618874506082, 0.3621919140339126)
score = 0.4588269007422604
>>> t = 1401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 123
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.5, 2009.25, 2013.75, 2014.25, 2009.5, 2010.0, 2011.75, 2012.0, 2013.5, 2014.75, 2015.0}), frozenset({2010.5, 2011.5, 2012.75, 2009.75, 2013.25, 2014.0, 2009.0, 2010.25, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (96, 65)
train = (0.92430966703733364, 0.74592423069895264)
scores = (0.55137746652830488, 0.37228397025530174)
score = 0.46183071839180334
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 55)
train = (0.65695911615654357, 0.76528291682188787)
scores = (0.53491455798498744, 0.3634815908401392)
score = 0.4491980744125633
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (92, 59)
train = (0.77002915693329121, 0.6395938364987086)
scores = (0.56750467107803049, 0.35173281382560795)
score = 0.4596187424518192
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (96, 65)
train = (0.92430966703733364, 0.74592423069895264)
scores = (0.55137746652830488, 0.37228397025530174)
score = 0.46183071839180334
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 59)
train = (1.1663358970596014, 0.80272973005092985)
scores = (0.55369668982321307, 0.37447972819200176)
score = 0.4640882090076074
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 26)
train = (1.335192108271086, 0.87724089787795312)
scores = (0.54116131605462103, 0.38042946058993909)
score = 0.46079538832228006
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (95, 60)
train = (0.81115228701745945, 0.65371964578335129)
scores = (0.56668571196426232, 0.35211999963378199)
score = 0.4594028557990222
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (150, 59)
train = (1.1663358970596014, 0.80272973005092985)
scores = (0.55369668982321307, 0.37447972819200176)
score = 0.4640882090076074
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (67, 64)
train = (1.0043100454916893, 0.85333165868817851)
scores = (0.55312144556741027, 0.38142061659708387)
score = 0.4672710310822471
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (68, 29)
train = (1.4509794342880991, 1.0359374361318809)
scores = (0.54542414572803155, 0.3987182828609605)
score = 0.47207121429449606
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 59)
train = (0.81630683971126095, 0.65801205602169022)
scores = (0.56677005494579602, 0.35153137785460453)
score = 0.4591507164002003
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (68, 29)
train = (1.4509794342880991, 1.0359374361318809)
scores = (0.54542414572803155, 0.3987182828609605)
score = 0.47207121429449606
>>> t = 1402 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 123
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2011.5, 2011.25, 2012.5, 2009.75, 2013.75, 2014.0, 2014.75, 2009.25, 2011.75, 2012.75, 2013.0, 2014.5, 2015.0}), frozenset({2010.25, 2010.5, 2010.75, 2012.25, 2009.0, 2013.5, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (105, 215)
train = (0.87515408801063277, 1.0109062297076552)
scores = (0.48266963733758672, 0.43503191874273872)
score = 0.4588507780401627
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (84, 94)
train = (0.96840842183197162, 0.93472062540311962)
scores = (0.48142502563078726, 0.43206128823360823)
score = 0.45674315693219775
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (167, 146)
train = (0.80173527004641909, 0.82701402259041279)
scores = (0.48031904220339161, 0.4283674791618895)
score = 0.4543432606826405
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (105, 215)
train = (0.87515408801063277, 1.0109062297076552)
scores = (0.48266963733758672, 0.43503191874273872)
score = 0.4588507780401627
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 64)
train = (0.88257394381358056, 0.88436208815372819)
scores = (0.48101005640041955, 0.42289965700874899)
score = 0.45195485670458424
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 48)
train = (1.114441869847437, 1.0233880605097025)
scores = (0.48963162611164474, 0.43408394431514308)
score = 0.46185778521339393
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (230, 153)
train = (0.98032797489613732, 0.89584035583114785)
scores = (0.48200586420142627, 0.43154113371470831)
score = 0.4567734989580673
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (62, 48)
train = (1.114441869847437, 1.0233880605097025)
scores = (0.48963162611164474, 0.43408394431514308)
score = 0.46185778521339393
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 172)
train = (0.9429184939184494, 1.1592386335155531)
scores = (0.48144517446586432, 0.43522517287736401)
score = 0.45833517367161414
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (67, 51)
train = (1.3071110859854236, 1.1650042001434353)
scores = (0.48714991622429848, 0.44434228380097435)
score = 0.4657461000126364
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (146, 155)
train = (0.85878283121270682, 0.92918423116805715)
scores = (0.47618664119328125, 0.43327717395858523)
score = 0.45473190757593324
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (67, 51)
train = (1.3071110859854236, 1.1650042001434353)
scores = (0.48714991622429848, 0.44434228380097435)
score = 0.4657461000126364
>>> t = 1500 ===================================================================================================
(pair) len(F.columns) = 70
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 103
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc)
            & index[1,2, 0:1,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:] 
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP| Volatility)
        & [10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [9:,12:,18:,12:9,18:15,            15:9,21:15,12:3,21:12,15:3,21:9,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|aoo[10:])} 
            & (
                | Drawdown[1:,20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.75, 2009.0, 2013.5, 2014.75, 2009.5, 2010.5, 2011.0, 2012.5, 2013.25, 2014.5, 2015.25}), frozenset({2011.25, 2012.25, 2012.75, 2009.75, 2013.75, 2014.0, 2009.25, 2010.0, 2011.5, 2012.0, 2013.0, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.70718731990508799, 0.74020514149213201)
scores = (0.28292708286989515, 0.34181986632312117)
score = 0.31237347459650816
>>> t = 1501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 103
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc)
            & index[1,2, 0:1,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:] 
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP| Volatility)
        & [10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [9:,12:,18:,12:9,18:15,            15:9,21:15,12:3,21:12,15:3,21:9,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|aoo[10:])} 
            & (
                | Drawdown[1:,20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.5, 2012.0, 2012.25, 2012.5, 2009.75, 2010.5, 2011.75, 2009.25, 2013.0, 2014.75, 2015.25}), frozenset({2011.25, 2009.0, 2013.5, 2013.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.75, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 1)
train = (0.80135686523713368, 0.75795742228192353)
scores = (0.4312567493538893, 0.18805875140038483)
score = 0.30965775037713705
>>> t = 1600 ===================================================================================================
(pair) len(F.columns) = 37
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 42
0
#<>#
    <>~Market & (
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Drawdown[ 10:5,20:10] 
                | Since{Max & index[0,10]} 
                | Drawup[10:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2012.75, 2009.25, 2009.5, 2013.75, 2013.0, 2009.0, 2010.5, 2011.25, 2012.0, 2013.25, 2014.0}), frozenset({2015.0, 2011.5, 2011.75, 2012.5, 2014.5, 2014.25, 2009.75, 2010.0, 2011.0, 2012.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 1)
train = (0.79466088504295995, 0.64433414161839242)
scores = (0.11279989174435054, 0.13692282645648785)
score = 0.12486135910041919
>>> t = 1601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 42
0
#<>#
    <>~Market & (
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Drawdown[ 10:5,20:10] 
                | Since{Max & index[0,10]} 
                | Drawup[10:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2012.75, 2012.25, 2013.25, 2013.0, 2014.0, 2009.25, 2010.5, 2011.25, 2009.0, 2013.75, 2014.75}), frozenset({2015.0, 2011.5, 2011.75, 2012.5, 2009.75, 2014.25, 2009.5, 2010.0, 2011.0, 2012.0, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 20)
train = (0.82036652042727098, 0.87285472415035481)
scores = (0.1499602859808013, 0.14214819245192939)
score = 0.14605423921636534
>>> t = 1700 ===================================================================================================
(pair) len(F.columns) = 43
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,10:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Drawup[1:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.5, 2011.25, 2011.75, 2012.0, 2012.75, 2014.25, 2014.5, 2014.0, 2010.75, 2011.0, 2012.25, 2013.75, 2014.75}), frozenset({2010.25, 2010.5, 2015.0, 2009.0, 2009.25, 2013.25, 2013.5, 2009.75, 2009.5, 2010.0, 2012.5, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (141, 2)
train = (1.110031519642066, 0.60651927797714567)
scores = (0.4638206793946425, 0.31091745762003831)
score = 0.38736906850734043
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (57, 6)
train = (1.3078490275157779, 0.61968396396035019)
scores = (0.40782759460842649, 0.3207484118335267)
score = 0.3642880032209766
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (484, 547)
train = (1.3358849913182536, 1.0186538041038891)
scores = (0.47496176312040206, 0.40520389729100964)
score = 0.4400828302057058
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (484, 547)
train = (1.3358849913182536, 1.0186538041038891)
scores = (0.47496176312040206, 0.40520389729100964)
score = 0.4400828302057058
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 9)
train = (1.0930293189090134, 0.69963644681008075)
scores = (0.44932956431416149, 0.29492003928156613)
score = 0.3721248017978638
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 2)
train = (1.4710578677960153, 0.69055144191040674)
scores = (0.40423007314870391, 0.34333157742533033)
score = 0.3737808252870171
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (620, 495)
train = (1.5403460037600241, 1.089731927225196)
scores = (0.49848178563454404, 0.40312030512333269)
score = 0.4508010453789384
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (620, 495)
train = (1.5403460037600241, 1.089731927225196)
scores = (0.49848178563454404, 0.40312030512333269)
score = 0.4508010453789384
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (142, 461)
train = (1.3467862321483808, 1.0900102302698855)
scores = (0.46623266634432603, 0.41181664608606877)
score = 0.4390246562151974
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (140, 2)
train = (1.7518352559000463, 0.810595920584814)
scores = (0.4260048636023358, 0.34173313643551245)
score = 0.3838690000189241
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (257, 420)
train = (1.2608336061951031, 1.1313336076715848)
scores = (0.46823492908336212, 0.41053042576512339)
score = 0.43938267742424275
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (257, 420)
train = (1.2608336061951031, 1.1313336076715848)
scores = (0.46823492908336212, 0.41053042576512339)
score = 0.43938267742424275
>>> t = 1701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,10:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Drawup[1:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.0, 2009.0, 2013.5, 2014.75, 2014.0, 2009.75, 2010.0, 2011.75, 2012.75, 2013.75, 2014.5, 2015.0}), frozenset({2010.5, 2010.75, 2011.5, 2012.25, 2012.5, 2009.25, 2013.25, 2009.5, 2010.25, 2011.25, 2012.0, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (716, 81)
train = (1.1868511390991392, 0.74768224552647855)
scores = (0.39339026378479108, 0.53009086832759911)
score = 0.46174056605619507
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (505, 197)
train = (1.0875270430243713, 0.95639288620879426)
scores = (0.37575413342461117, 0.46361546717396351)
score = 0.41968480029928734
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (599, 161)
train = (1.0699257277126057, 0.89049715560591824)
scores = (0.35749402633110955, 0.51311564804012366)
score = 0.43530483718561663
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (716, 81)
train = (1.1868511390991392, 0.74768224552647855)
scores = (0.39339026378479108, 0.53009086832759911)
score = 0.46174056605619507
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (527, 117)
train = (1.2086511158494191, 0.92855555789428568)
scores = (0.39028627591844262, 0.53303873189371676)
score = 0.46166250390607966
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (753, 238)
train = (1.4026090137549014, 1.1808941653206935)
scores = (0.39106860626306383, 0.46194220379391476)
score = 0.4265054050284893
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (605, 17)
train = (1.1699380098226788, 0.57472205138069421)
scores = (0.36493311311531723, 0.50893622904074753)
score = 0.4369346710780324
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (527, 117)
train = (1.2086511158494191, 0.92855555789428568)
scores = (0.39028627591844262, 0.53303873189371676)
score = 0.46166250390607966
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (459, 30)
train = (1.2852923626830661, 0.80769761121644379)
scores = (0.39487968250340044, 0.53236174786157153)
score = 0.463620715182486
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (431, 309)
train = (1.4219457718390232, 1.4062666874037202)
scores = (0.38278546188213786, 0.47978724394054711)
score = 0.4312863529113425
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (645, 42)
train = (1.2970963074511965, 0.75831034069191872)
scores = (0.37104985973671839, 0.52265593823031176)
score = 0.4468528989835151
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (459, 30)
train = (1.2852923626830661, 0.80769761121644379)
scores = (0.39487968250340044, 0.53236174786157153)
score = 0.463620715182486
>>> t = 1702 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,10:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Drawup[1:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2015.0, 2011.25, 2011.0, 2013.75, 2014.0, 2009.25, 2010.5, 2011.75, 2012.25, 2013.5, 2014.75, 2015.25}), frozenset({2010.25, 2012.5, 2012.75, 2009.0, 2009.75, 2013.25, 2014.25, 2009.5, 2010.0, 2011.5, 2012.0, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (369, 50)
train = (1.2342738879431137, 0.78635476235644797)
scores = (0.46148950524131238, 0.46891725478521729)
score = 0.46520338001326483
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (364, 108)
train = (1.2191572926990117, 0.81940419947444421)
scores = (0.42732782325313429, 0.40188538188516393)
score = 0.4146066025691491
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (743, 229)
train = (1.3762753741067393, 0.95646660218322599)
scores = (0.46756828989579591, 0.51309674722478738)
score = 0.49033251856029164
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (743, 229)
train = (1.3762753741067393, 0.95646660218322599)
scores = (0.46756828989579591, 0.51309674722478738)
score = 0.49033251856029164
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (307, 60)
train = (1.3185939320623541, 0.91340892482842939)
scores = (0.4449995525547028, 0.49365525016939055)
score = 0.46932740136204665
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (106, 127)
train = (1.1814035858884753, 0.9180476080428589)
scores = (0.41226114084941046, 0.38647291482545548)
score = 0.39936702783743294
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (729, 175)
train = (1.5363162450385355, 0.96945553829796838)
scores = (0.47417268556966868, 0.51313481549435591)
score = 0.4936537505320123
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (729, 175)
train = (1.5363162450385355, 0.96945553829796838)
scores = (0.47417268556966868, 0.51313481549435591)
score = 0.4936537505320123
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (425, 55)
train = (1.5108947141944782, 0.96411146085481747)
scores = (0.46148055733722493, 0.50143309462119656)
score = 0.48145682597921075
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (219, 67)
train = (1.5066824442766031, 0.98746873006202229)
scores = (0.42765457273043633, 0.39276311006683828)
score = 0.41020884139863734
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (543, 217)
train = (1.5382495300160819, 1.0925499066258633)
scores = (0.47382124477274851, 0.51434088791206722)
score = 0.4940810663424079
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (543, 217)
train = (1.5382495300160819, 1.0925499066258633)
scores = (0.47382124477274851, 0.51434088791206722)
score = 0.4940810663424079
>>> t = 1800 ===================================================================================================
(pair) len(F.columns) = 29
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2015.0, 2011.25, 2012.75, 2009.75, 2013.5, 2009.0, 2010.75, 2011.75, 2012.5, 2013.0, 2014.5, 2015.25}), frozenset({2010.5, 2011.5, 2012.25, 2009.25, 2013.75, 2014.25, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 4)
train = (0.76617242443810285, 0.85357308285488853)
scores = (0.21403255149146752, -0.0082699557666661809)
score = 0.10288129786240068
>>> t = 1801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2012.0, 2012.5, 2009.25, 2014.25, 2014.5, 2009.5, 2010.0, 2011.25, 2012.75, 2014.75, 2015.25}), frozenset({2010.25, 2011.5, 2009.75, 2013.25, 2013.5, 2013.75, 2009.0, 2010.75, 2011.0, 2012.25, 2013.0, 2014.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 2)
train = (0.76406704092416555, 0.50505063286060692)
scores = (0.22899357594490624, 0.14355431352477929)
score = 0.18627394473484277
>>> t = 1900 ===================================================================================================
(pair) len(F.columns) = 43
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 88
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,9:,12:,18:,6:3,12:9,18:15,12:6,21:15,18:9,21:12,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2012.25, 2012.5, 2009.75, 2013.75, 2014.75, 2009.0, 2010.0, 2011.75, 2012.0, 2013.0, 2014.25, 2015.25}), frozenset({2010.75, 2010.5, 2011.5, 2009.25, 2013.5, 2014.0, 2009.5, 2010.25, 2011.25, 2012.75, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 162)
train = (0.66105185539242839, 1.1382596936401355)
scores = (0.44349411870444577, 0.43331902689043617)
score = 0.438406572797441
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 96)
train = (0.8644429839590958, 1.1646168778234134)
scores = (0.48494734872354972, 0.41576146427337202)
score = 0.45035440649846087
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 223)
train = (1.0552135688392019, 0.99328170103078395)
scores = (0.49891858485461837, 0.37213408874502962)
score = 0.435526336799824
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (63, 96)
train = (0.8644429839590958, 1.1646168778234134)
scores = (0.48494734872354972, 0.41576146427337202)
score = 0.45035440649846087
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 187)
train = (0.68506038251208368, 1.2873340688237798)
scores = (0.4549373237734155, 0.43602877668130441)
score = 0.44548305022735996
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 54)
train = (0.97239964076607377, 1.2655064993199163)
scores = (0.48512085091699347, 0.42364621800431362)
score = 0.45438353446065355
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (174, 188)
train = (1.1883674212229263, 1.0168452915178294)
scores = (0.50310038044799665, 0.38166744847132295)
score = 0.4423839144596598
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (64, 54)
train = (0.97239964076607377, 1.2655064993199163)
scores = (0.48512085091699347, 0.42364621800431362)
score = 0.45438353446065355
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 182)
train = (0.79141393770059409, 1.4125309145946607)
scores = (0.46800351751523234, 0.44378689199045152)
score = 0.45589520475284195
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 85)
train = (1.0812952984028859, 1.5789266264044084)
scores = (0.48324636818607031, 0.44649790375221488)
score = 0.46487213596914256
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (146, 140)
train = (1.2824913007686114, 0.97045357412336142)
scores = (0.50987713162720227, 0.38090808115340252)
score = 0.4453926063903024
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (65, 85)
train = (1.0812952984028859, 1.5789266264044084)
scores = (0.48324636818607031, 0.44649790375221488)
score = 0.46487213596914256
>>> t = 1901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 88
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,9:,12:,18:,6:3,12:9,18:15,12:6,21:15,18:9,21:12,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.25, 2009.5, 2013.0, 2013.25, 2014.0, 2009.25, 2010.25, 2011.0, 2012.0, 2013.5, 2014.25, 2015.25}), frozenset({2010.5, 2011.75, 2012.5, 2012.75, 2009.75, 2014.5, 2009.0, 2010.75, 2011.5, 2012.25, 2013.75, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (107, 166)
train = (1.2215815251128452, 0.93580100764077578)
scores = (0.4685873362804136, 0.39271065433288277)
score = 0.4306489953066482
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (75, 35)
train = (1.1379813458340007, 0.76768783072659108)
scores = (0.46998756655660295, 0.44340321365502011)
score = 0.4566953901058115
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 141)
train = (1.1556741155187833, 0.86403077200866885)
scores = (0.46077062117682549, 0.37256927013811353)
score = 0.4166699456574695
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (75, 35)
train = (1.1379813458340007, 0.76768783072659108)
scores = (0.46998756655660295, 0.44340321365502011)
score = 0.4566953901058115
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 213)
train = (1.3092422140359818, 1.0785158373911272)
scores = (0.47118266979408624, 0.40172127745838804)
score = 0.4364519736262371
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 31)
train = (1.2372177188490809, 0.89602651928673083)
scores = (0.46297134044939608, 0.46509140190549347)
score = 0.46403137117744475
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 157)
train = (1.2402867766837224, 0.99414222397303176)
scores = (0.46652632981160874, 0.39437118959284861)
score = 0.4304487597022287
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (61, 31)
train = (1.2372177188490809, 0.89602651928673083)
scores = (0.46297134044939608, 0.46509140190549347)
score = 0.46403137117744475
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (134, 64)
train = (1.4496288249645246, 1.0392442045157777)
scores = (0.47818337387083287, 0.39547813218542865)
score = 0.4368307530281308
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (93, 27)
train = (1.4442690067980446, 0.99383065093250744)
scores = (0.46043576926700935, 0.48571042771781153)
score = 0.4730730984924104
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (74, 138)
train = (1.0756562549125313, 1.0348274067883689)
scores = (0.44973588356220373, 0.3920744921019389)
score = 0.4209051878320713
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (93, 27)
train = (1.4442690067980446, 0.99383065093250744)
scores = (0.46043576926700935, 0.48571042771781153)
score = 0.4730730984924104
>>> t = 1902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 88
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,9:,12:,18:,6:3,12:9,18:15,12:6,21:15,18:9,21:12,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2011.0, 2009.0, 2009.75, 2014.5, 2009.25, 2010.0, 2011.75, 2012.25, 2013.25, 2014.75, 2015.25}), frozenset({2010.75, 2011.5, 2012.5, 2012.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.25, 2011.25, 2012.0, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 91)
train = (0.87032325042374636, 1.0852925270481073)
scores = (0.36766199975468239, 0.49727470755284969)
score = 0.432468353653766
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (30, 70)
train = (0.90126990912153693, 1.2026021159154425)
scores = (0.40575965902144168, 0.47155977769696339)
score = 0.43865971835920253
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (277, 173)
train = (1.0458962673063066, 1.0825531414236755)
scores = (0.40654679828337681, 0.47928576681094076)
score = 0.44291628254715876
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (277, 173)
train = (1.0458962673063066, 1.0825531414236755)
scores = (0.40654679828337681, 0.47928576681094076)
score = 0.44291628254715876
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (67, 22)
train = (0.96140740854819573, 0.84857920862294911)
scores = (0.38619533806002498, 0.46813321732880081)
score = 0.4271642776944129
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 44)
train = (0.97907546060414541, 1.3111946965379175)
scores = (0.43375024648897159, 0.43834423315388388)
score = 0.43604723982142773
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (160, 254)
train = (0.99283939876249927, 1.3552307913785508)
scores = (0.40029595343407115, 0.50216596861641605)
score = 0.4512309610252436
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (160, 254)
train = (0.99283939876249927, 1.3552307913785508)
scores = (0.40029595343407115, 0.50216596861641605)
score = 0.4512309610252436
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 136)
train = (0.89040560755106024, 1.484385777791785)
scores = (0.38058289838201942, 0.4993824760193678)
score = 0.4399826872006936
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 81)
train = (1.16913937597934, 1.6371144466088225)
scores = (0.43201004905100543, 0.45708771976186874)
score = 0.4445488844064371
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (273, 311)
train = (1.260131011681938, 1.5591275110460199)
scores = (0.43452390214559683, 0.51905483017090071)
score = 0.47678936615824874
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (273, 311)
train = (1.260131011681938, 1.5591275110460199)
scores = (0.43452390214559683, 0.51905483017090071)
score = 0.47678936615824874
>>> t = 2000 ===================================================================================================
(pair) len(F.columns) = 7
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 17
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [12:,15:,18:,9:6,12:9,15:6,18:9,21:12,15:3,18:6] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2015.0, 2012.25, 2012.0, 2009.5, 2014.75, 2009.0, 2010.0, 2011.5, 2012.5, 2013.75, 2014.5, 2015.25}), frozenset({2010.5, 2011.25, 2011.75, 2009.75, 2013.25, 2013.5, 2014.0, 2009.25, 2010.75, 2011.0, 2012.75, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (341, 160)
train = (0.71435653210048189, 0.6503083969148542)
scores = (0.38561348392822054, 0.36007337083092938)
score = 0.372843427379575
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 78)
train = (0.57670369530402021, 0.78434196639568821)
scores = (0.36724001065853701, 0.34753896254140965)
score = 0.3573894865999733
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (328, 382)
train = (0.62199031452344589, 0.64641291679783641)
scores = (0.38748633678807681, 0.3730283451564726)
score = 0.3802573409722747
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (328, 382)
train = (0.62199031452344589, 0.64641291679783641)
scores = (0.38748633678807681, 0.3730283451564726)
score = 0.3802573409722747
>>> t = 2001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 17
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [12:,15:,18:,9:6,12:9,15:6,18:9,21:12,15:3,18:6] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2011.75, 2011.5, 2011.25, 2013.5, 2014.5, 2014.75, 2009.0, 2010.5, 2011.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.75, 2012.25, 2012.5, 2012.75, 2009.25, 2009.75, 2013.75, 2009.5, 2010.25, 2012.0, 2013.25, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (385, 43)
train = (0.77258287828795902, 0.53321430999991715)
scores = (0.25679217923473757, 0.45417131409478656)
score = 0.35548174666476207
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 15)
train = (0.635096446265762, 0.62643181271178772)
scores = (0.2428175998554512, 0.44061600651354282)
score = 0.34171680318449704
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (386, 57)
train = (0.66767873931668842, 0.41359816379164854)
scores = (0.26246222099615296, 0.46423436480964375)
score = 0.3633482929028984
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (386, 57)
train = (0.66767873931668842, 0.41359816379164854)
scores = (0.26246222099615296, 0.46423436480964375)
score = 0.3633482929028984
>>> t = 2100 ===================================================================================================
(pair) len(F.columns) = 98
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2012.0, 2012.25, 2009.75, 2013.5, 2014.5, 2009.25, 2010.75, 2011.5, 2009.0, 2013.25, 2014.0, 2015.0}), frozenset({2010.25, 2010.5, 2011.75, 2012.75, 2013.75, 2014.25, 2009.5, 2010.0, 2011.25, 2012.5, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 420)
train = (0.66475505291357351, 1.4689912967359611)
scores = (0.42160326247731439, 0.62431051659116943)
score = 0.5229568895342419
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 326)
train = (0.787951691380951, 1.6295752875581757)
scores = (0.41482274825049514, 0.62271134529769845)
score = 0.5187670467740968
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 635)
train = (0.52131206257786167, 1.4014242697427659)
scores = (0.41211545794877802, 0.60080141590461955)
score = 0.5064584369266988
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 420)
train = (0.66475505291357351, 1.4689912967359611)
scores = (0.42160326247731439, 0.62431051659116943)
score = 0.5229568895342419
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 281)
train = (0.70104719408506555, 1.5015143315848163)
scores = (0.43403461525620357, 0.63955922510924168)
score = 0.5367969201827226
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 201)
train = (0.88578275626180258, 1.7428328360748837)
scores = (0.42265051118616542, 0.61096076028617718)
score = 0.5168056357361713
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 435)
train = (0.52131206257786167, 1.3951179469822723)
scores = (0.41211545794877802, 0.59692454023424035)
score = 0.5045199990915092
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 281)
train = (0.70104719408506555, 1.5015143315848163)
scores = (0.43403461525620357, 0.63955922510924168)
score = 0.5367969201827226
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 263)
train = (0.7014649646496538, 1.6038334370300127)
scores = (0.43454125221721995, 0.63254987792194928)
score = 0.5335455650695846
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 337)
train = (0.99925084683108922, 2.250547048153666)
scores = (0.43359272156513473, 0.64842025267567682)
score = 0.5410064871204058
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 440)
train = (0.52131206257786167, 1.4704783482049535)
scores = (0.41211545794877802, 0.59937272712726652)
score = 0.5057440925380223
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 337)
train = (0.99925084683108922, 2.250547048153666)
scores = (0.43359272156513473, 0.64842025267567682)
score = 0.5410064871204058
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 253)
train = (0.7014649646496538, 1.6854344657399931)
scores = (0.43454125221721995, 0.62749183584728929)
score = 0.5310165440322546
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 244)
train = (1.095543914403047, 2.2874448819038489)
scores = (0.41274647517342622, 0.62502579884969567)
score = 0.5188861370115609
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 488)
train = (0.52131206257786167, 1.5913797520752577)
scores = (0.41211545794877802, 0.60280295251017535)
score = 0.5074592052294766
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 253)
train = (0.7014649646496538, 1.6854344657399931)
scores = (0.43454125221721995, 0.62749183584728929)
score = 0.5310165440322546
>>> t = 2101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.0, 2011.25, 2009.25, 2013.5, 2014.0, 2009.0, 2010.25, 2011.75, 2012.0, 2013.25, 2014.5, 2015.0}), frozenset({2010.5, 2010.75, 2012.5, 2012.75, 2009.75, 2013.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.25, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (298, 158)
train = (0.96531321829617711, 1.2266850270513838)
scores = (0.4337203979443604, 0.54739163600818685)
score = 0.4905560169762736
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (608, 65)
train = (1.1346733357534626, 1.2401810065890519)
scores = (0.45479045870783597, 0.52947577429272508)
score = 0.4921331165002805
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (277, 382)
train = (1.0351680350084977, 1.270345700974135)
scores = (0.39770230538783624, 0.54812791036137909)
score = 0.47291510787460767
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (608, 65)
train = (1.1346733357534626, 1.2401810065890519)
scores = (0.45479045870783597, 0.52947577429272508)
score = 0.4921331165002805
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (367, 309)
train = (1.063941244518819, 1.6600821867367312)
scores = (0.43457138179901988, 0.56863563312915899)
score = 0.5016035074640894
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (324, 232)
train = (1.1293716949808854, 1.9449192013980907)
scores = (0.44426232470345012, 0.57479978630452733)
score = 0.5095310555039887
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (233, 9)
train = (1.0756068054797772, 0.60117985286782871)
scores = (0.39923532001956469, 0.42716305185907516)
score = 0.4131991859393199
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (324, 232)
train = (1.1293716949808854, 1.9449192013980907)
scores = (0.44426232470345012, 0.57479978630452733)
score = 0.5095310555039887
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (180, 293)
train = (1.0504177171896061, 1.7513654182359779)
scores = (0.4232639162058236, 0.56161949466375916)
score = 0.4924417054347914
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (163, 113)
train = (1.1527317478244898, 1.8908557147934839)
scores = (0.43244666307836105, 0.56448787605331108)
score = 0.4984672695658361
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (224, 9)
train = (1.1031633751054013, 0.60165779810591247)
scores = (0.38850605502187291, 0.42709455735973695)
score = 0.40780030619080493
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (163, 113)
train = (1.1527317478244898, 1.8908557147934839)
scores = (0.43244666307836105, 0.56448787605331108)
score = 0.4984672695658361
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (174, 348)
train = (1.1022634399927911, 1.9427761734539581)
scores = (0.4296226989398973, 0.57708190561135675)
score = 0.503352302275627
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (238, 186)
train = (1.3006747785647772, 2.247487631979086)
scores = (0.44126855186596431, 0.59074377576523074)
score = 0.5160061638155975
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (247, 9)
train = (1.1411369395319002, 0.60165779810591247)
scores = (0.39345695619895105, 0.42709455735973706)
score = 0.410275756779344
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (238, 186)
train = (1.3006747785647772, 2.247487631979086)
scores = (0.44126855186596431, 0.59074377576523074)
score = 0.5160061638155975
>>> t = 2102 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2011.25, 2012.0, 2014.25, 2014.75, 2009.5, 2010.0, 2011.0, 2012.75, 2013.5, 2014.0, 2015.25}), frozenset({2011.5, 2012.5, 2009.25, 2009.75, 2013.25, 2013.75, 2009.0, 2010.5, 2011.75, 2012.25, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (352, 418)
train = (1.2147956751103874, 0.92022074858992631)
scores = (0.58758375610633773, 0.60389199009464634)
score = 0.5957378731004921
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (162, 562)
train = (1.2335287148886753, 1.0625048373466839)
scores = (0.5306938084329671, 0.60861542626595688)
score = 0.569654617349462
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (489, 471)
train = (1.1878317369731797, 0.97559240279311465)
scores = (0.61419658602725591, 0.58293571115075704)
score = 0.5985661485890065
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (489, 471)
train = (1.1878317369731797, 0.97559240279311465)
scores = (0.61419658602725591, 0.58293571115075704)
score = 0.5985661485890065
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (232, 204)
train = (1.2476549185756323, 0.8914126050609581)
scores = (0.57171635173200552, 0.59056288376246968)
score = 0.5811396177472377
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (300, 402)
train = (1.5726694630757163, 1.1543734868986602)
scores = (0.57282977650190692, 0.59267173954758989)
score = 0.5827507580247484
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (367, 390)
train = (1.1886758394376711, 1.0386687841751294)
scores = (0.61018038397303942, 0.58510869399343435)
score = 0.5976445389832369
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (367, 390)
train = (1.1886758394376711, 1.0386687841751294)
scores = (0.61018038397303942, 0.58510869399343435)
score = 0.5976445389832369
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (163, 494)
train = (1.2425922626042178, 1.0998153968446815)
scores = (0.57149949382114484, 0.62315742268374263)
score = 0.5973284582524437
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (411, 252)
train = (1.7836171785737873, 1.1728035156301615)
scores = (0.59588771485167302, 0.59263545294201836)
score = 0.5942615838968457
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (330, 285)
train = (1.2226381589304616, 1.0637622502975277)
scores = (0.61809784455629013, 0.58741380506360619)
score = 0.6027558248099482
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (330, 285)
train = (1.2226381589304616, 1.0637622502975277)
scores = (0.61809784455629013, 0.58741380506360619)
score = 0.6027558248099482
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (272, 409)
train = (1.3876600716403644, 1.1507570590361658)
scores = (0.58533943317843529, 0.62276831308178704)
score = 0.6040538731301112
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (433, 268)
train = (1.9273815335151898, 1.3067109343220977)
scores = (0.59922314754620543, 0.62644238411107755)
score = 0.6128327658286414
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (304, 264)
train = (1.2127680054080656, 1.0874604240517061)
scores = (0.60817599277179524, 0.58568290838517389)
score = 0.5969294505784846
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (433, 268)
train = (1.9273815335151898, 1.3067109343220977)
scores = (0.59922314754620543, 0.62644238411107755)
score = 0.6128327658286414
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 494)
train = (1.2605652549724826, 1.0998153968446818)
scores = (0.56680359982344064, 0.62315706418327954)
score = 0.5949803320033601
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (409, 253)
train = (1.6202634693095568, 1.0409308466064779)
scores = (0.60800899958406363, 0.59741743707854111)
score = 0.6027132183313024
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (330, 285)
train = (1.2226381589304616, 1.0637622502975281)
scores = (0.61809784455629013, 0.58741380506360641)
score = 0.6027558248099483
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (330, 285)
train = (1.2226381589304616, 1.0637622502975281)
scores = (0.61809784455629013, 0.58741380506360641)
score = 0.6027558248099483
>>>  k = 20 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (199, 435)
train = (1.4459096890520033, 1.5931207319458909)
scores = (0.57721333482628301, 0.64226960508217945)
score = 0.6097414699542312
>>>  k = 21 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (446, 281)
train = (2.4250347075954592, 2.0518410565994647)
scores = (0.59786011207625023, 0.65880687154879536)
score = 0.6283334918125227
>>>  k = 22 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (237, 305)
train = (1.1631160464890333, 1.1655702973569178)
scores = (0.59742074869133743, 0.58515192337851152)
score = 0.5912863360349245
>>>  k = 23 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (446, 281)
train = (2.4250347075954592, 2.0518410565994647)
scores = (0.59786011207625023, 0.65880687154879536)
score = 0.6283334918125227
>>>  k = 24 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 494)
train = (1.2605652549724826, 1.0998153968446818)
scores = (0.56680359982344075, 0.62316195169734911)
score = 0.5949827757603949
>>>  k = 25 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (306, 252)
train = (1.7017970593983529, 1.1728035156301615)
scores = (0.57625751280249315, 0.5926354529420188)
score = 0.584446482872256
>>>  k = 26 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (330, 285)
train = (1.2226381589304618, 1.0637622502975281)
scores = (0.61809784455629024, 0.58741380506360641)
score = 0.6027558248099483
>>>  k = 27 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (330, 285)
train = (1.2226381589304618, 1.0637622502975281)
scores = (0.61809784455629024, 0.58741380506360641)
score = 0.6027558248099483
>>> t = 2103 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.0, 2012.75, 2013.5, 2014.5, 2014.0, 2009.25, 2010.5, 2011.5, 2012.25, 2013.25, 2014.75, 2015.0}), frozenset({2010.25, 2010.75, 2012.5, 2009.0, 2009.75, 2013.75, 2009.5, 2010.0, 2011.25, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (319, 123)
train = (1.0486279515039909, 0.95236551708995321)
scores = (0.36367840700287485, 0.55965748714363373)
score = 0.4616679470732543
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (202, 94)
train = (1.0192588103807918, 0.87504107918377416)
scores = (0.32989926409292097, 0.54349947459163783)
score = 0.4366993693422794
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (293, 180)
train = (0.97387969045300093, 0.99801353486978306)
scores = (0.33685911418957781, 0.56362260723152424)
score = 0.450240860710551
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (319, 123)
train = (1.0486279515039909, 0.95236551708995321)
scores = (0.36367840700287485, 0.55965748714363373)
score = 0.4616679470732543
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (361, 69)
train = (1.2095859530164523, 0.98120015280894546)
scores = (0.37011485713299475, 0.55488751389107049)
score = 0.4625011855120326
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 157)
train = (1.1420357845025979, 1.0623369402433862)
scores = (0.33079209028021483, 0.55318064701277792)
score = 0.4419863686464964
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (245, 113)
train = (1.0176140038327142, 0.98858178079984149)
scores = (0.33191810212529749, 0.56508305396092096)
score = 0.4485005780431092
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (361, 69)
train = (1.2095859530164523, 0.98120015280894546)
scores = (0.37011485713299475, 0.55488751389107049)
score = 0.4625011855120326
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (278, 104)
train = (1.2472318375487941, 1.0784091610753417)
scores = (0.36090805852427055, 0.56431235578223937)
score = 0.46261020715325496
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (647, 113)
train = (1.8926161415870764, 1.1543772241131012)
scores = (0.38848321366992083, 0.54950014792512525)
score = 0.46899168079752307
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (434, 110)
train = (1.2501317268407, 1.0254119934679833)
scores = (0.34299849605481064, 0.5659433754188602)
score = 0.4544709357368354
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (647, 113)
train = (1.8926161415870764, 1.1543772241131012)
scores = (0.38848321366992083, 0.54950014792512525)
score = 0.46899168079752307
>>> t = 2104 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2012.0, 2012.5, 2009.5, 2013.25, 2013.75, 2014.75, 2009.0, 2010.0, 2011.25, 2012.25, 2013.5, 2014.5}), frozenset({2010.25, 2010.75, 2015.0, 2011.75, 2009.75, 2014.0, 2009.25, 2010.5, 2011.5, 2012.75, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 99)
train = (0.69750615254176529, 0.88012269318064285)
scores = (0.32977060730557878, 0.48342309296618102)
score = 0.4065968501358799
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 59)
train = (0.76707960005442266, 0.79244998755541163)
scores = (0.34986503794120472, 0.42975424090776548)
score = 0.3898096394244851
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (196, 110)
train = (1.0000495039861381, 0.84686331937761739)
scores = (0.43385715971706468, 0.52426824727482124)
score = 0.47906270349594293
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (196, 110)
train = (1.0000495039861381, 0.84686331937761739)
scores = (0.43385715971706468, 0.52426824727482124)
score = 0.47906270349594293
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 80)
train = (0.71960601200028396, 0.95209300253607632)
scores = (0.3425613375572189, 0.48788287961370652)
score = 0.4152221085854627
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 67)
train = (0.95373010060465679, 0.96208231664782229)
scores = (0.3515343088540745, 0.4492115866908683)
score = 0.4003729477724714
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (338, 221)
train = (1.1886476161132196, 1.1085457853114011)
scores = (0.45014170684819949, 0.53360222842847049)
score = 0.49187196763833496
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (338, 221)
train = (1.1886476161132196, 1.1085457853114011)
scores = (0.45014170684819949, 0.53360222842847049)
score = 0.49187196763833496
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 104)
train = (0.71960601200028396, 1.0860958830094403)
scores = (0.3425613375572189, 0.50484214595204047)
score = 0.4237017417546297
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 290)
train = (1.0586079790470491, 1.5540592137559837)
scores = (0.36872012399865861, 0.48540464113257409)
score = 0.42706238256561635
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (417, 105)
train = (1.2927568881030924, 0.945961375054854)
scores = (0.45707113670253152, 0.53329696768121948)
score = 0.4951840521918755
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (417, 105)
train = (1.2927568881030924, 0.945961375054854)
scores = (0.45707113670253152, 0.53329696768121948)
score = 0.4951840521918755
>>> t = 2105 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2012.75, 2009.0, 2013.5, 2014.75, 2014.25, 2009.75, 2010.5, 2011.25, 2009.5, 2013.75, 2014.5, 2015.0}), frozenset({2010.0, 2010.75, 2011.5, 2012.25, 2012.5, 2013.25, 2009.25, 2010.25, 2011.0, 2012.0, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (364, 135)
train = (1.0445436300809421, 1.0151160772422627)
scores = (0.4440732629247155, 0.46706948125256653)
score = 0.455571372088641
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 1)
train = (0.67240850778425076, 0.56545447456922215)
scores = (0.36825251455402042, 0.3684274838641054)
score = 0.3683399992090629
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (321, 127)
train = (0.96493978428317229, 0.98883547875809319)
scores = (0.44469921435537185, 0.48589037817604336)
score = 0.4652947962657076
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (321, 127)
train = (0.96493978428317229, 0.98883547875809319)
scores = (0.44469921435537185, 0.48589037817604336)
score = 0.4652947962657076
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (228, 108)
train = (1.0538463412415191, 1.1144626598935565)
scores = (0.44187834623580241, 0.45119611384487612)
score = 0.4465372300403393
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 80)
train = (0.75787748783646813, 1.100803498429054)
scores = (0.40687185831833056, 0.38429465538163959)
score = 0.3955832568499851
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (431, 113)
train = (1.1244470823925461, 1.0265549613294782)
scores = (0.45331907841660529, 0.47489933236163856)
score = 0.4641092053891219
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (431, 113)
train = (1.1244470823925461, 1.0265549613294782)
scores = (0.45331907841660529, 0.47489933236163856)
score = 0.4641092053891219
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (185, 162)
train = (1.0895710151927944, 1.2432508008733514)
scores = (0.44576738743846867, 0.45389191738258133)
score = 0.44982965241052497
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 1)
train = (0.88877558042470728, 0.89551062051331021)
scores = (0.43029987760902555, 0.34491605524727248)
score = 0.387607966428149
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 131)
train = (0.80719789936533626, 1.0963081361628386)
scores = (0.42828553310226097, 0.48431377056394281)
score = 0.4562996518331019
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 131)
train = (0.80719789936533626, 1.0963081361628386)
scores = (0.42828553310226097, 0.48431377056394281)
score = 0.4562996518331019
>>> t = 2200 ===================================================================================================
(pair) len(F.columns) = 70
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.5, 2012.5, 2009.75, 2013.5, 2014.25, 2009.25, 2015.25, 2011.75, 2012.25, 2013.0, 2014.75, 2015.0}), frozenset({2010.5, 2010.25, 2010.75, 2012.75, 2009.0, 2013.75, 2014.0, 2009.5, 2010.0, 2011.25, 2012.0, 2013.25, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 130)
train = (0.89366477281947498, 1.0437967692368098)
scores = (0.49075188243639656, 0.41688562480415237)
score = 0.45381875362027446
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 1)
train = (0.46973996136612872, 0.84909864545471603)
scores = (0.47245938361982215, 0.40200651903041429)
score = 0.4372329513251182
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 160)
train = (0.74435841838338568, 1.0667935928800529)
scores = (0.60343411168861516, 0.41566136318974495)
score = 0.50954773743918
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (25, 160)
train = (0.74435841838338568, 1.0667935928800529)
scores = (0.60343411168861516, 0.41566136318974495)
score = 0.50954773743918
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 101)
train = (0.81804520046100293, 1.1053080775918271)
scores = (0.5096604752679208, 0.42097874415305347)
score = 0.46531960971048714
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 1)
train = (0.99522145118252925, 0.96047583244755541)
scores = (0.47943131553529644, 0.31880864491383409)
score = 0.3991199802245653
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 100)
train = (0.92096587011339615, 1.0284386615094683)
scores = (0.61746089939118776, 0.4203976585103541)
score = 0.5189292789507709
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (47, 100)
train = (0.92096587011339615, 1.0284386615094683)
scores = (0.61746089939118776, 0.4203976585103541)
score = 0.5189292789507709
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 88)
train = (0.87179626824877865, 1.1503654881440739)
scores = (0.50818825812993618, 0.42903075333229235)
score = 0.46860950573111426
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 1)
train = (1.0408261913765078, 1.0989241384566546)
scores = (0.47570968856676021, 0.3537128105167765)
score = 0.41471124954176836
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (73, 133)
train = (1.0613891409206222, 1.095137172690464)
scores = (0.62505648598171015, 0.41762432485166984)
score = 0.52134040541669
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (73, 133)
train = (1.0613891409206222, 1.095137172690464)
scores = (0.62505648598171015, 0.41762432485166984)
score = 0.52134040541669
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 100)
train = (1.061604306946482, 1.204314073721704)
scores = (0.51870773354494493, 0.4297282287719878)
score = 0.47421798115846636
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 1)
train = (1.0949683361706586, 1.2419278395219304)
scores = (0.48714389719123385, 0.29875976899628576)
score = 0.3929518330937598
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 146)
train = (0.97935139468762933, 1.1130673634010517)
scores = (0.62111020306336506, 0.41786659615999661)
score = 0.5194883996116808
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (52, 146)
train = (0.97935139468762933, 1.1130673634010517)
scores = (0.62111020306336506, 0.41786659615999661)
score = 0.5194883996116808
>>> t = 2201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.25, 2009.75, 2013.0, 2013.5, 2014.0, 2009.0, 2010.25, 2011.75, 2012.75, 2013.75, 2014.75, 2015.0}), frozenset({2010.5, 2010.75, 2011.5, 2012.25, 2012.5, 2009.25, 2014.25, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 154)
train = (0.7579240444360219, 0.94013171169181897)
scores = (0.37389862908869542, 0.48269453295482384)
score = 0.4282965810217596
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 83)
train = (0.74973798771236511, 0.87772120269652887)
scores = (0.27594813554861686, 0.43787539165512296)
score = 0.35691176360186994
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 75)
train = (0.66517387465629974, 0.89243636050685393)
scores = (0.45443398733104845, 0.51143117629888235)
score = 0.4829325818149654
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (8, 75)
train = (0.66517387465629974, 0.89243636050685393)
scores = (0.45443398733104845, 0.51143117629888235)
score = 0.4829325818149654
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 98)
train = (0.93650533859405127, 1.0077204513938134)
scores = (0.39893694597711687, 0.50485956468796822)
score = 0.4518982553325426
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 73)
train = (0.92530368228391935, 1.0017076578673276)
scores = (0.28171657302551456, 0.44965470901600296)
score = 0.36568564102075873
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 54)
train = (0.6788010019816112, 0.89662730668134438)
scores = (0.45484615230315195, 0.50693372402180148)
score = 0.4808899381624767
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (8, 54)
train = (0.6788010019816112, 0.89662730668134438)
scores = (0.45484615230315195, 0.50693372402180148)
score = 0.4808899381624767
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (34, 90)
train = (0.97782778208851506, 1.0764259056545797)
scores = (0.40168567251630227, 0.51753722795343382)
score = 0.45961145023486805
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 4)
train = (1.1218764705866671, 0.8120416672575016)
scores = (0.25446800650533952, 0.48069757209285585)
score = 0.3675827892990977
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 50)
train = (0.68005916870361482, 0.90470796089389449)
scores = (0.45515955963925109, 0.51425756291011449)
score = 0.48470856127468276
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (8, 50)
train = (0.68005916870361482, 0.90470796089389449)
scores = (0.45515955963925109, 0.51425756291011449)
score = 0.48470856127468276
>>> t = 2202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2011.0, 2011.25, 2012.25, 2012.5, 2009.25, 2009.0, 2010.75, 2011.5, 2009.5, 2013.25, 2014.25}), frozenset({2010.25, 2015.0, 2012.75, 2013.5, 2013.75, 2014.5, 2014.0, 2009.75, 2010.0, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 23)
train = (0.80305188819871531, 0.8384421302541325)
scores = (0.5221679184810144, 0.51872909794267241)
score = 0.5204485082118434
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (293, 1)
train = (0.97378032847249685, 1.0035404919313495)
scores = (0.5648628642982414, 0.32433333546883691)
score = 0.44459809988353916
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 31)
train = (0.74122995464309449, 0.77185096803400044)
scores = (0.5314845555449581, 0.494942324628316)
score = 0.513213440086637
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (121, 23)
train = (0.80305188819871531, 0.8384421302541325)
scores = (0.5221679184810144, 0.51872909794267241)
score = 0.5204485082118434
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (135, 7)
train = (0.93373188117956374, 0.86983055964823786)
scores = (0.515045449833615, 0.51794823870154272)
score = 0.5164968442675788
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (138, 1)
train = (0.99752237916878583, 1.3324216554273398)
scores = (0.54230553777249435, 0.32701097106789861)
score = 0.43465825442019645
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 29)
train = (0.76054813599892013, 0.77027956061053937)
scores = (0.53756506895920142, 0.50050153228883421)
score = 0.5190333006240178
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (37, 29)
train = (0.76054813599892013, 0.77027956061053937)
scores = (0.53756506895920142, 0.50050153228883421)
score = 0.5190333006240178
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 7)
train = (0.99213803700902692, 0.88027185678717812)
scores = (0.52417696683405313, 0.51087466996748232)
score = 0.5175258184007677
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 1)
train = (1.162082637088208, 1.6495513992921274)
scores = (0.51820765076435316, 0.38285292538021204)
score = 0.45053028807228257
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 29)
train = (0.77200486744459962, 0.77027956061053926)
scores = (0.55089483546119788, 0.50050153228883421)
score = 0.5256981838750161
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (40, 29)
train = (0.77200486744459962, 0.77027956061053926)
scores = (0.55089483546119788, 0.50050153228883421)
score = 0.5256981838750161
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 20)
train = (1.0513293090196116, 0.97309437010502098)
scores = (0.52306289570330233, 0.5130074213303415)
score = 0.5180351585168219
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 1)
train = (1.32500031318073, 1.8241896277298324)
scores = (0.53679565037325361, 0.41207887787656811)
score = 0.47443726412491083
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 29)
train = (0.95675945573324839, 0.77027956061053904)
scores = (0.55173854595911964, 0.50050153228883421)
score = 0.5261200391239769
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (94, 29)
train = (0.95675945573324839, 0.77027956061053904)
scores = (0.55173854595911964, 0.50050153228883421)
score = 0.5261200391239769
>>> t = 2203 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.75, 2013.5, 2013.25, 2014.5, 2009.25, 2010.5, 2011.0, 2012.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.25, 2011.75, 2012.5, 2009.0, 2009.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.25, 2013.75, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.92051342931897639, 0.7029697835651747)
scores = (0.49605362683187804, 0.39699255114599913)
score = 0.44652308898893855
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 1)
train = (0.88644288246905956, 0.59645676654820245)
scores = (0.44955688327272386, 0.34783184263769884)
score = 0.3986943629552113
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 54)
train = (0.90046729613291032, 0.75555270426782506)
scores = (0.49748905977750191, 0.53883367781439273)
score = 0.5181613687959473
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (43, 54)
train = (0.90046729613291032, 0.75555270426782506)
scores = (0.49748905977750191, 0.53883367781439273)
score = 0.5181613687959473
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.9757937569122227, 0.80488202703906819)
scores = (0.48482297556431542, 0.4062401089185676)
score = 0.44553154224144154
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.0847250771518882, 0.82684521167628289)
scores = (0.41290979015403056, 0.33434451476221311)
score = 0.37362715245812184
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 59)
train = (0.87647976361710833, 0.80667100796694435)
scores = (0.49753964831081637, 0.54690526400645401)
score = 0.5222224561586352
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (32, 59)
train = (0.87647976361710833, 0.80667100796694435)
scores = (0.49753964831081637, 0.54690526400645401)
score = 0.5222224561586352
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (79, 1)
train = (1.1809170020314699, 0.86975176961100886)
scores = (0.49777443332625543, 0.40215162584124564)
score = 0.44996302958375056
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.359816515785282, 0.97965875390733259)
scores = (0.3804743854939982, 0.27501162484402492)
score = 0.32774300516901156
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 57)
train = (0.87340214523431736, 0.81272771543246347)
scores = (0.49907729662005029, 0.5476727935346809)
score = 0.5233750450773655
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (31, 57)
train = (0.87340214523431736, 0.81272771543246347)
scores = (0.49907729662005029, 0.5476727935346809)
score = 0.5233750450773655
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 54)
train = (1.0927442540170447, 0.99960992708832397)
scores = (0.49107180106774295, 0.53308311456168944)
score = 0.5120774578147163
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.4831329403560392, 1.13658187762958)
scores = (0.36750247796337976, 0.26016478211365607)
score = 0.31383363003851794
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 59)
train = (0.87340214523431714, 0.81861297792777965)
scores = (0.49907729662005051, 0.5482730204479247)
score = 0.5236751585339876
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (31, 59)
train = (0.87340214523431714, 0.81861297792777965)
scores = (0.49907729662005051, 0.5482730204479247)
score = 0.5236751585339876
>>> t = 2300 ===================================================================================================
(pair) len(F.columns) = 98
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 107
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,2,1:2,0:2] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|daoc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,5]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.5, 2011.0, 2011.75, 2012.0, 2014.25, 2010.5, 2011.25, 2012.5, 2013.5, 2014.75, 2015.25}), frozenset({2012.75, 2009.0, 2009.25, 2013.25, 2013.75, 2009.75, 2014.0, 2009.5, 2010.0, 2012.25, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (328, 8)
train = (1.9899781371333021, 0.44125425954648856)
scores = (0.34993600741000264, 0.28290398468957723)
score = 0.31641999604978993
>>> t = 2301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 107
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,2,1:2,0:2] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|daoc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,5]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.75, 2011.0, 2012.75, 2013.0, 2013.5, 2009.25, 2010.25, 2011.5, 2012.25, 2013.75, 2014.25}), frozenset({2010.75, 2015.0, 2012.5, 2009.0, 2009.75, 2014.5, 2014.0, 2009.5, 2010.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 199)
train = (0.7629203080221223, 0.84234809838127411)
scores = (0.30748041676861432, 0.27643888695122143)
score = 0.2919596518599179
>>> t = 2400 ===================================================================================================
(pair) len(F.columns) = 26
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.25, 2009.0, 2009.75, 2014.25, 2014.0, 2014.75, 2009.5, 2010.5, 2011.5, 2012.75, 2013.75, 2014.5, 2015.25}), frozenset({2010.0, 2010.75, 2011.75, 2012.25, 2012.5, 2013.25, 2013.5, 2009.25, 2010.25, 2011.0, 2012.0, 2013.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 4)
train = (0.64906838719508697, 0.67412709456482778)
scores = (0.36535344245965901, 0.57799294236024801)
score = 0.47167319240995353
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 30)
train = (0.67109829518052422, 0.86269185352262279)
scores = (0.37898832038272062, 0.52334424373397048)
score = 0.4511662820583455
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (663, 26)
train = (1.1128231133401894, 0.64169016788866684)
scores = (0.45111975763591383, 0.57757721050453048)
score = 0.5143484840702222
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (663, 26)
train = (1.1128231133401894, 0.64169016788866684)
scores = (0.45111975763591383, 0.57757721050453048)
score = 0.5143484840702222
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 4)
train = (0.70068064513731898, 0.7944222405948107)
scores = (0.38711655005913981, 0.58509223736463645)
score = 0.4861043937118881
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 14)
train = (0.80347926015037585, 0.96295258972020992)
scores = (0.39198584140759396, 0.53353840530144991)
score = 0.46276212335452194
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (267, 20)
train = (0.93355082881989748, 0.65245198653205183)
scores = (0.43629082479366271, 0.57465388179379129)
score = 0.505472353293727
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (267, 20)
train = (0.93355082881989748, 0.65245198653205183)
scores = (0.43629082479366271, 0.57465388179379129)
score = 0.505472353293727
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 6)
train = (0.73216233533048669, 0.83687088052725911)
scores = (0.389424491260845, 0.58821237131867676)
score = 0.4888184312897609
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 25)
train = (0.87944957249049549, 1.1446622706121794)
scores = (0.41072595655614486, 0.53210210006852776)
score = 0.4714140283123363
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (461, 25)
train = (1.1350973014012058, 0.66971078015868934)
scores = (0.45391378733730214, 0.5806521393131201)
score = 0.5172829633252112
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (461, 25)
train = (1.1350973014012058, 0.66971078015868934)
scores = (0.45391378733730214, 0.5806521393131201)
score = 0.5172829633252112
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 4)
train = (0.73216233533048669, 0.85387638715045666)
scores = (0.389424491260845, 0.58556108694117848)
score = 0.48749278910101174
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 19)
train = (1.1325483431150063, 1.2745049634646866)
scores = (0.41792437299696322, 0.54338534237954939)
score = 0.48065485768825633
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (369, 25)
train = (1.0908028200840232, 0.66995114135001488)
scores = (0.44767060253808466, 0.58086284072827987)
score = 0.5142667216331822
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (369, 25)
train = (1.0908028200840232, 0.66995114135001488)
scores = (0.44767060253808466, 0.58086284072827987)
score = 0.5142667216331822
>>> t = 2401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.25, 2011.75, 2012.75, 2014.0, 2009.25, 2010.25, 2011.5, 2012.0, 2013.5, 2014.5, 2015.0}), frozenset({2012.5, 2009.0, 2009.75, 2013.25, 2013.75, 2014.25, 2009.5, 2010.5, 2011.0, 2012.25, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (197, 239)
train = (1.0013591739021535, 0.96354658176914476)
scores = (0.52193140597989729, 0.45701832729101427)
score = 0.4894748666354558
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (213, 6)
train = (1.0808763105174555, 0.59984304288508017)
scores = (0.49845400846280363, 0.4055050209837161)
score = 0.45197951472325987
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (231, 285)
train = (0.87818330105191922, 0.861031386044118)
scores = (0.51969703603493544, 0.46179112255589871)
score = 0.4907440792954171
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (231, 285)
train = (0.87818330105191922, 0.861031386044118)
scores = (0.51969703603493544, 0.46179112255589871)
score = 0.4907440792954171
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (142, 252)
train = (1.0610729644872015, 1.048735482055017)
scores = (0.52059421143850204, 0.45136166382931286)
score = 0.48597793763390745
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (142, 159)
train = (1.1922516570984665, 1.0186289808709643)
scores = (0.49420792029819938, 0.44630816029149234)
score = 0.47025804029484586
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (178, 290)
train = (0.88811262296345184, 0.96650944734756394)
scores = (0.51492827295421773, 0.46204374029716122)
score = 0.4884860066256895
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (178, 290)
train = (0.88811262296345184, 0.96650944734756394)
scores = (0.51492827295421773, 0.46204374029716122)
score = 0.4884860066256895
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (109, 216)
train = (1.0788829154698902, 1.1201511962569233)
scores = (0.51570438038618593, 0.44594601573160919)
score = 0.48082519805889756
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (71, 1)
train = (1.2042478774463854, 0.77706965973485642)
scores = (0.50761939744668549, 0.42884445554042505)
score = 0.4682319264935553
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (238, 238)
train = (1.0155279903076786, 0.94887011655197218)
scores = (0.51799354372670225, 0.46193091891350346)
score = 0.48996223132010286
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (238, 238)
train = (1.0155279903076786, 0.94887011655197218)
scores = (0.51799354372670225, 0.46193091891350346)
score = 0.48996223132010286
>>> t = 2402 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2010.25, 2015.25, 2012.75, 2012.5, 2013.0, 2013.5, 2014.25, 2010.75, 2012.25, 2013.25, 2014.75, 2015.0}), frozenset({2011.0, 2011.5, 2011.75, 2009.0, 2009.25, 2009.75, 2014.0, 2009.5, 2010.0, 2011.25, 2012.0, 2013.75, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (123, 140)
train = (0.90281015401343045, 0.88846356938524496)
scores = (0.37965520105615574, 0.52517485035607891)
score = 0.45241502570611736
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 74)
train = (0.78261187090539164, 0.79218721170802375)
scores = (0.3708784108368488, 0.51665550997237097)
score = 0.4437669604046099
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (214, 206)
train = (0.78718871291204773, 0.8571910542328216)
scores = (0.3803201601757496, 0.54680509437650748)
score = 0.4635626272761285
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (214, 206)
train = (0.78718871291204773, 0.8571910542328216)
scores = (0.3803201601757496, 0.54680509437650748)
score = 0.4635626272761285
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (406, 69)
train = (1.6281261285366941, 0.89276715709080401)
scores = (0.39728560845899907, 0.51241803305773803)
score = 0.45485182075836855
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (224, 58)
train = (2.2372437906795186, 0.86732526988347691)
scores = (0.42694652038049796, 0.52175125417146295)
score = 0.47434888727598046
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (197, 207)
train = (0.84259717830637493, 0.92669387082211629)
scores = (0.38439152163128754, 0.54877910225469073)
score = 0.46658531194298913
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (224, 58)
train = (2.2372437906795186, 0.86732526988347691)
scores = (0.42694652038049796, 0.52175125417146295)
score = 0.47434888727598046
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (452, 51)
train = (1.8230814751161846, 0.9220484578428586)
scores = (0.41309653594286294, 0.53459745635364619)
score = 0.47384699614825454
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 19)
train = (2.5200993192428154, 0.88284247791780168)
scores = (0.44672072425081766, 0.52230447632623711)
score = 0.4845126002885274
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (163, 161)
train = (0.82298632291969676, 0.92944366918741761)
scores = (0.38224188026488959, 0.5457322496105389)
score = 0.46398706493771424
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (218, 19)
train = (2.5200993192428154, 0.88284247791780168)
scores = (0.44672072425081766, 0.52230447632623711)
score = 0.4845126002885274
>>> t = 2403 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2015.0, 2011.75, 2011.25, 2012.0, 2009.75, 2010.75, 2011.0, 2012.5, 2013.0, 2014.5, 2015.25}), frozenset({2012.75, 2009.0, 2009.25, 2013.5, 2013.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.5, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 210)
train = (1.3344894140471959, 0.93627158270028676)
scores = (0.54594986613284413, 0.32681606773409733)
score = 0.43638296693347073
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (105, 493)
train = (1.4965637820161564, 1.069507361847549)
scores = (0.52764114135048257, 0.38874325241398766)
score = 0.4581921968822351
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (165, 328)
train = (0.83749729947670948, 0.94397138229503763)
scores = (0.51920508796103215, 0.3390821213870524)
score = 0.4291436046740423
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (105, 493)
train = (1.4965637820161564, 1.069507361847549)
scores = (0.52764114135048257, 0.38874325241398766)
score = 0.4581921968822351
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 720)
train = (1.0592580245708931, 1.194700372674794)
scores = (0.53433435633372384, 0.37071782502448264)
score = 0.4525260906791032
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (258, 381)
train = (1.8566654697208935, 1.1445121721852416)
scores = (0.5812442025833191, 0.42145444777915736)
score = 0.5013493251812382
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (283, 6)
train = (1.2148396483925301, 0.71140669765286413)
scores = (0.52595083687753164, 0.30145335795120931)
score = 0.4137020974143705
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (258, 381)
train = (1.8566654697208935, 1.1445121721852416)
scores = (0.5812442025833191, 0.42145444777915736)
score = 0.5013493251812382
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (371, 584)
train = (1.7799764377834444, 1.2224646468803166)
scores = (0.59952413185218201, 0.35751143371422234)
score = 0.4785177827832022
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (193, 374)
train = (1.917458570666817, 1.2534559322071008)
scores = (0.59526673448125178, 0.42286322589586517)
score = 0.5090649801885585
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (287, 6)
train = (1.3378129519003714, 0.71140669765286413)
scores = (0.52880721609785597, 0.30145335795120931)
score = 0.41513028702453264
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (193, 374)
train = (1.917458570666817, 1.2534559322071008)
scores = (0.59526673448125178, 0.42286322589586517)
score = 0.5090649801885585
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (233, 561)
train = (1.7305720875033548, 1.2858289460862422)
scores = (0.55656806845773554, 0.37334401081224428)
score = 0.4649560396349899
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (191, 41)
train = (1.9321126910826458, 1.0417544126898399)
scores = (0.58179036835448017, 0.35433662856985032)
score = 0.4680634984621652
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (204, 6)
train = (1.1691452844143579, 0.71140669765286424)
scores = (0.5305322046932951, 0.30145335795120926)
score = 0.41599278132225215
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (191, 41)
train = (1.9321126910826458, 1.0417544126898399)
scores = (0.58179036835448017, 0.35433662856985032)
score = 0.4680634984621652
>>> t = 2500 ===================================================================================================
(pair) len(F.columns) = 129
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.75, 2012.0, 2013.0, 2013.25, 2014.0, 2009.5, 2015.0, 2011.5, 2009.75, 2013.5, 2014.75, 2015.25}), frozenset({2010.0, 2010.75, 2011.25, 2012.5, 2012.75, 2009.25, 2014.25, 2009.0, 2010.5, 2011.0, 2012.25, 2013.75, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (108, 216)
train = (1.2422958021479751, 0.89495371457496831)
scores = (0.48255414744429059, 0.56321562324783281)
score = 0.5228848853460617
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 94)
train = (1.5805842288962912, 0.78164254167922276)
scores = (0.48605324828531016, 0.54050718398904352)
score = 0.5132802161371768
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 251)
train = (1.0457436954039341, 0.94921927946336182)
scores = (0.48047024005366568, 0.56227709734649622)
score = 0.521373668700081
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (108, 216)
train = (1.2422958021479751, 0.89495371457496831)
scores = (0.48255414744429059, 0.56321562324783281)
score = 0.5228848853460617
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (145, 214)
train = (1.519961448239642, 0.989136164558299)
scores = (0.4871513891275821, 0.55885050156829319)
score = 0.5230009453479376
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (110, 45)
train = (1.7535398486100375, 0.82019581147833709)
scores = (0.50322242282115814, 0.53778863399928356)
score = 0.5205055284102209
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (209, 371)
train = (1.3502704927287867, 1.1429096224781614)
scores = (0.48132907311652984, 0.56891672449054853)
score = 0.5251228988035392
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (209, 371)
train = (1.3502704927287867, 1.1429096224781614)
scores = (0.48132907311652984, 0.56891672449054853)
score = 0.5251228988035392
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (168, 217)
train = (1.6778071255766376, 1.0765143614283685)
scores = (0.49175657236583392, 0.56500384817988569)
score = 0.5283802102728599
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (136, 40)
train = (1.915326179611204, 0.94010630550716423)
scores = (0.50173545256331098, 0.54951299864775371)
score = 0.5256242256055323
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 215)
train = (1.2374910821072582, 1.0900191300982909)
scores = (0.48526027189398968, 0.56531548285014077)
score = 0.5252878773720653
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (168, 217)
train = (1.6778071255766376, 1.0765143614283685)
scores = (0.49175657236583392, 0.56500384817988569)
score = 0.5283802102728599
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 133)
train = (1.3038453146137512, 1.0834839417492752)
scores = (0.47413186919919831, 0.55413340535944411)
score = 0.5141326372793212
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (84, 43)
train = (1.9031737040961336, 1.0412920199420439)
scores = (0.4918707415742975, 0.54045390157456352)
score = 0.5161623215744305
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (125, 176)
train = (1.1780186801864623, 1.0525809778361821)
scores = (0.486438058563127, 0.55500544670680441)
score = 0.5207217526349657
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (125, 176)
train = (1.1780186801864623, 1.0525809778361821)
scores = (0.486438058563127, 0.55500544670680441)
score = 0.5207217526349657
>>> t = 2501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2011.75, 2012.75, 2013.0, 2014.75, 2009.75, 2010.75, 2011.5, 2009.0, 2013.5, 2014.0, 2015.25}), frozenset({2011.25, 2012.25, 2012.5, 2009.25, 2013.75, 2014.25, 2009.5, 2010.5, 2011.0, 2012.0, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (379, 4)
train = (1.0978420811482412, 0.84063714272743284)
scores = (0.42622010282556771, 0.51772410813211434)
score = 0.47197210547884105
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (261, 65)
train = (1.0369477824237328, 0.93499947235109915)
scores = (0.41979002534807536, 0.52154570588923654)
score = 0.4706678656186559
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (380, 20)
train = (1.107206479239728, 0.80080202572737225)
scores = (0.42737584027419578, 0.53885198148934843)
score = 0.48311391088177214
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (380, 20)
train = (1.107206479239728, 0.80080202572737225)
scores = (0.42737584027419578, 0.53885198148934843)
score = 0.48311391088177214
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (439, 4)
train = (1.2713882701472232, 0.93364889060771838)
scores = (0.45121181310965713, 0.52524251565492386)
score = 0.4882271643822905
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (246, 63)
train = (1.2246614877455899, 1.0696809286301838)
scores = (0.42988585578680211, 0.5191794772596412)
score = 0.4745326665232217
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (943, 19)
train = (1.4974375023028763, 0.81748730504246725)
scores = (0.47780652819344083, 0.54454866864625551)
score = 0.5111775984198481
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (943, 19)
train = (1.4974375023028763, 0.81748730504246725)
scores = (0.47780652819344083, 0.54454866864625551)
score = 0.5111775984198481
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (471, 3)
train = (1.3779535043619775, 0.9713170330202342)
scores = (0.48120187172942441, 0.52757228500440112)
score = 0.5043870783669128
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (175, 39)
train = (1.344187123073378, 1.1453334582412007)
scores = (0.46581906090815234, 0.51897574473953478)
score = 0.4923974028238436
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (566, 19)
train = (1.4641206841135961, 0.82142914852987692)
scores = (0.45665173314965657, 0.54414055147524221)
score = 0.5003961423124494
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (471, 3)
train = (1.3779535043619775, 0.9713170330202342)
scores = (0.48120187172942441, 0.52757228500440112)
score = 0.5043870783669128
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (320, 3)
train = (1.3880933787102576, 0.97230488915370683)
scores = (0.46779057594833001, 0.52733282809292381)
score = 0.4975617020206269
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (305, 45)
train = (1.6252916000028921, 1.2896412193596962)
scores = (0.47323384579599098, 0.53759929354123781)
score = 0.5054165696686144
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (707, 19)
train = (1.6081348748397233, 0.82142914852987692)
scores = (0.48672736737151862, 0.54414055147524232)
score = 0.5154339594233804
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (707, 19)
train = (1.6081348748397233, 0.82142914852987692)
scores = (0.48672736737151862, 0.54414055147524232)
score = 0.5154339594233804
>>> t = 2502 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2012.25, 2012.75, 2012.0, 2009.75, 2013.0, 2009.5, 2010.25, 2011.0, 2012.5, 2013.25, 2014.25, 2015.0}), frozenset({2010.0, 2010.75, 2011.5, 2013.75, 2014.5, 2014.0, 2009.0, 2010.5, 2011.25, 2009.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 541)
train = (1.0767922993838861, 1.1065963945758654)
scores = (0.55970091226879615, 0.51308155025428326)
score = 0.5363912312615398
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 538)
train = (1.0451994356633825, 1.1959251703965172)
scores = (0.53250353674087703, 0.51284200221551646)
score = 0.5226727694781967
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (139, 845)
train = (1.0894266006417199, 1.1885212500117448)
scores = (0.5724185366264456, 0.51374538996929375)
score = 0.5430819632978696
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (139, 845)
train = (1.0894266006417199, 1.1885212500117448)
scores = (0.5724185366264456, 0.51374538996929375)
score = 0.5430819632978696
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 499)
train = (1.2868779196326239, 1.1705448328931365)
scores = (0.56716306153095264, 0.5208755824681145)
score = 0.5440193219995335
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 142)
train = (1.4345876351690365, 1.0693431447924324)
scores = (0.52196049509343778, 0.48295564758007314)
score = 0.5024580713367555
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 598)
train = (1.0082796879329705, 1.2537290928780043)
scores = (0.55701771594768013, 0.49954163801160995)
score = 0.5282796769796451
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (91, 499)
train = (1.2868779196326239, 1.1705448328931365)
scores = (0.56716306153095264, 0.5208755824681145)
score = 0.5440193219995335
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (167, 171)
train = (1.5722189562144635, 1.1201632908517574)
scores = (0.5893982169701677, 0.46963336071871464)
score = 0.5295157888444412
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 210)
train = (1.5787971795959186, 1.289975611459494)
scores = (0.51463011648383927, 0.49551041768744292)
score = 0.5050702670856411
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 353)
train = (1.038642729235373, 1.2469527491613688)
scores = (0.56251828474006726, 0.48228713747849566)
score = 0.5224027111092815
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (167, 171)
train = (1.5722189562144635, 1.1201632908517574)
scores = (0.5893982169701677, 0.46963336071871464)
score = 0.5295157888444412
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (145, 154)
train = (1.5983327364261439, 1.1853643082337004)
scores = (0.5951856330844626, 0.47663518360944485)
score = 0.5359104083469537
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (46, 284)
train = (1.6931881677032272, 1.4715274058156262)
scores = (0.52203067863278674, 0.49714824961121445)
score = 0.5095894641220006
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 417)
train = (1.1054383059441455, 1.3440567646473514)
scores = (0.56649023485197791, 0.48487386071592048)
score = 0.5256820477839492
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (145, 154)
train = (1.5983327364261439, 1.1853643082337004)
scores = (0.5951856330844626, 0.47663518360944485)
score = 0.5359104083469537
>>> t = 2503 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.0, 2011.5, 2009.0, 2014.75, 2014.25, 2009.75, 2010.75, 2011.75, 2009.5, 2013.0, 2014.0, 2015.25}), frozenset({2010.0, 2012.25, 2012.5, 2012.75, 2013.5, 2013.75, 2009.25, 2010.25, 2011.25, 2012.0, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (240, 170)
train = (0.96309870753216664, 1.1334830284562001)
scores = (0.54549891847949761, 0.43553787441675934)
score = 0.49051839644812845
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (53, 240)
train = (0.70554165960795034, 1.2209079318675922)
scores = (0.498840791748838, 0.41201041894304213)
score = 0.45542560534594007
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 341)
train = (0.92747348520395578, 1.1982307950906261)
scores = (0.54047919101656672, 0.45764554304972704)
score = 0.4990623670331469
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (177, 341)
train = (0.92747348520395578, 1.1982307950906261)
scores = (0.54047919101656672, 0.45764554304972704)
score = 0.4990623670331469
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 106)
train = (0.97904013322031258, 1.1735630351382373)
scores = (0.54535359269290673, 0.43928048410305393)
score = 0.49231703839798036
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 158)
train = (0.94891914211862027, 1.3090182885577377)
scores = (0.50783129171276553, 0.41520877128771744)
score = 0.46152003150024146
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (267, 486)
train = (1.1596128984639613, 1.3523631430138343)
scores = (0.56045726907251014, 0.46854574640593738)
score = 0.5145015077392238
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (267, 486)
train = (1.1596128984639613, 1.3523631430138343)
scores = (0.56045726907251014, 0.46854574640593738)
score = 0.5145015077392238
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 108)
train = (1.0418929983967069, 1.2642474352481896)
scores = (0.54113971458978494, 0.44619915568999474)
score = 0.4936694351398898
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 59)
train = (0.97391887010769196, 1.2718367308482685)
scores = (0.49166284359345186, 0.40806928172100715)
score = 0.4498660626572295
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (210, 446)
train = (1.1815857003598458, 1.3987787398995275)
scores = (0.55090472498678467, 0.47988831855918346)
score = 0.5153965217729841
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (210, 446)
train = (1.1815857003598458, 1.3987787398995275)
scores = (0.55090472498678467, 0.47988831855918346)
score = 0.5153965217729841
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (81, 140)
train = (1.1095447119441444, 1.3535313850886856)
scores = (0.54520646915112758, 0.44462051996188373)
score = 0.4949134945565057
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (262, 154)
train = (1.5518706425879645, 1.5523295225285494)
scores = (0.53363426641290612, 0.41396446993564789)
score = 0.47379936817427704
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (192, 368)
train = (1.2109995175292783, 1.3901914414527892)
scores = (0.55498902274637252, 0.47650208423372209)
score = 0.5157455534900472
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (192, 368)
train = (1.2109995175292783, 1.3901914414527892)
scores = (0.55498902274637252, 0.47650208423372209)
score = 0.5157455534900472
>>> t = 2600 ===================================================================================================
(pair) len(F.columns) = 167
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.75, 2012.0, 2012.75, 2013.25, 2013.75, 2014.25, 2010.0, 2011.5, 2012.25, 2013.0, 2014.0, 2015.25}), frozenset({2010.5, 2010.75, 2009.0, 2009.25, 2009.75, 2014.5, 2009.5, 2010.25, 2011.25, 2012.5, 2013.5, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (265, 400)
train = (1.4990853455803526, 0.955683853016147)
scores = (0.50271396673289914, 0.4044093705011847)
score = 0.45356166861704195
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (146, 595)
train = (1.58603921376345, 1.0035031606630842)
scores = (0.51350509263628663, 0.41937888634419518)
score = 0.4664419894902409
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (783, 210)
train = (1.5754252745504493, 0.82643085669445215)
scores = (0.51545696056995971, 0.36665177797334408)
score = 0.44105436927165187
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (146, 595)
train = (1.58603921376345, 1.0035031606630842)
scores = (0.51350509263628663, 0.41937888634419518)
score = 0.4664419894902409
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (272, 730)
train = (1.6637833775318569, 1.1628632194200457)
scores = (0.52766181611700391, 0.42677375189654287)
score = 0.4772177840067734
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 627)
train = (1.753767424457801, 1.2002185685180218)
scores = (0.51010202695251061, 0.43875421293971589)
score = 0.4744281199461132
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (707, 506)
train = (1.6612909511206115, 1.0747165223653725)
scores = (0.51988802009937995, 0.40255466096075238)
score = 0.46122134053006614
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (272, 730)
train = (1.6637833775318569, 1.1628632194200457)
scores = (0.52766181611700391, 0.42677375189654287)
score = 0.4772177840067734
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (601, 5)
train = (1.8820627708225635, 0.71280661164832804)
scores = (0.55619287606146173, 0.35626012013984543)
score = 0.4562264981006536
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 666)
train = (1.8406484560722705, 1.3839696911861943)
scores = (0.53572524930552679, 0.44005515393378497)
score = 0.4878902016196559
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (711, 522)
train = (1.7328544079324379, 1.1399111832396325)
scores = (0.5326514145251553, 0.40755678140976598)
score = 0.47010409796746067
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 666)
train = (1.8406484560722705, 1.3839696911861943)
scores = (0.53572524930552679, 0.44005515393378497)
score = 0.4878902016196559
>>> t = 2601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.5, 2010.25, 2015.0, 2011.25, 2012.5, 2009.5, 2010.75, 2011.75, 2009.0, 2013.75, 2014.5, 2015.25}), frozenset({2011.0, 2012.25, 2012.75, 2009.75, 2013.25, 2013.5, 2014.25, 2014.0, 2009.25, 2011.5, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 48)
train = (0.59486182789613717, 0.81021831089188601)
scores = (0.35956758984722231, 0.51874426849137389)
score = 0.43915592916929813
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 8)
train = (0.52537931029143159, 0.682722988661847)
scores = (0.36250677937584591, 0.46847377410269503)
score = 0.41549027673927047
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (422, 254)
train = (1.0465199766339044, 0.97411345046310294)
scores = (0.37873233995968958, 0.5491013623164922)
score = 0.4639168511380909
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (422, 254)
train = (1.0465199766339044, 0.97411345046310294)
scores = (0.37873233995968958, 0.5491013623164922)
score = 0.4639168511380909
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 63)
train = (0.67491295211968638, 1.0046210366579906)
scores = (0.37261038515614725, 0.53474140075862209)
score = 0.45367589295738464
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (23, 7)
train = (0.80330249375460816, 0.80149083224964446)
scores = (0.35262890276328029, 0.45987735571346733)
score = 0.4062531292383738
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (661, 205)
train = (1.2487569266395953, 1.0074161893340303)
scores = (0.39484090753630435, 0.55217158190315374)
score = 0.473506244719729
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (661, 205)
train = (1.2487569266395953, 1.0074161893340303)
scores = (0.39484090753630435, 0.55217158190315374)
score = 0.473506244719729
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 52)
train = (0.69831247141543018, 1.0597029763989809)
scores = (0.37587424412114107, 0.54500540738771686)
score = 0.460439825754429
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 10)
train = (0.95776499206476728, 0.99271889501710586)
scores = (0.34965624582829608, 0.46456928754920457)
score = 0.4071127666887503
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (545, 356)
train = (1.2611072239138601, 1.1680081623344567)
scores = (0.40318766090694841, 0.56264750795270924)
score = 0.4829175844298288
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (545, 356)
train = (1.2611072239138601, 1.1680081623344567)
scores = (0.40318766090694841, 0.56264750795270924)
score = 0.4829175844298288
>>> t = 2602 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2010.75, 2011.25, 2009.25, 2014.5, 2009.0, 2015.0, 2011.5, 2012.0, 2013.0, 2014.0, 2015.25}), frozenset({2011.75, 2012.5, 2012.75, 2009.75, 2013.5, 2013.75, 2014.25, 2009.5, 2010.5, 2011.0, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (194, 671)
train = (0.81966162117835706, 1.694773603497256)
scores = (0.5351164564440154, 0.46183106285823128)
score = 0.49847375965112334
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 416)
train = (0.61354746302781971, 1.8782358517015108)
scores = (0.52370675467491423, 0.44276308194798014)
score = 0.48323491831144716
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (447, 763)
train = (0.93338446496643002, 1.3671233544761994)
scores = (0.57180740203362246, 0.45007284056905905)
score = 0.5109401213013407
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (447, 763)
train = (0.93338446496643002, 1.3671233544761994)
scores = (0.57180740203362246, 0.45007284056905905)
score = 0.5109401213013407
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 781)
train = (0.84075228678122149, 2.0689464620799565)
scores = (0.54716897899934713, 0.48799325565076701)
score = 0.5175811173250571
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 389)
train = (0.79028140960199544, 2.2525218230870299)
scores = (0.55094578033696828, 0.47602282146152652)
score = 0.5134843008992473
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (603, 868)
train = (1.0915380684752238, 1.6143681538175709)
scores = (0.5993010975955041, 0.46428573503527609)
score = 0.5317934163153901
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (603, 868)
train = (1.0915380684752238, 1.6143681538175709)
scores = (0.5993010975955041, 0.46428573503527609)
score = 0.5317934163153901
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 987)
train = (0.89067563068450828, 2.3712908766190983)
scores = (0.56543976355514336, 0.50375803536343799)
score = 0.5345988994592907
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 443)
train = (0.81304229493495461, 2.5342668611038155)
scores = (0.55511158900397073, 0.49003806016416684)
score = 0.5225748245840688
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (511, 885)
train = (1.1344707734544477, 1.6858285566439279)
scores = (0.60028227322480221, 0.46455934131345838)
score = 0.5324208072691303
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (70, 987)
train = (0.89067563068450828, 2.3712908766190983)
scores = (0.56543976355514336, 0.50375803536343799)
score = 0.5345988994592907
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (58, 734)
train = (0.90514897384603488, 2.3417185068823101)
scores = (0.55577878027353234, 0.49570339081333747)
score = 0.5257410855434349
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 324)
train = (1.0030343705685902, 2.6147841909395106)
scores = (0.58422091615871463, 0.4668593955000222)
score = 0.5255401558293684
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (308, 665)
train = (1.0485299906814747, 1.5286459018927983)
scores = (0.59388400799770735, 0.46365396262572178)
score = 0.5287689853117146
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (308, 665)
train = (1.0485299906814747, 1.5286459018927983)
scores = (0.59388400799770735, 0.46365396262572178)
score = 0.5287689853117146
>>> t = 2603 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.25, 2012.0, 2012.75, 2013.25, 2013.0, 2014.75, 2010.25, 2011.5, 2012.25, 2013.75, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2009.0, 2009.25, 2009.75, 2014.0, 2009.5, 2010.0, 2011.75, 2012.5, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (675, 42)
train = (1.6444185563880491, 0.7084119563986403)
scores = (0.48591749253902078, 0.42397020143384884)
score = 0.4549438469864348
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 46)
train = (1.5799932590909915, 0.69264069345033152)
scores = (0.43864955873830491, 0.4242425858403629)
score = 0.4314460722893339
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (534, 26)
train = (1.3137340722264197, 0.62386234230582038)
scores = (0.43681568610522759, 0.43172640053473949)
score = 0.43427104331998356
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (675, 42)
train = (1.6444185563880491, 0.7084119563986403)
scores = (0.48591749253902078, 0.42397020143384884)
score = 0.4549438469864348
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (372, 90)
train = (1.6219137458764772, 0.86107448621582683)
scores = (0.48512559721690041, 0.43795605697562601)
score = 0.4615408270962632
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (825, 292)
train = (2.0025806573760216, 1.0219485916583602)
scores = (0.49489402473195826, 0.4613207109088947)
score = 0.4781073678204265
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (991, 25)
train = (1.6659278145355119, 0.63785223794481516)
scores = (0.48103814691397034, 0.4292628711126712)
score = 0.45515050901332077
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (825, 292)
train = (2.0025806573760216, 1.0219485916583602)
scores = (0.49489402473195826, 0.4613207109088947)
score = 0.4781073678204265
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (557, 27)
train = (1.8222270548187416, 0.79382317299729055)
scores = (0.50054443431838502, 0.43461913298861193)
score = 0.46758178365349845
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (217, 226)
train = (1.887333281956292, 1.1216138774152342)
scores = (0.46272856776372401, 0.47779612759634821)
score = 0.4702623476800361
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (570, 27)
train = (1.4957800650528159, 0.64322172569333513)
scores = (0.45437260850969663, 0.42967841159675851)
score = 0.44202551005322754
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (217, 226)
train = (1.887333281956292, 1.1216138774152342)
scores = (0.46272856776372401, 0.47779612759634821)
score = 0.4702623476800361
>>> t = 2700 ===================================================================================================
(pair) len(F.columns) = 14
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [3:,15:,18:,12:9,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:12,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[ 5:] 
                | Drawup[20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.25, 2011.5, 2012.0, 2009.5, 2014.25, 2009.0, 2010.0, 2011.0, 2012.25, 2014.75, 2015.0}), frozenset({2012.75, 2009.75, 2013.25, 2013.5, 2013.75, 2014.0, 2009.25, 2010.5, 2011.75, 2012.5, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 115)
train = (0.50920146358465601, 1.0645129943102705)
scores = (0.40661044890130876, 0.35763088011124222)
score = 0.38212066450627546
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 2)
train = (0.67544100706500343, 0.69036842510262819)
scores = (0.38488864954423063, 0.33247546868368288)
score = 0.3586820591139568
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 43)
train = (0.44141745560121093, 0.65634373537484525)
scores = (0.41410695388045582, 0.3414030558218849)
score = 0.37775500485117036
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (5, 115)
train = (0.50920146358465601, 1.0645129943102705)
scores = (0.40661044890130876, 0.35763088011124222)
score = 0.38212066450627546
>>> t = 2701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [3:,15:,18:,12:9,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:12,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[ 5:] 
                | Drawup[20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.5, 2011.25, 2012.25, 2012.5, 2013.0, 2014.5, 2014.25, 2009.75, 2011.0, 2009.5, 2013.75, 2014.75, 2015.25}), frozenset({2010.0, 2010.75, 2010.5, 2012.75, 2009.25, 2013.5, 2009.0, 2010.25, 2011.75, 2012.0, 2013.25, 2014.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 73)
train = (0.64285253286091215, 0.69640195035159747)
scores = (0.33607166744361783, 0.41581527065797741)
score = 0.3759434690507976
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 31)
train = (0.84191432332432303, 0.56568767174014933)
scores = (0.39344476134045708, 0.39619262657676158)
score = 0.39481869395860936
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (238, 40)
train = (1.1317621065784185, 0.6226935039630872)
scores = (0.36043527845189716, 0.41824594402888882)
score = 0.389340611240393
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 31)
train = (0.84191432332432303, 0.56568767174014933)
scores = (0.39344476134045708, 0.39619262657676158)
score = 0.39481869395860936
>>> t = 2800 ===================================================================================================
(pair) len(F.columns) = 15
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 33
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [12:,6:3,18:15,21:12,15:3,18:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [20:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.75, 2011.0, 2012.5, 2009.25, 2014.75, 2009.75, 2010.5, 2011.25, 2012.75, 2013.0, 2014.0}), frozenset({2010.75, 2015.0, 2012.25, 2009.0, 2013.5, 2013.75, 2014.25, 2009.5, 2010.0, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (262, 77)
train = (0.95140001835688048, 0.81647656862850782)
scores = (0.33172689834612923, 0.38029976091709666)
score = 0.3560133296316129
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 4)
train = (0.59463970650829934, 0.89456149289378961)
scores = (0.29094392561648763, 0.39467245394062644)
score = 0.34280818977855704
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 181)
train = (0.4843012701304405, 0.7882380476541514)
scores = (0.28660222690449316, 0.37577485244606157)
score = 0.3311885396752774
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (262, 77)
train = (0.95140001835688048, 0.81647656862850782)
scores = (0.33172689834612923, 0.38029976091709666)
score = 0.3560133296316129
>>> t = 2801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 33
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [12:,6:3,18:15,21:12,15:3,18:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [20:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2011.0, 2012.5, 2012.25, 2009.25, 2014.25, 2009.0, 2010.75, 2011.5, 2009.5, 2013.25, 2014.5}), frozenset({2015.0, 2011.75, 2012.75, 2013.5, 2013.75, 2014.0, 2009.75, 2010.25, 2011.25, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 377)
train = (0.48328347479543443, 1.209381005635396)
scores = (0.38298436992196222, 0.30309015742037027)
score = 0.34303726367116627
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 201)
train = (0.50459719386728885, 1.406486002489735)
scores = (0.36368399497474097, 0.28381484162025467)
score = 0.3237494182974978
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (208, 450)
train = (0.76602082295590479, 0.95127023697704649)
scores = (0.44101175348647942, 0.27263174744169882)
score = 0.35682175046408915
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (208, 450)
train = (0.76602082295590479, 0.95127023697704649)
scores = (0.44101175348647942, 0.27263174744169882)
score = 0.35682175046408915
>>> t = 2900 ===================================================================================================
(pair) len(F.columns) = 60
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.0, 2012.0, 2012.25, 2013.75, 2013.5, 2013.0, 2009.75, 2010.75, 2011.25, 2012.75, 2013.25, 2014.25, 2015.0}), frozenset({2010.5, 2011.5, 2011.75, 2009.0, 2009.25, 2014.5, 2014.0, 2009.5, 2010.25, 2011.0, 2012.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 1)
train = (1.0291990670507152, 0.59419614432548307)
scores = (0.54277297283267389, 0.31532851145871887)
score = 0.4290507421456964
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (27, 65)
train = (1.1045541613598042, 0.64637368106527993)
scores = (0.55187466790260908, 0.47202978494334658)
score = 0.5119522264229779
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (97, 84)
train = (1.0994684426792767, 0.76679519855017242)
scores = (0.47332457161744262, 0.44266499582544533)
score = 0.457994783721444
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (27, 65)
train = (1.1045541613598042, 0.64637368106527993)
scores = (0.55187466790260908, 0.47202978494334658)
score = 0.5119522264229779
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 1)
train = (1.273823240622338, 0.7261397588321401)
scores = (0.54085441334010076, 0.36405660231936515)
score = 0.452455507829733
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 585)
train = (1.2921599652455511, 1.4265328142662927)
scores = (0.38884111300654733, 0.5976385492396139)
score = 0.4932398311230806
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 66)
train = (0.9879326007587369, 0.80973580018205105)
scores = (0.47230458317377322, 0.43595761021271423)
score = 0.4541310966932437
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 585)
train = (1.2921599652455511, 1.4265328142662927)
scores = (0.38884111300654733, 0.5976385492396139)
score = 0.4932398311230806
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 1)
train = (1.2977178434792482, 0.80502387222909988)
scores = (0.56056579131863904, 0.37228477343962429)
score = 0.46642528237913167
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 530)
train = (1.5380566701970937, 1.5680978835703141)
scores = (0.37244648652863382, 0.5844082879660295)
score = 0.4784273872473317
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (54, 35)
train = (1.0405615350289108, 0.79106402861853409)
scores = (0.48173718490145734, 0.44023963560351659)
score = 0.46098841025248694
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 530)
train = (1.5380566701970937, 1.5680978835703141)
scores = (0.37244648652863382, 0.5844082879660295)
score = 0.4784273872473317
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 9)
train = (1.3374309662193451, 0.88016526856424204)
scores = (0.55643507030672201, 0.43017811333674316)
score = 0.4933065918217326
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 1)
train = (1.6376861893731611, 0.92722141998781893)
scores = (0.51193884057124805, 0.40849077536100681)
score = 0.46021480796612746
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 33)
train = (1.0510483642164092, 0.82976543045077555)
scores = (0.47887034790225924, 0.44076359660745545)
score = 0.45981697225485735
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (26, 9)
train = (1.3374309662193451, 0.88016526856424204)
scores = (0.55643507030672201, 0.43017811333674316)
score = 0.4933065918217326
>>> t = 2901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2012.25, 2012.0, 2009.25, 2013.75, 2009.75, 2015.0, 2011.0, 2012.75, 2013.25, 2014.25, 2015.25}), frozenset({2010.75, 2011.5, 2011.75, 2009.0, 2013.5, 2014.5, 2014.0, 2009.5, 2010.5, 2011.25, 2012.5, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (84, 8)
train = (0.92183683871364319, 0.92313971270941197)
scores = (0.55155823435863416, 0.38808555899513297)
score = 0.46982189667688357
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 4)
train = (0.74942842011777366, 0.92844194477065622)
scores = (0.4695788251883718, 0.37977237751606202)
score = 0.42467560135221694
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 662)
train = (0.77076698881648331, 1.405684667503553)
scores = (0.53703248114225155, 0.464307929657231)
score = 0.5006702053997413
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (33, 662)
train = (0.77076698881648331, 1.405684667503553)
scores = (0.53703248114225155, 0.464307929657231)
score = 0.5006702053997413
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 6)
train = (0.86337727833684641, 1.0055789093554433)
scores = (0.57023346652389628, 0.40174765409745367)
score = 0.485990560310675
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 3)
train = (0.82594553575381513, 1.0767549105688554)
scores = (0.41461469307852555, 0.39557515405384941)
score = 0.4050949235661875
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 145)
train = (0.62260611454219617, 1.1508842330308053)
scores = (0.54536778636855265, 0.44119046811541557)
score = 0.4932791272419841
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 145)
train = (0.62260611454219617, 1.1508842330308053)
scores = (0.54536778636855265, 0.44119046811541557)
score = 0.4932791272419841
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 7)
train = (0.97636468961171619, 1.0627364781639028)
scores = (0.60136360590121141, 0.43004006751181567)
score = 0.5157018367065136
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 6)
train = (0.98506964878588876, 1.2546584434582169)
scores = (0.41847890365600277, 0.40794118002631796)
score = 0.4132100418411604
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 316)
train = (0.6334668455426723, 1.4846087430763177)
scores = (0.54706271622428859, 0.47268478360504956)
score = 0.509873749914669
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (18, 7)
train = (0.97636468961171619, 1.0627364781639028)
scores = (0.60136360590121141, 0.43004006751181567)
score = 0.5157018367065136
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 8)
train = (1.0538800422615962, 1.1169978076599252)
scores = (0.58110578045227468, 0.4271570018808008)
score = 0.5041313911665377
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 4)
train = (1.098540904473545, 1.3733891186008462)
scores = (0.37233951751418476, 0.41139747789589454)
score = 0.3918684977050396
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 63)
train = (0.63346684554267252, 1.0210378611498887)
scores = (0.5470627162242877, 0.43613014543072676)
score = 0.49159643082750726
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (19, 8)
train = (1.0538800422615962, 1.1169978076599252)
scores = (0.58110578045227468, 0.4271570018808008)
score = 0.5041313911665377
>>> t = 2902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2012.5, 2012.0, 2009.25, 2013.0, 2013.5, 2014.0, 2009.75, 2010.25, 2011.5, 2012.25, 2013.75, 2014.5, 2015.25}), frozenset({2010.5, 2010.75, 2011.25, 2011.75, 2009.0, 2014.25, 2009.5, 2010.0, 2011.0, 2012.75, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 4)
train = (1.1002550561005517, 0.9195581187142241)
scores = (0.61287605721386118, 0.3786680056902002)
score = 0.4957720314520307
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 5)
train = (0.84413054949639355, 0.97863911043249197)
scores = (0.48258085045033705, 0.43389444745521177)
score = 0.4582376489527744
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 103)
train = (1.041379215340771, 0.91829497595040521)
scores = (0.57286324045930992, 0.40661385674689626)
score = 0.48973854860310306
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (128, 4)
train = (1.1002550561005517, 0.9195581187142241)
scores = (0.61287605721386118, 0.3786680056902002)
score = 0.4957720314520307
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 29)
train = (1.1754160602973476, 0.9828131768621029)
scores = (0.6047119124839041, 0.44743354455373002)
score = 0.526072728518817
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 7)
train = (0.73994829314514998, 1.0300564923184881)
scores = (0.48405313977643388, 0.43824398578549173)
score = 0.46114856278096283
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (166, 241)
train = (1.2363669322636386, 1.2102433370537888)
scores = (0.58040868069036722, 0.42236982199002626)
score = 0.5013892513401967
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 29)
train = (1.1754160602973476, 0.9828131768621029)
scores = (0.6047119124839041, 0.44743354455373002)
score = 0.526072728518817
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 20)
train = (1.2827527265092207, 1.0134582791876092)
scores = (0.60732756564271528, 0.44982575284049015)
score = 0.5285766592416027
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 9)
train = (0.98044997343531948, 1.1246929074167451)
scores = (0.51118598806481619, 0.46257688637026878)
score = 0.4868814372175425
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 498)
train = (1.2396299698135287, 1.5541433180586681)
scores = (0.57878330564592961, 0.45107371431765059)
score = 0.5149285099817901
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (99, 20)
train = (1.2827527265092207, 1.0134582791876092)
scores = (0.60732756564271528, 0.44982575284049015)
score = 0.5285766592416027
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (105, 17)
train = (1.3708616110268868, 1.0651666290211093)
scores = (0.61623492129712887, 0.46302115521763121)
score = 0.53962803825738
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 11)
train = (1.2057916283971419, 1.2060219489397797)
scores = (0.54173218294162295, 0.48171771370461181)
score = 0.5117249483231174
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 394)
train = (1.2368394864216892, 1.5625933931174429)
scores = (0.57233892853665203, 0.46061658051418064)
score = 0.5164777545254163
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (105, 17)
train = (1.3708616110268868, 1.0651666290211093)
scores = (0.61623492129712887, 0.46302115521763121)
score = 0.53962803825738
>>> t = 2903 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.25, 2012.75, 2012.0, 2012.25, 2009.0, 2009.75, 2010.5, 2011.5, 2012.5, 2013.25, 2014.25, 2015.25}), frozenset({2010.25, 2010.75, 2013.5, 2013.75, 2014.5, 2014.0, 2009.5, 2010.0, 2011.0, 2009.25, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (220, 62)
train = (1.0236845029794115, 1.0322688610823001)
scores = (0.50172576772358413, 0.51358955300505482)
score = 0.5076576603643195
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 50)
train = (0.79103250276123094, 0.90780875316582565)
scores = (0.26041699379099692, 0.49194225235063282)
score = 0.3761796230708149
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (240, 129)
train = (1.113293625174673, 0.9891226069390433)
scores = (0.57829094745771825, 0.52502184875604874)
score = 0.5516563981068835
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (240, 129)
train = (1.113293625174673, 0.9891226069390433)
scores = (0.57829094745771825, 0.52502184875604874)
score = 0.5516563981068835
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (227, 50)
train = (1.1465159645391112, 1.1391722908665527)
scores = (0.53316980751642506, 0.52260118663515054)
score = 0.5278854970757878
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (138, 6)
train = (1.1115578556392873, 1.0933108810951848)
scores = (0.49986893392182574, 0.44002421178538265)
score = 0.4699465728536042
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (213, 64)
train = (1.2050764204594604, 0.93261898009703015)
scores = (0.58944392078174468, 0.52039557510205825)
score = 0.5549197479419015
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (213, 64)
train = (1.2050764204594604, 0.93261898009703015)
scores = (0.58944392078174468, 0.52039557510205825)
score = 0.5549197479419015
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 45)
train = (1.0640771320963329, 1.212915751873227)
scores = (0.5316525549993586, 0.52600789555350935)
score = 0.528830225276434
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 42)
train = (0.8735294264503719, 1.2753655051314834)
scores = (0.33974231594625509, 0.47489486467116598)
score = 0.40731859030871054
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 53)
train = (1.1992639341430964, 0.92137216204026062)
scores = (0.58368015710601384, 0.52240408107242575)
score = 0.5530421190892199
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (144, 53)
train = (1.1992639341430964, 0.92137216204026062)
scores = (0.58368015710601384, 0.52240408107242575)
score = 0.5530421190892199
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 48)
train = (0.88515045996729946, 1.2883326366107768)
scores = (0.49577444907135026, 0.52381140368370394)
score = 0.5097929263775272
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 33)
train = (0.99222211076840616, 1.4302693334162413)
scores = (0.36247499959519913, 0.4833473879011822)
score = 0.42291119374819064
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (119, 58)
train = (1.1973364778363573, 0.96376582721789217)
scores = (0.58431906801308697, 0.52249526656303158)
score = 0.5534071672880593
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (119, 58)
train = (1.1973364778363573, 0.96376582721789217)
scores = (0.58431906801308697, 0.52249526656303158)
score = 0.5534071672880593
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 45)
train = (1.0640771320963331, 1.2129157518732272)
scores = (0.53165255499935837, 0.52600789555350946)
score = 0.5288302252764339
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 30)
train = (0.81938171883800748, 1.0059610552275258)
scores = (0.34928598532935973, 0.4925895227876485)
score = 0.4209377540585041
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 53)
train = (1.1992639341430957, 0.92137216204026062)
scores = (0.5836801571060134, 0.52240408107242575)
score = 0.5530421190892196
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (144, 53)
train = (1.1992639341430957, 0.92137216204026062)
scores = (0.5836801571060134, 0.52240408107242575)
score = 0.5530421190892196
>>> t = 3000 ===================================================================================================
(pair) len(F.columns) = 31
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 49
    <>~Market & (
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,11,12,13,14,15]}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|daoc)
            & index[0,1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [5:,10:5,15:10,20:15,15:5,20:10,20:5] 
          }
      )
    | 
        | FracRec[21:,62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2012.75, 2009.0, 2009.75, 2013.5, 2014.75, 2014.5, 2009.25, 2010.0, 2011.5, 2012.0, 2013.25, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2011.25, 2011.75, 2012.5, 2013.75, 2009.5, 2010.25, 2011.0, 2012.25, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 1)
train = (0.67493246439863885, 0.53224756675844509)
scores = (0.31777441307926257, 0.44836978289285251)
score = 0.38307209798605757
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 54)
train = (0.60224590714054815, 1.2187185269582128)
scores = (0.3251328575810784, 0.43150160757002537)
score = 0.3783172325755519
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (143, 92)
train = (0.74020058005777445, 0.76122086024554325)
scores = (0.34639526073295518, 0.46509969827792086)
score = 0.405747479505438
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (143, 92)
train = (0.74020058005777445, 0.76122086024554325)
scores = (0.34639526073295518, 0.46509969827792086)
score = 0.405747479505438
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.60234690963315396, 0.58338133993254171)
scores = (0.31778191854084947, 0.45560122848133183)
score = 0.3866915735110906
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 1)
train = (0.73129091642598598, 0.7747885868244595)
scores = (0.31736581912521999, 0.4131482254386144)
score = 0.3652570222819172
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (110, 84)
train = (0.75433608037514299, 0.80005981507457813)
scores = (0.34704495536444818, 0.46103286214429101)
score = 0.4040389087543696
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (110, 84)
train = (0.75433608037514299, 0.80005981507457813)
scores = (0.34704495536444818, 0.46103286214429101)
score = 0.4040389087543696
>>> t = 3001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 49
    <>~Market & (
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,11,12,13,14,15]}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|daoc)
            & index[0,1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [5:,10:5,15:10,20:15,15:5,20:10,20:5] 
          }
      )
    | 
        | FracRec[21:,62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.5, 2009.5, 2013.25, 2014.75, 2014.5, 2009.75, 2010.25, 2011.0, 2012.0, 2013.5, 2014.25, 2015.0}), frozenset({2010.5, 2011.75, 2012.5, 2012.75, 2009.25, 2013.75, 2009.0, 2010.75, 2011.25, 2012.25, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 33)
train = (0.59488713369785939, 0.55765530213251469)
scores = (0.35376414561628283, 0.39273855013670383)
score = 0.37325134787649333
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 56)
train = (0.82337375423621428, 0.54945643531118094)
scores = (0.34712039441458636, 0.41054463915064865)
score = 0.37883251678261753
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 136)
train = (0.67614011856727252, 0.64794446191108679)
scores = (0.35081955249262348, 0.41540035429672134)
score = 0.3831099533946724
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (64, 136)
train = (0.67614011856727252, 0.64794446191108679)
scores = (0.35081955249262348, 0.41540035429672134)
score = 0.3831099533946724
>>> t = 3100 ===================================================================================================
(pair) len(F.columns) = 7
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 6
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,6:,9:,12:,15:,18:,9:6,12:9,12:6,18:12,18:9,21:12,18:6,21:9,21:3] 
          }
      )
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.25, 2011.75, 2012.75, 2013.75, 2013.0, 2010.5, 2011.5, 2012.0, 2013.25, 2014.75, 2015.25}), frozenset({2012.5, 2009.0, 2009.25, 2009.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.25, 2013.5, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 63)
train = (0.31816928682692536, 0.39316620365499932)
scores = (0.31633907864257976, 0.25714440581310533)
score = 0.28674174222784254
>>> t = 3101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 6
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,6:,9:,12:,15:,18:,9:6,12:9,12:6,18:12,18:9,21:12,18:6,21:9,21:3] 
          }
      )
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.75, 2015.0, 2011.0, 2011.5, 2012.75, 2014.0, 2014.5, 2010.25, 2011.25, 2012.5, 2013.75, 2014.75, 2015.25}), frozenset({2010.5, 2012.25, 2009.0, 2009.25, 2013.25, 2013.5, 2009.75, 2009.5, 2010.0, 2011.75, 2012.0, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (328, 13)
train = (0.57948944260410717, 0.26180799041073138)
scores = (0.17937518552329992, 0.38545699234053543)
score = 0.28241608893191766
>>> t = 3200 ===================================================================================================
(pair) len(F.columns) = 69
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2015.25, 2011.0, 2012.75, 2012.0, 2009.75, 2013.5, 2009.25, 2010.75, 2011.25, 2012.25, 2013.0, 2014.0, 2015.0}), frozenset({2010.25, 2010.5, 2011.75, 2009.0, 2013.75, 2014.5, 2014.25, 2009.5, 2010.0, 2011.5, 2012.5, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 440)
train = (0.72948050003125608, 1.1183540077433245)
scores = (0.45378592820412694, 0.45105171751455003)
score = 0.4524188228593385
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 529)
train = (1.1684125980727309, 1.2153091913302627)
scores = (0.45280104187507225, 0.47584521731522017)
score = 0.4643231295951462
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 474)
train = (0.6083317070903852, 1.1398643809644773)
scores = (0.49370173444014726, 0.47358145211085428)
score = 0.48364159327550077
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 474)
train = (0.6083317070903852, 1.1398643809644773)
scores = (0.49370173444014726, 0.47358145211085428)
score = 0.48364159327550077
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 130)
train = (0.7764073828962279, 1.0357906982734919)
scores = (0.45824567814709827, 0.45127040320327316)
score = 0.4547580406751857
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 282)
train = (0.83594830171181855, 1.2345526117751007)
scores = (0.39053799864222105, 0.47227186950680544)
score = 0.43140493407451325
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 540)
train = (0.61322640806725659, 1.2971193007446578)
scores = (0.50566384459730152, 0.48932591687562987)
score = 0.4974948807364657
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 540)
train = (0.61322640806725659, 1.2971193007446578)
scores = (0.50566384459730152, 0.48932591687562987)
score = 0.4974948807364657
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 329)
train = (0.78311775309871234, 1.2819974712251787)
scores = (0.45774785413739366, 0.48338382611011455)
score = 0.47056584012375413
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 221)
train = (1.0883034090551638, 1.3442224405642906)
scores = (0.398579818048163, 0.4875880153571393)
score = 0.4430839167026511
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 403)
train = (0.61322640806725659, 1.2887022063514164)
scores = (0.50566384459730152, 0.48474745993205548)
score = 0.4952056522646785
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 403)
train = (0.61322640806725659, 1.2887022063514164)
scores = (0.50566384459730152, 0.48474745993205548)
score = 0.4952056522646785
>>> t = 3201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2011.0, 2012.75, 2009.25, 2009.0, 2014.5, 2009.5, 2010.5, 2011.25, 2012.25, 2013.5, 2014.75}), frozenset({2015.0, 2011.75, 2012.5, 2013.25, 2013.75, 2014.0, 2009.75, 2010.0, 2011.5, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 363)
train = (0.76140763626169883, 1.7748009769261768)
scores = (0.35998144517845165, 0.60325732281810662)
score = 0.48161938399827914
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (941, 171)
train = (1.3618436030462751, 1.785423150612222)
scores = (0.52929803254562036, 0.5526386071289302)
score = 0.5409683198372752
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 33)
train = (0.71803869482587313, 0.75452377088879874)
scores = (0.34867361775329436, 0.52942580413674345)
score = 0.4390497109450189
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (941, 171)
train = (1.3618436030462751, 1.785423150612222)
scores = (0.52929803254562036, 0.5526386071289302)
score = 0.5409683198372752
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (821, 190)
train = (1.2966806427255901, 1.7369141148327623)
scores = (0.49439484416912038, 0.62391774484569662)
score = 0.5591562945074084
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 118)
train = (1.0643832070512658, 1.8895255167623535)
scores = (0.40635546680211582, 0.5799849714938301)
score = 0.493170219147973
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 255)
train = (0.71803869482587324, 1.5150657033417962)
scores = (0.34867361775329442, 0.60492550060847583)
score = 0.4767995591808851
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (821, 190)
train = (1.2966806427255901, 1.7369141148327623)
scores = (0.49439484416912038, 0.62391774484569662)
score = 0.5591562945074084
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (296, 306)
train = (1.1988150286397872, 1.8984864859117707)
scores = (0.45117755838419371, 0.62789972765085444)
score = 0.5395386430175241
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (501, 192)
train = (1.5138949174300886, 2.0597369301058364)
scores = (0.53126958892580001, 0.60430823822932767)
score = 0.5677889135775638
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 272)
train = (0.71803869482587279, 1.5743912080732925)
scores = (0.34867361775329458, 0.61454985497185588)
score = 0.48161173636257526
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (501, 192)
train = (1.5138949174300886, 2.0597369301058364)
scores = (0.53126958892580001, 0.60430823822932767)
score = 0.5677889135775638
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (619, 232)
train = (1.4165702243896863, 1.8906840221219543)
scores = (0.50512961417839586, 0.62595220635395843)
score = 0.5655409102661771
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (505, 138)
train = (1.6171533656077981, 2.0945818778100262)
scores = (0.54438517277303866, 0.59639135730998516)
score = 0.570388265041512
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 213)
train = (0.71803869482587313, 1.5354209356610824)
scores = (0.34867361775329436, 0.6053015623945468)
score = 0.47698759007392055
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (505, 138)
train = (1.6171533656077981, 2.0945818778100262)
scores = (0.54438517277303866, 0.59639135730998516)
score = 0.570388265041512
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (296, 306)
train = (1.1988150286397874, 1.8984864859117709)
scores = (0.45117755838419388, 0.62789972765085456)
score = 0.5395386430175242
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (816, 254)
train = (1.5180601923584438, 2.0258749443917488)
scores = (0.55527772125807606, 0.59485776535374868)
score = 0.5750677433059124
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 272)
train = (0.71803869482587324, 1.5743912080732931)
scores = (0.34867361775329442, 0.61454985497185577)
score = 0.4816117363625751
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (816, 254)
train = (1.5180601923584438, 2.0258749443917488)
scores = (0.55527772125807606, 0.59485776535374868)
score = 0.5750677433059124
>>> t = 3202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.5, 2012.0, 2012.5, 2009.5, 2013.75, 2014.75, 2014.25, 2009.25, 2010.0, 2011.75, 2012.75, 2013.25, 2014.5}), frozenset({2010.25, 2015.0, 2011.25, 2011.5, 2009.75, 2013.5, 2009.0, 2010.75, 2011.0, 2012.25, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 983)
train = (1.0318717319291053, 1.3282662318523102)
scores = (0.55697251309552798, 0.54592888182100108)
score = 0.5514506974582645
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 587)
train = (1.0231987058715957, 1.2688655209599702)
scores = (0.49442930839473465, 0.50896365551974188)
score = 0.5016964819572383
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (136, 582)
train = (1.0274977818802433, 1.2382095072640062)
scores = (0.58058930529698882, 0.5016635468050813)
score = 0.5411264260510351
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (90, 983)
train = (1.0318717319291053, 1.3282662318523102)
scores = (0.55697251309552798, 0.54592888182100108)
score = 0.5514506974582645
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (110, 473)
train = (1.1860390596600177, 1.2955680956793456)
scores = (0.55156386817045633, 0.5243669698189547)
score = 0.5379654189947055
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 511)
train = (1.1577056149900664, 1.4519214020252347)
scores = (0.48788880764256587, 0.54097423705740511)
score = 0.5144315223499855
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (176, 309)
train = (1.1618793053595513, 1.1772433439746457)
scores = (0.58754701391377262, 0.47145867726725088)
score = 0.5295028455905118
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (110, 473)
train = (1.1860390596600177, 1.2955680956793456)
scores = (0.55156386817045633, 0.5243669698189547)
score = 0.5379654189947055
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 549)
train = (1.1506706104968114, 1.4778635587529017)
scores = (0.56050519708107471, 0.53128124895096607)
score = 0.5458932230160204
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (140, 453)
train = (1.4747294012363126, 1.6182266895566526)
scores = (0.51062059994849984, 0.55427076354849569)
score = 0.5324456817484977
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (222, 692)
train = (1.2641770250568922, 1.6181524089373418)
scores = (0.58631598866548773, 0.55487254324386981)
score = 0.5705942659546788
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (222, 692)
train = (1.2641770250568922, 1.6181524089373418)
scores = (0.58631598866548773, 0.55487254324386981)
score = 0.5705942659546788
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (86, 487)
train = (1.2787709641757881, 1.544850867059923)
scores = (0.57277226924755875, 0.54905706753013339)
score = 0.5609146683888461
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 303)
train = (1.5734146389692316, 1.6394980750046768)
scores = (0.51008654905215178, 0.54908101868172943)
score = 0.5295837838669406
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (146, 842)
train = (1.1461327957785357, 1.7789543036252975)
scores = (0.58841899387944452, 0.55890970926652916)
score = 0.5736643515729869
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (146, 842)
train = (1.1461327957785357, 1.7789543036252975)
scores = (0.58841899387944452, 0.55890970926652916)
score = 0.5736643515729869
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 549)
train = (1.1506706104968116, 1.4778635587529019)
scores = (0.56048625540129982, 0.53128124895096585)
score = 0.5458837521761328
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (215, 4)
train = (1.3999754675672067, 0.7029810822966015)
scores = (0.52414880904543049, 0.37617853244192162)
score = 0.450163670743676
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (222, 692)
train = (1.2641770250568927, 1.6181524089373414)
scores = (0.58631598866548751, 0.55487254324386981)
score = 0.5705942659546787
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (222, 692)
train = (1.2641770250568927, 1.6181524089373414)
scores = (0.58631598866548751, 0.55487254324386981)
score = 0.5705942659546787
>>> t = 3203 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.0, 2013.5, 2013.75, 2014.0, 2014.25, 2010.5, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}), frozenset({2011.5, 2012.5, 2012.75, 2009.0, 2009.25, 2009.75, 2009.5, 2010.0, 2011.25, 2012.25, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (361, 418)
train = (1.4330624390409028, 1.0739288545324774)
scores = (0.56067860765288746, 0.40433047315600806)
score = 0.4825045404044478
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 383)
train = (0.93019422837262622, 1.0895174194659569)
scores = (0.21142273787188046, 0.42181755985404323)
score = 0.31662014886296186
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (475, 703)
train = (1.3844552811336459, 1.1743058330574372)
scores = (0.55446038946323184, 0.45126794467439479)
score = 0.5028641670688133
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (475, 703)
train = (1.3844552811336459, 1.1743058330574372)
scores = (0.55446038946323184, 0.45126794467439479)
score = 0.5028641670688133
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (154, 228)
train = (1.3162222619287802, 1.0779782755624465)
scores = (0.54807077525335468, 0.41538512208539868)
score = 0.4817279486693767
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.2556564003948336, 0.70679036166542797)
scores = (0.25677999713163929, 0.38362259578618452)
score = 0.32020129645891193
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (467, 571)
train = (1.4660838585923026, 1.2616415242173316)
scores = (0.58333875675205782, 0.45080642448628161)
score = 0.5170725906191698
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (467, 571)
train = (1.4660838585923026, 1.2616415242173316)
scores = (0.58333875675205782, 0.45080642448628161)
score = 0.5170725906191698
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 454)
train = (1.3784265171117269, 1.2386155723662489)
scores = (0.54751297337738059, 0.4409071059388911)
score = 0.4942100396581358
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.4428212041644148, 0.84426837343005712)
scores = (0.25299404082390964, 0.39141226000164137)
score = 0.3222031504127755
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (292, 448)
train = (1.3764063998909759, 1.3260368265358413)
scores = (0.55776743278358321, 0.44312198928133079)
score = 0.500444711032457
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (292, 448)
train = (1.3764063998909759, 1.3260368265358413)
scores = (0.55776743278358321, 0.44312198928133079)
score = 0.500444711032457
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (279, 298)
train = (1.6345221790868232, 1.2550736721227673)
scores = (0.59066655186461547, 0.43537729675124992)
score = 0.5130219243079327
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.557322680656521, 0.97463565390078688)
scores = (0.26827178276377278, 0.41477993714610617)
score = 0.34152585995493945
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 707)
train = (1.3844302745210613, 1.4844114731257649)
scores = (0.55291426130264432, 0.47758776051514157)
score = 0.5152510109088929
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (271, 707)
train = (1.3844302745210613, 1.4844114731257649)
scores = (0.55291426130264432, 0.47758776051514157)
score = 0.5152510109088929
>>> t = 3204 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2009.25, 2009.0, 2014.0, 2014.25, 2009.75, 2010.0, 2011.0, 2012.5, 2013.0, 2014.75, 2015.0}), frozenset({2010.75, 2011.5, 2012.25, 2012.75, 2013.5, 2013.75, 2009.5, 2010.25, 2011.25, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 511)
train = (0.62109881003026901, 1.455051293615917)
scores = (0.46802229790053768, 0.54574741324730514)
score = 0.5068848555739214
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 491)
train = (0.50371699833628114, 1.7129650442800619)
scores = (0.44383246751885036, 0.56567796671570558)
score = 0.504755217117278
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (84, 736)
train = (0.81247182365369397, 1.4572534455646831)
scores = (0.48328819492184777, 0.50408955299937297)
score = 0.49368887396061034
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 511)
train = (0.62109881003026901, 1.455051293615917)
scores = (0.46802229790053768, 0.54574741324730514)
score = 0.5068848555739214
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 452)
train = (0.70517949825881543, 1.5378751531140193)
scores = (0.49222838102031458, 0.56377336066076711)
score = 0.5280008708405408
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 365)
train = (0.58489368536397679, 1.8059216353959706)
scores = (0.48483735474773992, 0.56212635656256349)
score = 0.5234818556551517
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (106, 383)
train = (0.93688618894715503, 1.3520413875915589)
scores = (0.49345357515454769, 0.48693911587702032)
score = 0.490196345515784
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 452)
train = (0.70517949825881543, 1.5378751531140193)
scores = (0.49222838102031458, 0.56377336066076711)
score = 0.5280008708405408
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 528)
train = (0.72216032436861111, 1.6232001491722876)
scores = (0.49249532969382459, 0.58052738153930838)
score = 0.5365113556165665
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 701)
train = (0.72220079305952589, 2.13497577962751)
scores = (0.45955581295006331, 0.57393973512653729)
score = 0.5167477740383003
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (156, 581)
train = (1.0812551611522314, 1.566491453570326)
scores = (0.49467251394890466, 0.51643695436287695)
score = 0.5055547341558908
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 528)
train = (0.72216032436861111, 1.6232001491722876)
scores = (0.49249532969382459, 0.58052738153930838)
score = 0.5365113556165665
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 386)
train = (0.73393206567363534, 1.6283289161018988)
scores = (0.49899807229998877, 0.56861753249843727)
score = 0.533807802399213
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 236)
train = (0.88474314235140494, 1.8940316845914373)
scores = (0.47212601114052133, 0.54629433934284166)
score = 0.5092101752416816
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (154, 584)
train = (1.1179134371774995, 1.5941572342194694)
scores = (0.5062951883603708, 0.51718801323111829)
score = 0.5117416007957445
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 386)
train = (0.73393206567363534, 1.6283289161018988)
scores = (0.49899807229998877, 0.56861753249843727)
score = 0.533807802399213
>>> t = 3300 ===================================================================================================
(pair) len(F.columns) = 69
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 72
0
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|aoo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:10] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[0,5]} 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,6,9,11,12,14,16,17]}
        | Return{ af| it} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.75, 2010.5, 2015.25, 2011.25, 2013.75, 2014.75, 2009.25, 2010.25, 2011.0, 2012.0, 2013.5, 2014.25, 2015.0}), frozenset({2011.75, 2012.5, 2012.75, 2009.0, 2009.75, 2013.25, 2014.0, 2009.5, 2010.0, 2011.5, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.44976234221302491, 0.50618663387082552)
scores = (0.43624574223534612, 0.35321827095579106)
score = 0.3947320065955686
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 35)
train = (0.4935703308179587, 0.74792970174192541)
scores = (0.4397184298453804, 0.34724271958780067)
score = 0.39348057471659054
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 7)
train = (0.39822758762754401, 0.47016964958116098)
scores = (0.43467953017734229, 0.34783269260551669)
score = 0.39125611139142946
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 1)
train = (0.44976234221302491, 0.50618663387082552)
scores = (0.43624574223534612, 0.35321827095579106)
score = 0.3947320065955686
>>> t = 3301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 72
0
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|aoo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:10] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[0,5]} 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,6,9,11,12,14,16,17]}
        | Return{ af| it} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.75, 2015.0, 2012.75, 2012.5, 2009.5, 2013.0, 2009.75, 2010.25, 2012.0, 2013.5, 2014.0, 2015.25}), frozenset({2011.25, 2011.5, 2011.75, 2009.25, 2013.75, 2014.5, 2014.25, 2009.0, 2010.5, 2011.0, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 1)
train = (0.72096425951761889, 0.50804504946843076)
scores = (0.4742417399436587, 0.30917209863451522)
score = 0.39170691928908696
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 1)
train = (1.0899354387198072, 0.53977347576279333)
scores = (0.48554951990604517, 0.30867430008525337)
score = 0.39711190999564927
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 1)
train = (0.42001664356535023, 0.47150307092058208)
scores = (0.46989082936470011, 0.29811638078191477)
score = 0.38400360507330744
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (69, 1)
train = (1.0899354387198072, 0.53977347576279333)
scores = (0.48554951990604517, 0.30867430008525337)
score = 0.39711190999564927
>>> t = 3400 ===================================================================================================
(pair) len(F.columns) = 51
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [3:,9:,12:,15:,18:,6:3,18:15,21:18,            15:9,18:6,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[10,20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[10:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[10,20]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|dcc|daoc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,9:,18:,12:6,            15:9,18:12,12:3,18:9,18:6,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2015.0, 2011.5, 2012.5, 2009.75, 2013.5, 2013.0, 2009.25, 2010.75, 2011.25, 2009.0, 2013.25, 2015.25}), frozenset({2010.5, 2011.75, 2012.25, 2012.75, 2014.5, 2014.25, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.75, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 126)
train = (1.0636440559878093, 1.0245520119909373)
scores = (0.46117350556422576, 0.41740805116717827)
score = 0.439290778365702
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 167)
train = (0.78306499431699739, 1.2977077516380222)
scores = (0.20114110857440137, 0.47086545873688895)
score = 0.33600328365564514
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (138, 122)
train = (0.98582895959550232, 0.89462087209395658)
scores = (0.4686751474517078, 0.45959838377898177)
score = 0.4641367656153448
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (138, 122)
train = (0.98582895959550232, 0.89462087209395658)
scores = (0.4686751474517078, 0.45959838377898177)
score = 0.4641367656153448
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 138)
train = (1.1283327883660614, 1.1588516617637312)
scores = (0.45806105112008849, 0.41378051903311264)
score = 0.4359207850766006
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (130, 1)
train = (1.1209121545849488, 1.0560710244441374)
scores = (0.45281928354496209, 0.2730901912429276)
score = 0.36295473739394485
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 118)
train = (1.0129849534515949, 0.94102397885059708)
scores = (0.47749520893659458, 0.46089569673660263)
score = 0.4691954528365986
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (115, 118)
train = (1.0129849534515949, 0.94102397885059708)
scores = (0.47749520893659458, 0.46089569673660263)
score = 0.4691954528365986
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (202, 150)
train = (1.2750990943431904, 1.2532996631136903)
scores = (0.45904365015714682, 0.41485711823751897)
score = 0.4369503841973329
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 1)
train = (1.2471283467527317, 1.074631191844309)
scores = (0.4507347407474992, 0.24880487571256071)
score = 0.34976980823002995
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 164)
train = (0.98363665038937531, 1.0704723622855625)
scores = (0.47249050200501402, 0.45626376748891445)
score = 0.46437713474696424
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (94, 164)
train = (0.98363665038937531, 1.0704723622855625)
scores = (0.47249050200501402, 0.45626376748891445)
score = 0.46437713474696424
>>> t = 3401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [3:,9:,12:,15:,18:,6:3,18:15,21:18,            15:9,18:6,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[10,20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[10:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[10,20]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|dcc|daoc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,9:,18:,12:6,            15:9,18:12,12:3,18:9,18:6,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2012.5, 2012.0, 2012.75, 2009.75, 2013.5, 2009.5, 2010.0, 2011.75, 2012.25, 2013.0, 2014.0}), frozenset({2010.75, 2015.0, 2011.25, 2013.75, 2014.5, 2014.25, 2009.0, 2010.5, 2011.0, 2009.25, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 271)
train = (0.68252399487972948, 1.0692649814099509)
scores = (0.31581955571262771, 0.48353086726156069)
score = 0.3996752114870942
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 167)
train = (0.77556456448427769, 0.96264250577878163)
scores = (0.31443019547758339, 0.4607342580860162)
score = 0.38758222678179977
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 173)
train = (0.84742599820771936, 0.96986042407752471)
scores = (0.46536338665285831, 0.47593383734440553)
score = 0.47064861199863195
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (94, 173)
train = (0.84742599820771936, 0.96986042407752471)
scores = (0.46536338665285831, 0.47593383734440553)
score = 0.47064861199863195
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (164, 224)
train = (1.1535230460000889, 1.1631092918712966)
scores = (0.44288198771336384, 0.4728873157782128)
score = 0.4578846517457883
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.98689824302818507, 0.80391562453144505)
scores = (0.2778963754048327, 0.25276687091890399)
score = 0.2653316231618683
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 150)
train = (0.87679429169048073, 1.0126995932177973)
scores = (0.46818836332247493, 0.46375618806434782)
score = 0.4659722756934114
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (89, 150)
train = (0.87679429169048073, 1.0126995932177973)
scores = (0.46818836332247493, 0.46375618806434782)
score = 0.4659722756934114
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 198)
train = (1.0882514109290204, 1.243855453121961)
scores = (0.44245581663764927, 0.47223749287896966)
score = 0.4573466547583095
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.2050564630972258, 0.91051928874288379)
scores = (0.28849986117852072, 0.26170219333268246)
score = 0.2751010272556016
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (114, 260)
train = (0.97078992149677823, 1.2404039601105803)
scores = (0.46736365300596355, 0.49061186544912311)
score = 0.47898775922754333
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (114, 260)
train = (0.97078992149677823, 1.2404039601105803)
scores = (0.46736365300596355, 0.49061186544912311)
score = 0.47898775922754333
>>> t = 3402 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [3:,9:,12:,15:,18:,6:3,18:15,21:18,            15:9,18:6,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[10,20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[10:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[10,20]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|dcc|daoc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,9:,18:,12:6,            15:9,18:12,12:3,18:9,18:6,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2010.75, 2015.0, 2012.25, 2009.5, 2009.0, 2010.5, 2011.0, 2009.25, 2013.75, 2014.25, 2015.25}), frozenset({2011.5, 2011.75, 2012.5, 2012.75, 2013.25, 2013.5, 2014.5, 2014.0, 2009.75, 2011.25, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 1)
train = (0.80930561245902033, 0.69606563235118712)
scores = (0.4813594691012229, 0.27003391532511661)
score = 0.37569669221316976
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 1)
train = (0.90113453450860215, 0.73424783768421376)
scores = (0.47218990442228043, 0.24923942437778868)
score = 0.3607146644000345
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (254, 288)
train = (1.0572695340792215, 1.1085482486523834)
scores = (0.52084832783615287, 0.48133922349497188)
score = 0.5010937756655623
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (254, 288)
train = (1.0572695340792215, 1.1085482486523834)
scores = (0.52084832783615287, 0.48133922349497188)
score = 0.5010937756655623
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (219, 286)
train = (1.1528628511380403, 1.3706927119277388)
scores = (0.49348874072062227, 0.48497872327897878)
score = 0.4892337319998005
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 1)
train = (0.95689283313133355, 0.88428841627365362)
scores = (0.46915812459337097, 0.20219120057554316)
score = 0.33567466258445705
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (176, 318)
train = (1.0505077264488876, 1.2272377958929879)
scores = (0.51166661123413948, 0.48901674066399603)
score = 0.5003416759490678
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (176, 318)
train = (1.0505077264488876, 1.2272377958929879)
scores = (0.51166661123413948, 0.48901674066399603)
score = 0.5003416759490678
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (203, 332)
train = (1.2217663086508084, 1.4905071507663947)
scores = (0.49088434619653359, 0.48555657747987641)
score = 0.488220461838205
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 1)
train = (1.1913441399751994, 1.0469701374602223)
scores = (0.47209043661533112, 0.1694486790024482)
score = 0.32076955780888966
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (217, 221)
train = (1.1630161450943159, 1.1597358733141634)
scores = (0.52395579596109376, 0.48347802548131835)
score = 0.5037169107212061
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (217, 221)
train = (1.1630161450943159, 1.1597358733141634)
scores = (0.52395579596109376, 0.48347802548131835)
score = 0.5037169107212061
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (130, 288)
train = (1.1915394010035132, 1.5256265035575205)
scores = (0.482553012642983, 0.46365393577567637)
score = 0.4731034742093297
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.0511426246498734, 1.2305010721717784)
scores = (0.29002204601443704, 0.2048566014348249)
score = 0.24743932372463096
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 197)
train = (1.0568185310520943, 1.1419859036380262)
scores = (0.5120277015936523, 0.47871481465073562)
score = 0.49537125812219396
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (144, 197)
train = (1.0568185310520943, 1.1419859036380262)
scores = (0.5120277015936523, 0.47871481465073562)
score = 0.49537125812219396
>>> t = 3500 ===================================================================================================
(pair) len(F.columns) = 66
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1,2,1:2] 
          }
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| Volatility)
        & [20:] 
      }
    | 
        <>Return{pure&~dd} & VP[5:] 
    | 
        | Return{mix[5,9,12,13,14,15,18,19]}
        | Return{ it} 
    | 
        Time{long| short}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|doo|doc)
            & index[1,2] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,20]} 
                | Drawup[ 5:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[1:, 10:5] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.25, 2012.75, 2009.25, 2013.5, 2014.5, 2009.0, 2015.25, 2011.5, 2012.0, 2013.75, 2014.0, 2015.0}), frozenset({2010.25, 2010.5, 2010.75, 2012.5, 2009.75, 2013.25, 2014.25, 2009.5, 2010.0, 2011.0, 2012.25, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 206)
train = (0.47137553500054868, 1.9202807156398167)
scores = (0.47118455473970072, 0.48468592460620491)
score = 0.4779352396729528
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 19)
train = (0.58849738092585524, 1.4379325965687131)
scores = (0.3774982812648815, 0.4173256076553567)
score = 0.39741194446011907
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (73, 23)
train = (0.6956979347295813, 0.89845799700451934)
scores = (0.4566566008199312, 0.41715815717665483)
score = 0.436907378998293
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (14, 206)
train = (0.47137553500054868, 1.9202807156398167)
scores = (0.47118455473970072, 0.48468592460620491)
score = 0.4779352396729528
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 10)
train = (0.53684858154306014, 1.164228877400618)
scores = (0.46746379147693962, 0.43067903397832141)
score = 0.4490714127276305
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 75)
train = (0.72932000491204529, 2.1238576330195893)
scores = (0.45424669282900215, 0.41166642073714299)
score = 0.43295655678307254
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (77, 71)
train = (0.76553546035423758, 1.2450707725969374)
scores = (0.47214999278061265, 0.43775576436359021)
score = 0.4549528785721014
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (77, 71)
train = (0.76553546035423758, 1.2450707725969374)
scores = (0.47214999278061265, 0.43775576436359021)
score = 0.4549528785721014
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 26)
train = (0.58182995276949312, 1.4884484816207761)
scores = (0.49052402310104282, 0.44932321538098857)
score = 0.46992361924101567
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 38)
train = (0.73372829980841525, 2.1803250934149152)
scores = (0.4586897799278794, 0.43677905929680444)
score = 0.44773441961234195
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 19)
train = (0.7065239640779174, 0.95499753632761963)
scores = (0.45966130767982089, 0.43098399297620682)
score = 0.4453226503280139
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (11, 26)
train = (0.58182995276949312, 1.4884484816207761)
scores = (0.49052402310104282, 0.44932321538098857)
score = 0.46992361924101567
>>> t = 3501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1,2,1:2] 
          }
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| Volatility)
        & [20:] 
      }
    | 
        <>Return{pure&~dd} & VP[5:] 
    | 
        | Return{mix[5,9,12,13,14,15,18,19]}
        | Return{ it} 
    | 
        Time{long| short}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|doo|doc)
            & index[1,2] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,20]} 
                | Drawup[ 5:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[1:, 10:5] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2012.5, 2012.75, 2009.75, 2014.25, 2014.75, 2009.25, 2010.5, 2011.25, 2012.25, 2014.0, 2015.25}), frozenset({2011.5, 2011.75, 2009.0, 2013.25, 2013.5, 2013.75, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 17)
train = (1.1269196421086372, 0.77938945028357609)
scores = (0.44368222252008255, 0.30131566889384759)
score = 0.37249894570696507
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 1)
train = (0.78757122334485608, 0.49351511675107279)
scores = (0.40007315010641653, 0.24890616477319985)
score = 0.3244896574398082
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 81)
train = (1.0615395178027747, 0.86855252641174163)
scores = (0.43405124500868558, 0.3534838685963822)
score = 0.3937675568025339
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (55, 81)
train = (1.0615395178027747, 0.86855252641174163)
scores = (0.43405124500868558, 0.3534838685963822)
score = 0.3937675568025339
>>> t = 3502 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1,2,1:2] 
          }
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| Volatility)
        & [20:] 
      }
    | 
        <>Return{pure&~dd} & VP[5:] 
    | 
        | Return{mix[5,9,12,13,14,15,18,19]}
        | Return{ it} 
    | 
        Time{long| short}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|doo|doc)
            & index[1,2] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,20]} 
                | Drawup[ 5:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[1:, 10:5] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.25, 2011.0, 2012.75, 2013.25, 2009.5, 2010.0, 2011.75, 2012.0, 2013.5, 2014.25, 2015.25}), frozenset({2010.5, 2012.5, 2009.25, 2009.75, 2013.75, 2014.5, 2014.0, 2009.0, 2010.75, 2012.25, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 20)
train = (1.3671444140114419, 0.43646781684281921)
scores = (0.37235779436032179, 0.48760385045941529)
score = 0.42998082240986857
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 1)
train = (1.663437210924358, 0.51068733642843434)
scores = (0.37045911715389485, 0.23812683565478282)
score = 0.30429297640433883
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 28)
train = (1.1213030177048986, 0.57549675855187366)
scores = (0.38165418261128148, 0.45566098188326276)
score = 0.4186575822472721
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (40, 20)
train = (1.3671444140114419, 0.43646781684281921)
scores = (0.37235779436032179, 0.48760385045941529)
score = 0.42998082240986857
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 20)
train = (1.5340115032258883, 0.53400789598621545)
scores = (0.35711171556286514, 0.51478816033373831)
score = 0.4359499379483017
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (78, 42)
train = (1.7968606344686504, 0.66066887427558407)
scores = (0.37289278258174519, 0.50704801804763378)
score = 0.4399704003146895
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 23)
train = (1.1778026721328103, 0.61539808242752048)
scores = (0.37021749739371251, 0.46852928897911766)
score = 0.4193733931864151
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (78, 42)
train = (1.7968606344686504, 0.66066887427558407)
scores = (0.37289278258174519, 0.50704801804763378)
score = 0.4399704003146895
>>> t = 3600 ===================================================================================================
(pair) len(F.columns) = 85
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 254
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2012.5, 2012.0, 2009.5, 2013.0, 2009.0, 2010.25, 2011.5, 2012.25, 2013.5, 2014.25, 2015.25}), frozenset({2010.0, 2011.25, 2009.75, 2013.75, 2014.5, 2014.0, 2009.25, 2010.75, 2011.0, 2012.75, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 79)
train = (0.53187562370478136, 1.0052415230060492)
scores = (0.13690384383205587, 0.23722263784348482)
score = 0.18706324083777034
>>> t = 3601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 254
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2011.0, 2012.0, 2012.75, 2009.75, 2014.0, 2009.0, 2010.0, 2011.25, 2012.5, 2013.75, 2014.75}), frozenset({2010.75, 2015.0, 2009.25, 2013.25, 2013.5, 2014.25, 2009.5, 2010.25, 2011.75, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (416, 2)
train = (1.024315860979188, 0.55405853543051498)
scores = (0.18844345042852861, 0.1416314717925847)
score = 0.16503746111055667
>>> t = 3700 ===================================================================================================
(pair) len(F.columns) = 11
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 13
0
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,12:,18:,18:15,9:3,12:6,            15:9,21:15,15:6,15:3,21:9,21:3] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2011.75, 2012.75, 2014.25, 2014.0, 2009.75, 2010.75, 2011.25, 2012.25, 2013.25, 2014.5, 2015.25}), frozenset({2010.25, 2011.5, 2012.5, 2009.0, 2009.25, 2013.5, 2013.75, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.36615546485199418, 0.2742281209203673)
scores = (0.24175384186809332, 0.36087425494221248)
score = 0.3013140484051529
>>> t = 3701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 13
0
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,12:,18:,18:15,9:3,12:6,            15:9,21:15,15:6,15:3,21:9,21:3] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2012.75, 2012.5, 2009.25, 2013.5, 2009.75, 2010.25, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}), frozenset({2010.75, 2011.75, 2009.0, 2013.75, 2014.25, 2014.0, 2009.5, 2010.0, 2011.25, 2012.0, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 12)
train = (0.40699655948767921, 0.31658581757610038)
scores = (0.26307994294926951, 0.37153969794719427)
score = 0.31730982044823186
>>> t = 3800 ===================================================================================================
(pair) len(F.columns) = 11
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 15
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|daoc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.25, 2012.75, 2009.25, 2014.0, 2009.75, 2010.0, 2011.0, 2009.5, 2013.25, 2014.5, 2015.25}), frozenset({2010.5, 2012.25, 2012.5, 2013.5, 2013.75, 2014.25, 2009.0, 2010.75, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (142, 108)
train = (0.72169560288056489, 0.64002218643461639)
scores = (0.26151592067185753, 0.29255137092276384)
score = 0.2770336457973107
>>> t = 3801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 15
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|daoc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2011.0, 2012.75, 2013.5, 2014.0, 2014.75, 2009.75, 2010.25, 2011.5, 2012.5, 2013.0, 2014.5, 2015.0}), frozenset({2010.75, 2011.75, 2012.25, 2009.0, 2009.25, 2013.75, 2009.5, 2010.5, 2011.25, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 52)
train = (0.70420014098176398, 0.64979611789587333)
scores = (0.2907088670567719, 0.31256711010840904)
score = 0.3016379885825905
>>> t = 3900 ===================================================================================================
(pair) len(F.columns) = 29
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5,10]} 
                | Drawup[1,10:,20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP)
        & [5:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:,15:,15:10,20:15,15:5,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2012.75, 2009.75, 2009.0, 2013.0, 2013.25, 2009.25, 2010.75, 2011.75, 2012.5, 2013.75, 2015.25}), frozenset({2010.25, 2011.25, 2011.5, 2012.25, 2014.5, 2014.25, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.5, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 81)
train = (0.41615618461270104, 0.6813319426855865)
scores = (0.28911785123192235, 0.20100270414372781)
score = 0.24506027768782507
>>> t = 3901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5,10]} 
                | Drawup[1,10:,20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP)
        & [5:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:,15:,15:10,20:15,15:5,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2010.25, 2010.75, 2013.5, 2013.0, 2013.25, 2009.75, 2010.0, 2011.75, 2012.0, 2013.75, 2014.75, 2015.0}), frozenset({2011.25, 2011.5, 2012.5, 2012.75, 2009.0, 2009.25, 2014.25, 2014.0, 2009.5, 2011.0, 2012.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 53)
train = (0.42635611576844135, 0.62275720852460426)
scores = (0.25665288753415177, 0.25400790967082454)
score = 0.2553303986024882
>>> t = 4000 ===================================================================================================
(pair) len(F.columns) = 88
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 159
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doc|daoc)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,20:,20:10] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2012.25, 2012.5, 2013.0, 2013.25, 2013.75, 2014.5, 2009.5, 2015.25, 2011.75, 2012.75, 2013.5, 2014.75, 2015.0}), frozenset({2010.0, 2010.5, 2010.75, 2011.25, 2011.5, 2009.25, 2009.75, 2014.0, 2009.0, 2010.25, 2011.0, 2012.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 69)
train = (0.87079192257113491, 0.80110636027732551)
scores = (0.3151400641479194, 0.41399313175063968)
score = 0.36456659794927954
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 47)
train = (1.4609923375036411, 0.60564456999670135)
scores = (0.31768530036859677, 0.45347355153693691)
score = 0.38557942595276684
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (237, 161)
train = (1.284165184190571, 0.96147984118998464)
scores = (0.33776918748497115, 0.44197449993396648)
score = 0.3898718437094688
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (237, 161)
train = (1.284165184190571, 0.96147984118998464)
scores = (0.33776918748497115, 0.44197449993396648)
score = 0.3898718437094688
>>> t = 4001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 159
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doc|daoc)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,20:,20:10] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.25, 2011.5, 2012.5, 2009.5, 2013.5, 2014.0, 2014.25, 2009.25, 2010.25, 2011.0, 2012.0, 2013.0, 2014.5}), frozenset({2010.0, 2010.75, 2015.0, 2012.75, 2009.75, 2013.75, 2009.0, 2010.5, 2011.75, 2012.25, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 2)
train = (0.85226936038187695, 0.79233728871991749)
scores = (0.42455965727923906, 0.38379311501617658)
score = 0.4041763861477078
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 3)
train = (0.60228492246294218, 0.61333689860184304)
scores = (0.38060159256649223, 0.31743288675972875)
score = 0.3490172396631105
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (127, 5)
train = (0.97649469024182123, 0.68351418374594242)
scores = (0.47036902460157887, 0.33276290867806607)
score = 0.40156596663982247
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 2)
train = (0.85226936038187695, 0.79233728871991749)
scores = (0.42455965727923906, 0.38379311501617658)
score = 0.4041763861477078
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 1)
train = (1.0246284851802367, 0.90573284380858576)
scores = (0.40710483167492983, 0.38275318025064337)
score = 0.3949290059627866
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 3)
train = (0.81406030815524955, 0.81020845859158619)
scores = (0.27890845373279732, 0.32207251192586006)
score = 0.30049048282932866
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (140, 5)
train = (1.1167545872311226, 0.69295562608280237)
scores = (0.48198766517164582, 0.33613919969523409)
score = 0.40906343243343996
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (140, 5)
train = (1.1167545872311226, 0.69295562608280237)
scores = (0.48198766517164582, 0.33613919969523409)
score = 0.40906343243343996
>>> t = 4100 ===================================================================================================
(pair) len(F.columns) = 140
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 156
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,20:] 
                | Since{Min & index[0,20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP)
        & [1:] 
      }
#<>#
    <>~Market & (
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                | Drawdown[10:, 10:5] 
                | Since{Max&index[0]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,1, 0:1] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2015.0, 2012.5, 2013.75, 2013.25, 2014.5, 2009.25, 2010.5, 2011.0, 2012.25, 2013.0, 2014.0, 2015.25}), frozenset({2010.25, 2011.5, 2011.75, 2012.75, 2009.0, 2009.75, 2014.25, 2009.5, 2010.0, 2011.25, 2012.0, 2013.5, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (95, 12)
train = (1.0856252307333096, 0.7069278985595413)
scores = (0.49663797368727031, 0.36571123805420824)
score = 0.4311746058707393
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 15)
train = (0.9066560817471967, 0.76517998764928197)
scores = (0.4629419669021449, 0.3647387505917481)
score = 0.41384035874694647
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (136, 13)
train = (1.0410578549822544, 0.64014426571032934)
scores = (0.493900957229858, 0.35015504309295831)
score = 0.4220280001614082
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (95, 12)
train = (1.0856252307333096, 0.7069278985595413)
scores = (0.49663797368727031, 0.36571123805420824)
score = 0.4311746058707393
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (116, 14)
train = (1.3208962382451825, 0.78780091505313321)
scores = (0.49022810959091334, 0.35998357818782706)
score = 0.4251058438893702
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 37)
train = (1.2632986584286428, 0.98971047525193478)
scores = (0.45394378324336637, 0.36483864021723983)
score = 0.40939121173030313
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (108, 16)
train = (1.0469625958419653, 0.66243835871198931)
scores = (0.50484349904473791, 0.34829572606547315)
score = 0.4265696125551055
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (108, 16)
train = (1.0469625958419653, 0.66243835871198931)
scores = (0.50484349904473791, 0.34829572606547315)
score = 0.4265696125551055
>>> t = 4101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 156
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,20:] 
                | Since{Min & index[0,20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP)
        & [1:] 
      }
#<>#
    <>~Market & (
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                | Drawdown[10:, 10:5] 
                | Since{Max&index[0]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,1, 0:1] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.5, 2010.0, 2011.5, 2012.75, 2013.25, 2013.0, 2009.0, 2010.25, 2011.75, 2009.75, 2013.5, 2014.5}), frozenset({2011.25, 2012.25, 2012.5, 2009.25, 2014.25, 2014.0, 2009.5, 2015.0, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 94)
train = (0.64428386853166997, 1.1716130417815789)
scores = (0.35964188070106679, 0.53133535192574766)
score = 0.4454886163134072
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 48)
train = (0.7232674966385304, 1.0048698468857402)
scores = (0.38170153161330889, 0.50242327482997973)
score = 0.4420624032216443
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (205, 3)
train = (0.88102827887277813, 0.60223367270079675)
scores = (0.34202345969323034, 0.51293196929029627)
score = 0.4274777144917633
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (5, 94)
train = (0.64428386853166997, 1.1716130417815789)
scores = (0.35964188070106679, 0.53133535192574766)
score = 0.4454886163134072
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 116)
train = (0.73169369495561298, 1.3091519793497657)
scores = (0.37035540994391641, 0.53322536938697473)
score = 0.4517903896654456
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 69)
train = (0.82293168707145337, 1.2609286117442615)
scores = (0.37236627577356113, 0.49111662020883484)
score = 0.43174144799119796
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (280, 3)
train = (1.0498547512242189, 0.61272734374611038)
scores = (0.34414836507177043, 0.51309230924186588)
score = 0.42862033715681813
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (18, 116)
train = (0.73169369495561298, 1.3091519793497657)
scores = (0.37035540994391641, 0.53322536938697473)
score = 0.4517903896654456
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 54)
train = (0.70218125497434924, 1.2273865554279075)
scores = (0.36922871442198485, 0.53014920136747323)
score = 0.44968895789472907
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 50)
train = (0.92889241667459665, 1.3481620468221927)
scores = (0.3881168562806479, 0.4955396932776821)
score = 0.441828274779165
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (206, 3)
train = (0.99003886869791324, 0.61272734374611038)
scores = (0.34671346621444743, 0.51309230924186588)
score = 0.42990288772815666
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 54)
train = (0.70218125497434924, 1.2273865554279075)
scores = (0.36922871442198485, 0.53014920136747323)
score = 0.44968895789472907
>>> t = 4200 ===================================================================================================
(pair) len(F.columns) = 135
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.0, 2015.25, 2013.0, 2014.0, 2014.5, 2014.75, 2009.0, 2010.5, 2011.25, 2012.5, 2013.5, 2014.25, 2015.0}), frozenset({2010.75, 2011.5, 2011.75, 2012.25, 2012.75, 2009.25, 2009.75, 2013.75, 2009.5, 2010.25, 2011.0, 2012.0, 2013.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 14)
train = (0.66166301376564141, 0.83893597452097657)
scores = (0.49793930200301789, 0.39686215289809634)
score = 0.44740072745055715
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 44)
train = (0.53601364543703134, 0.89735403594945051)
scores = (0.37511619511387445, 0.37019592188521599)
score = 0.3726560584995452
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 23)
train = (0.67767621098041053, 0.89410458695156603)
scores = (0.5271199608370456, 0.41871337967575012)
score = 0.47291667025639783
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (19, 23)
train = (0.67767621098041053, 0.89410458695156603)
scores = (0.5271199608370456, 0.41871337967575012)
score = 0.47291667025639783
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 17)
train = (0.84124014212335596, 1.0122561652352606)
scores = (0.50992519831967764, 0.40059411201416462)
score = 0.45525965516692113
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 21)
train = (0.64331254143556038, 0.96573906339742044)
scores = (0.36949227800128653, 0.35876655367250065)
score = 0.3641294158368936
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 23)
train = (0.67767621098041053, 0.9130064457835052)
scores = (0.52711996083704571, 0.41111590769396616)
score = 0.46911793426550596
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (19, 23)
train = (0.67767621098041053, 0.9130064457835052)
scores = (0.52711996083704571, 0.41111590769396616)
score = 0.46911793426550596
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 17)
train = (0.84727412895043808, 1.0691082140852783)
scores = (0.51079935544193777, 0.4083193638313028)
score = 0.4595593596366203
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 33)
train = (0.77354659911899271, 1.1524857697213686)
scores = (0.36906223458815796, 0.37565183976771616)
score = 0.37235703717793706
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 7)
train = (0.74790928186236894, 0.73954698729249535)
scores = (0.52846409250020832, 0.40911688197466228)
score = 0.4687904872374353
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (24, 7)
train = (0.74790928186236894, 0.73954698729249535)
scores = (0.52846409250020832, 0.40911688197466228)
score = 0.4687904872374353
>>> t = 4201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.75, 2011.75, 2011.25, 2009.0, 2009.75, 2013.5, 2014.0, 2009.25, 2010.25, 2011.5, 2012.25, 2013.0, 2014.25}), frozenset({2010.5, 2015.0, 2012.5, 2012.75, 2013.75, 2014.5, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 15)
train = (0.73119497583468074, 1.1883391260670635)
scores = (0.34977543820756718, 0.48416125665407944)
score = 0.41696834743082334
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (142, 13)
train = (0.79629481584071204, 1.084711020454415)
scores = (0.46062840764907409, 0.42170627490172763)
score = 0.44116734127540086
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 26)
train = (0.83616102517875823, 1.165590920760786)
scores = (0.4894833161143316, 0.50335954167448593)
score = 0.49642142889440877
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (72, 26)
train = (0.83616102517875823, 1.165590920760786)
scores = (0.4894833161143316, 0.50335954167448593)
score = 0.49642142889440877
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 25)
train = (0.8066426143425186, 1.3900512008888017)
scores = (0.37536233447086959, 0.49399970614245192)
score = 0.4346810203066608
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (58, 3)
train = (0.73924941742975658, 1.4284805779483152)
scores = (0.43417727980261778, 0.29728117109170954)
score = 0.3657292254471637
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 26)
train = (0.86399605908064281, 1.2269665347416414)
scores = (0.50086572857040623, 0.50869863287793404)
score = 0.5047821807241701
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (47, 26)
train = (0.86399605908064281, 1.2269665347416414)
scores = (0.50086572857040623, 0.50869863287793404)
score = 0.5047821807241701
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 20)
train = (0.85681235052391169, 1.4735414988778113)
scores = (0.42306127626813239, 0.49961316516319743)
score = 0.4613372207156649
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 2)
train = (0.80701123712133482, 1.6857472264176476)
scores = (0.41589304437342095, 0.28234398634135122)
score = 0.3491185153573861
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 26)
train = (0.87541481729005943, 1.2269665347416419)
scores = (0.51573867536151097, 0.50869863287793404)
score = 0.5122186541197224
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (39, 26)
train = (0.87541481729005943, 1.2269665347416419)
scores = (0.51573867536151097, 0.50869863287793404)
score = 0.5122186541197224
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 22)
train = (0.90778660774432518, 1.5246498623944886)
scores = (0.43915046125920537, 0.51310851511379796)
score = 0.4761294881865017
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 3)
train = (0.90091533976821436, 1.8443536634595477)
scores = (0.40245671544089129, 0.30739120069702758)
score = 0.35492395806895943
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 26)
train = (0.87541481729005943, 1.2269665347416416)
scores = (0.51573867536151108, 0.50869863287793404)
score = 0.5122186541197226
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (39, 26)
train = (0.87541481729005943, 1.2269665347416416)
scores = (0.51573867536151108, 0.50869863287793404)
score = 0.5122186541197226
>>> t = 4202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2012.25, 2009.25, 2009.75, 2014.75, 2009.0, 2010.5, 2011.25, 2012.5, 2013.0, 2014.5, 2015.0}), frozenset({2011.5, 2011.75, 2012.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.75, 2011.0, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 43)
train = (0.78474304161383135, 1.276147528000823)
scores = (0.41063754586386697, 0.45329403504810978)
score = 0.4319657904559884
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 21)
train = (0.64317212709231808, 1.2791762360242618)
scores = (0.44487994393038049, 0.44338776181225559)
score = 0.444133852871318
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 24)
train = (0.72651466677554388, 1.172910556156745)
scores = (0.43363467545134299, 0.51987100525667795)
score = 0.47675284035401044
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (29, 24)
train = (0.72651466677554388, 1.172910556156745)
scores = (0.43363467545134299, 0.51987100525667795)
score = 0.47675284035401044
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (23, 48)
train = (0.84712175478210294, 1.517297832881346)
scores = (0.43066906896469342, 0.47646369885287232)
score = 0.4535663839087829
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 19)
train = (0.76735063247520274, 1.4258119743556239)
scores = (0.39605665076959101, 0.4815520811540675)
score = 0.43880436596182926
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 26)
train = (0.90123526480466387, 1.2522164834940042)
scores = (0.43656553953272531, 0.54657955024667693)
score = 0.49157254488970115
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (65, 26)
train = (0.90123526480466387, 1.2522164834940042)
scores = (0.43656553953272531, 0.54657955024667693)
score = 0.49157254488970115
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 30)
train = (0.9150721039436599, 1.543429081009535)
scores = (0.43663050987609675, 0.49024991902239673)
score = 0.46344021444924677
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (116, 18)
train = (1.1708717925655823, 1.4801507070330862)
scores = (0.42643478686600089, 0.42478634026937068)
score = 0.4256105635676858
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 28)
train = (0.91866455898136723, 1.2880480299179535)
scores = (0.441089769856435, 0.54161567027702173)
score = 0.49135272006672837
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (69, 28)
train = (0.91866455898136723, 1.2880480299179535)
scores = (0.441089769856435, 0.54161567027702173)
score = 0.49135272006672837
>>> t = 4203 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2012.75, 2009.0, 2009.5, 2009.75, 2014.0, 2014.75, 2014.5, 2009.25, 2010.75, 2011.0, 2012.25, 2013.25, 2014.25}), frozenset({2010.0, 2010.5, 2015.0, 2011.5, 2011.75, 2012.5, 2013.5, 2013.75, 2010.25, 2011.25, 2012.0, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 28)
train = (0.75970730524191155, 1.1319320865488576)
scores = (0.36602954401161514, 0.44423813896860448)
score = 0.4051338414901098
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (112, 216)
train = (0.85444606193153727, 1.5798933174866174)
scores = (0.44387963606409153, 0.4450163615765379)
score = 0.4444479988203147
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (120, 5)
train = (0.90036024646199087, 0.76922495421441939)
scores = (0.42933235955971272, 0.47884781750631183)
score = 0.45409008853301225
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (120, 5)
train = (0.90036024646199087, 0.76922495421441939)
scores = (0.42933235955971272, 0.47884781750631183)
score = 0.45409008853301225
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 23)
train = (0.86721702151647184, 1.3397799044012975)
scores = (0.37163177831652128, 0.4581783548235564)
score = 0.41490506657003884
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 106)
train = (0.84832102609454174, 1.6038908124601359)
scores = (0.37430794600364808, 0.44752902924742122)
score = 0.4109184876255346
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 5)
train = (0.77063862157223506, 0.76922495421441939)
scores = (0.42701599414088143, 0.47884781750631183)
score = 0.45293190582359666
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (38, 5)
train = (0.77063862157223506, 0.76922495421441939)
scores = (0.42701599414088143, 0.47884781750631183)
score = 0.45293190582359666
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (220, 23)
train = (1.1457119230148685, 1.4458463375343718)
scores = (0.44400638670317971, 0.46978759956029403)
score = 0.4568969931317369
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 1)
train = (0.95874721662051554, 1.4498950390351069)
scores = (0.40559167946178576, 0.16298713005087073)
score = 0.28428940475632825
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (86, 5)
train = (0.94135533105399938, 0.76922495421441939)
scores = (0.44881020062449417, 0.47884781750631183)
score = 0.46382900906540303
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (86, 5)
train = (0.94135533105399938, 0.76922495421441939)
scores = (0.44881020062449417, 0.47884781750631183)
score = 0.46382900906540303
>>> t = 4300 ===================================================================================================
(pair) len(F.columns) = 25
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[0,20]} 
                | Drawup[ 5:, 10:5] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[21:,62:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.75, 2012.75, 2009.0, 2009.75, 2009.25, 2010.25, 2011.0, 2012.0, 2013.5, 2014.75, 2015.25}), frozenset({2010.75, 2012.5, 2013.25, 2013.75, 2014.25, 2014.0, 2009.5, 2010.0, 2011.5, 2012.25, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (129, 42)
train = (0.99801645258413807, 1.1808421796285635)
scores = (0.30068273813473945, 0.20637554601176133)
score = 0.2535291420732504
>>> t = 4301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[0,20]} 
                | Drawup[ 5:, 10:5] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[21:,62:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.0, 2009.25, 2013.5, 2013.0, 2014.0, 2009.75, 2010.75, 2011.25, 2009.0, 2013.25, 2014.75, 2015.25}), frozenset({2010.5, 2011.75, 2012.25, 2012.5, 2012.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.0, 2013.75, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 51)
train = (0.94347600423069466, 1.2130761761731914)
scores = (0.20997018208811508, 0.1530809015432312)
score = 0.18152554181567315
>>> t = 4400 ===================================================================================================
(pair) len(F.columns) = 31
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:5,20:15,15:5] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0]} 
                | Since{Min&index[20]} 
              )
            & Since[21:] 
          )
      )
    | 
        | FracRec[21:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.25, 2012.5, 2012.25, 2009.0, 2009.25, 2013.25, 2014.25, 2009.5, 2010.5, 2011.75, 2012.0, 2013.75, 2014.75}), frozenset({2010.25, 2010.75, 2015.0, 2011.5, 2013.5, 2014.0, 2009.75, 2010.0, 2011.0, 2012.75, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 47)
train = (0.89592641471234236, 0.76168167320840796)
scores = (0.52724317484820771, 0.30566927513439202)
score = 0.41645622499129986
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 165)
train = (0.93560069337704033, 1.4875778492747918)
scores = (0.52410173734263299, 0.3112639759065628)
score = 0.4176828566245979
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 96)
train = (0.83252159955179661, 0.65499179822264331)
scores = (0.52125688206139709, 0.31005407523584411)
score = 0.4156554786486206
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (104, 165)
train = (0.93560069337704033, 1.4875778492747918)
scores = (0.52410173734263299, 0.3112639759065628)
score = 0.4176828566245979
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (103, 52)
train = (0.97306201178495999, 0.8344653923342038)
scores = (0.5307285066845826, 0.30585471742895792)
score = 0.41829161205677023
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 308)
train = (1.0118272474955665, 2.4996705938566977)
scores = (0.50039466703519708, 0.31596315197270347)
score = 0.4081789095039503
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 77)
train = (0.78753495892557035, 0.6500081375143747)
scores = (0.52138034861969074, 0.31498763620449277)
score = 0.41818399241209175
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (103, 52)
train = (0.97306201178495999, 0.8344653923342038)
scores = (0.5307285066845826, 0.30585471742895792)
score = 0.41829161205677023
>>> t = 4401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:5,20:15,15:5] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0]} 
                | Since{Min&index[20]} 
              )
            & Since[21:] 
          )
      )
    | 
        | FracRec[21:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2012.5, 2009.5, 2009.75, 2013.0, 2009.25, 2010.75, 2011.5, 2012.0, 2013.5, 2014.25, 2015.25}), frozenset({2010.0, 2011.75, 2012.75, 2013.75, 2014.5, 2014.0, 2009.0, 2010.25, 2011.0, 2012.25, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 9)
train = (0.95208794401926122, 0.73587072538105114)
scores = (0.55369797293929102, 0.19071795387737048)
score = 0.37220796340833073
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 2)
train = (0.98030122458533953, 0.75773353780110575)
scores = (0.54336285437813148, 0.18699602541777191)
score = 0.3651794398979517
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 9)
train = (0.59458516611172185, 0.61137223355511061)
scores = (0.5773758242926208, 0.18389408107954303)
score = 0.38063495268608194
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 9)
train = (0.59458516611172185, 0.61137223355511061)
scores = (0.5773758242926208, 0.18389408107954303)
score = 0.38063495268608194
>>> t = 4500 ===================================================================================================
(pair) len(F.columns) = 30
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 67
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc)
            & index[0,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [5:,10:,15:,15:10,20:10] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [20:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long| short}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2012.25, 2012.0, 2012.75, 2013.0, 2013.75, 2013.25, 2014.5, 2010.25, 2011.0, 2012.5, 2013.5, 2014.25}), frozenset({2010.5, 2010.75, 2015.0, 2011.5, 2009.25, 2009.75, 2014.0, 2009.5, 2010.0, 2011.25, 2009.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 51)
train = (0.48251107472866195, 0.77196526744233529)
scores = (0.30396422310358018, 0.37319884209244364)
score = 0.33858153259801194
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 92)
train = (0.65896718904031437, 0.84667953945946772)
scores = (0.31347037077208473, 0.35088969509510315)
score = 0.33218003293359394
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (236, 101)
train = (0.72516334210509414, 0.66133019999514975)
scores = (0.37215807711763083, 0.40467175719487214)
score = 0.3884149171562515
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (236, 101)
train = (0.72516334210509414, 0.66133019999514975)
scores = (0.37215807711763083, 0.40467175719487214)
score = 0.3884149171562515
>>> t = 4501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 67
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc)
            & index[0,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [5:,10:,15:,15:10,20:10] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [20:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long| short}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2012.0, 2012.5, 2012.75, 2013.75, 2014.25, 2009.75, 2010.0, 2011.5, 2012.25, 2013.5, 2014.75, 2015.25}), frozenset({2010.5, 2011.25, 2011.75, 2009.25, 2013.25, 2014.0, 2009.5, 2010.25, 2011.0, 2009.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (299, 1)
train = (1.0972222199028754, 0.50983736580600958)
scores = (0.43471930318674024, 0.33239201025886256)
score = 0.3835556567228014
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (215, 3)
train = (1.2511082633438504, 0.6222422688721525)
scores = (0.43998807562951858, 0.36610243494141359)
score = 0.4030452552854661
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (294, 3)
train = (0.82315857565479844, 0.42822750806412929)
scores = (0.44172703422082077, 0.34494086816600694)
score = 0.39333395119341386
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (215, 3)
train = (1.2511082633438504, 0.6222422688721525)
scores = (0.43998807562951858, 0.36610243494141359)
score = 0.4030452552854661
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (239, 4)
train = (1.1354242149695866, 0.60458879091149553)
scores = (0.43724843069164532, 0.34677933689458901)
score = 0.3920138837931172
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 6)
train = (1.3481737735849408, 0.80032688355805137)
scores = (0.44657529147828556, 0.40087956758751458)
score = 0.4237274295329001
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (254, 3)
train = (0.86276970225365701, 0.43529804623827828)
scores = (0.43317931467944837, 0.34455358634183325)
score = 0.38886645051064084
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 6)
train = (1.3481737735849408, 0.80032688355805137)
scores = (0.44657529147828556, 0.40087956758751458)
score = 0.4237274295329001
>>> t = 4600 ===================================================================================================
(pair) len(F.columns) = 104
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2015.0, 2009.25, 2013.0, 2014.25, 2014.5, 2009.0, 2010.5, 2011.0, 2012.25, 2013.75, 2014.0, 2015.25}), frozenset({2010.75, 2011.5, 2011.75, 2012.5, 2012.75, 2009.75, 2013.5, 2009.5, 2010.25, 2011.25, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 388)
train = (0.70004772754226463, 1.6156370244908536)
scores = (0.29126831815680054, 0.49954725807262318)
score = 0.3954077881147119
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (229, 138)
train = (0.83054394700303302, 1.4064044609397892)
scores = (0.56135640993884262, 0.50106037849997231)
score = 0.5312083942194075
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (298, 403)
train = (0.90075313280983038, 1.4892616872814175)
scores = (0.52749848903209318, 0.45626922910084411)
score = 0.49188385906646864
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (229, 138)
train = (0.83054394700303302, 1.4064044609397892)
scores = (0.56135640993884262, 0.50106037849997231)
score = 0.5312083942194075
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 284)
train = (0.84783898913683509, 1.6466638460593321)
scores = (0.32209580972274482, 0.51051227232259166)
score = 0.41630404102266827
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (130, 163)
train = (0.84510803484657493, 1.6216081697368738)
scores = (0.575825528619754, 0.52292657842952606)
score = 0.54937605352464
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (382, 321)
train = (1.0543566395175377, 1.519245318727015)
scores = (0.55387295519645185, 0.45627578125425611)
score = 0.505074368225354
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (130, 163)
train = (0.84510803484657493, 1.6216081697368738)
scores = (0.575825528619754, 0.52292657842952606)
score = 0.54937605352464
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 351)
train = (0.92596914662917673, 1.7688968892763521)
scores = (0.35772659684835095, 0.50925977153512247)
score = 0.4334931841917367
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (140, 173)
train = (0.99603808697814356, 1.7971072639319703)
scores = (0.55601415451162239, 0.52151011641632383)
score = 0.5387621354639731
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (240, 333)
train = (1.07791365307741, 1.5918423156737265)
scores = (0.53411574240399251, 0.45887096878327677)
score = 0.4964933555936346
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (140, 173)
train = (0.99603808697814356, 1.7971072639319703)
scores = (0.55601415451162239, 0.52151011641632383)
score = 0.5387621354639731
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 193)
train = (0.95792298804582687, 1.7294041999387548)
scores = (0.39295573132487666, 0.50633912956309135)
score = 0.44964743044398403
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 312)
train = (0.96526059423712407, 2.0350838075474109)
scores = (0.51271271122570294, 0.54369174393211994)
score = 0.5282022275789114
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (331, 538)
train = (1.2521870534669013, 1.6964485041933481)
scores = (0.5593350267723719, 0.48312286815169797)
score = 0.521228947462035
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (16, 312)
train = (0.96526059423712407, 2.0350838075474109)
scores = (0.51271271122570294, 0.54369174393211994)
score = 0.5282022275789114
>>> t = 4601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.5, 2012.0, 2009.75, 2009.0, 2014.5, 2009.5, 2010.5, 2011.0, 2012.5, 2013.0, 2014.0}), frozenset({2015.0, 2011.75, 2012.75, 2013.5, 2013.75, 2014.25, 2009.25, 2010.0, 2011.25, 2012.25, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 529)
train = (0.80126354759052654, 1.4040762958954554)
scores = (0.55768751710044362, 0.47775775480697019)
score = 0.5177226359537069
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 88)
train = (0.70875381429606521, 1.056910189888588)
scores = (0.50286979011618471, 0.42241619160238947)
score = 0.46264299085928706
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 575)
train = (0.79390769454678722, 1.4274422256550245)
scores = (0.63508348955718708, 0.46277984382651871)
score = 0.5489316666918529
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 575)
train = (0.79390769454678722, 1.4274422256550245)
scores = (0.63508348955718708, 0.46277984382651871)
score = 0.5489316666918529
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 484)
train = (0.82932056901415607, 1.5740386153278323)
scores = (0.56803754431691555, 0.51537236389835461)
score = 0.5417049541076351
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 105)
train = (0.74121543684407853, 1.3487224968263556)
scores = (0.4897566905386444, 0.45150406250445868)
score = 0.47063037652155154
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 599)
train = (1.0984133480743103, 1.6151123726685084)
scores = (0.62070357429988543, 0.48448663191030789)
score = 0.5525951031050966
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (89, 599)
train = (1.0984133480743103, 1.6151123726685084)
scores = (0.62070357429988543, 0.48448663191030789)
score = 0.5525951031050966
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 519)
train = (0.87327257631402611, 1.6902932515238724)
scores = (0.59562486650501212, 0.52103402034589197)
score = 0.558329443425452
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 75)
train = (0.81617427438927925, 1.4704811158455624)
scores = (0.51003693202928102, 0.4583604446320943)
score = 0.4841986883306877
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 522)
train = (0.87452680936821037, 1.6809130241753887)
scores = (0.61797900741532286, 0.4841968276539404)
score = 0.5510879175346316
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 519)
train = (0.87327257631402611, 1.6902932515238724)
scores = (0.59562486650501212, 0.52103402034589197)
score = 0.558329443425452
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 288)
train = (0.94610784055698716, 1.6339779065609472)
scores = (0.58925633210521977, 0.51707068083116769)
score = 0.5531635064681937
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 95)
train = (0.95691270385881866, 1.6330748461446869)
scores = (0.52560564204977278, 0.46896114511399273)
score = 0.4972833935818828
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 483)
train = (0.93197446134009521, 1.7117692012153536)
scores = (0.63064311864346567, 0.49155689422698151)
score = 0.5611000064352236
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (9, 483)
train = (0.93197446134009521, 1.7117692012153536)
scores = (0.63064311864346567, 0.49155689422698151)
score = 0.5611000064352236
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 519)
train = (0.87327257631402633, 1.6902932515238716)
scores = (0.59562486650501245, 0.52103402034589197)
score = 0.5583294434254522
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (46, 517)
train = (0.77385826518841017, 1.7800428596790456)
scores = (0.50702791097096755, 0.4972524357401702)
score = 0.5021401733555688
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 522)
train = (0.87452680936821081, 1.6809130241753887)
scores = (0.61797900741532308, 0.48419682765394051)
score = 0.5510879175346318
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 519)
train = (0.87327257631402633, 1.6902932515238716)
scores = (0.59562486650501245, 0.52103402034589197)
score = 0.5583294434254522
>>> t = 4602 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2015.0, 2012.25, 2012.5, 2013.25, 2014.5, 2014.25, 2009.5, 2010.5, 2011.0, 2012.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.0, 2010.75, 2011.5, 2011.75, 2009.25, 2009.75, 2013.75, 2009.0, 2010.25, 2011.25, 2012.75, 2013.5, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (170, 118)
train = (1.2542038425442197, 0.83806269545555157)
scores = (0.64991078219339926, 0.40949697679217395)
score = 0.5297038794927866
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 199)
train = (0.90552069570767746, 0.94262833947203373)
scores = (0.57545251973610556, 0.42070344005225702)
score = 0.4980779798941813
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 586)
train = (1.2525466477188054, 1.144322943157037)
scores = (0.62029197840571226, 0.42342485770782068)
score = 0.5218584180567665
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (170, 118)
train = (1.2542038425442197, 0.83806269545555157)
scores = (0.64991078219339926, 0.40949697679217395)
score = 0.5297038794927866
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 562)
train = (1.3303852728005032, 1.1595459110731352)
scores = (0.64699587938506975, 0.46534517844391843)
score = 0.556170528914494
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 138)
train = (0.98435661883845882, 1.024191459372362)
scores = (0.57891189239030993, 0.42466986803781176)
score = 0.5017908802140608
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (226, 501)
train = (1.4366719696739487, 1.2435151618057421)
scores = (0.62394344032623994, 0.43834226025613132)
score = 0.5311428502911857
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (159, 562)
train = (1.3303852728005032, 1.1595459110731352)
scores = (0.64699587938506975, 0.46534517844391843)
score = 0.556170528914494
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 293)
train = (1.3931748316390076, 1.1163128214027689)
scores = (0.67375431374180372, 0.45166693921590417)
score = 0.562710626478854
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (85, 83)
train = (1.4089542971993174, 1.077068194869587)
scores = (0.61104205806968936, 0.43764171482877184)
score = 0.5243418864492306
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (153, 594)
train = (1.3780018853423202, 1.4261917849741532)
scores = (0.61002476140925244, 0.43755367184529353)
score = 0.523789216627273
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (128, 293)
train = (1.3931748316390076, 1.1163128214027689)
scores = (0.67375431374180372, 0.45166693921590417)
score = 0.562710626478854
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (151, 116)
train = (1.4945041434709965, 1.0860939008008466)
scores = (0.67389655257039682, 0.4339727210138476)
score = 0.5539346367921222
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (133, 136)
train = (1.6609669874983239, 1.2429232033241129)
scores = (0.60262222666121634, 0.45441690839523624)
score = 0.5285195675282263
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (194, 450)
train = (1.4896882379120726, 1.4479189105919092)
scores = (0.60387476633430448, 0.43934682970645128)
score = 0.5216107980203779
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (151, 116)
train = (1.4945041434709965, 1.0860939008008466)
scores = (0.67389655257039682, 0.4339727210138476)
score = 0.5539346367921222
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 293)
train = (1.393174831639008, 1.1163128214027689)
scores = (0.6737543137418035, 0.45166693921590417)
score = 0.5627106264788538
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 290)
train = (1.0921902887313526, 1.1917352172099978)
scores = (0.57962194781140453, 0.44350171934052834)
score = 0.5115618335759664
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (153, 594)
train = (1.3780018853423204, 1.4261917849741534)
scores = (0.61002476140925255, 0.43755367184529342)
score = 0.523789216627273
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (128, 293)
train = (1.393174831639008, 1.1163128214027689)
scores = (0.6737543137418035, 0.45166693921590417)
score = 0.5627106264788538
>>> t = 4603 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2010.5, 2011.75, 2011.5, 2011.25, 2012.25, 2010.75, 2011.0, 2012.75, 2013.5, 2014.25, 2015.0}), frozenset({2012.5, 2009.0, 2009.25, 2013.25, 2013.75, 2009.75, 2014.5, 2014.0, 2009.5, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (891, 120)
train = (2.2691599089829344, 0.83968129018937709)
scores = (0.48150989206913952, 0.55316968746257011)
score = 0.5173397897658548
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 76)
train = (0.95774974561379178, 0.78156677377071093)
scores = (0.35432823544841668, 0.56125934726804982)
score = 0.4577937913582333
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1048, 82)
train = (1.9564439368051441, 0.83272247296888235)
scores = (0.43533721864312275, 0.5413235634381629)
score = 0.4883303910406428
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (891, 120)
train = (2.2691599089829344, 0.83968129018937709)
scores = (0.48150989206913952, 0.55316968746257011)
score = 0.5173397897658548
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (631, 12)
train = (2.3179799797590608, 0.78612222502324636)
scores = (0.46529853277911026, 0.50789667340557965)
score = 0.48659760309234495
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (376, 184)
train = (2.5254703388510875, 1.0165331533375084)
scores = (0.48442270122670178, 0.55834094426558745)
score = 0.5213818227461446
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (826, 105)
train = (2.0225291478997565, 0.97232315507238254)
scores = (0.43339014422548217, 0.53828988657214061)
score = 0.4858400153988114
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (376, 184)
train = (2.5254703388510875, 1.0165331533375084)
scores = (0.48442270122670178, 0.55834094426558745)
score = 0.5213818227461446
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (415, 71)
train = (2.2567636427989308, 0.90971064746094599)
scores = (0.44855422902311182, 0.54193927446859091)
score = 0.49524675174585137
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (241, 65)
train = (2.6232155553952952, 0.94754809805473184)
scores = (0.50112450406303632, 0.56560591180932174)
score = 0.533365207936179
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (528, 62)
train = (1.8260799655386701, 0.99494132105864141)
scores = (0.42353687108895505, 0.53645879616823744)
score = 0.47999783362859627
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (241, 65)
train = (2.6232155553952952, 0.94754809805473184)
scores = (0.50112450406303632, 0.56560591180932174)
score = 0.533365207936179
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (443, 213)
train = (2.4278858565870562, 1.0433845688161962)
scores = (0.46152076378701101, 0.54684370845654307)
score = 0.504182236121777
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (211, 59)
train = (2.7332245955540846, 1.0132229263133348)
scores = (0.49014100442923131, 0.55828408296917043)
score = 0.5242125436992009
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (622, 58)
train = (2.0157492266423778, 1.0098266671942422)
scores = (0.42473466167383983, 0.53870230398942931)
score = 0.48171848283163454
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (211, 59)
train = (2.7332245955540846, 1.0132229263133348)
scores = (0.49014100442923131, 0.55828408296917043)
score = 0.5242125436992009
>>> t = 4604 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2009.25, 2009.5, 2013.0, 2013.5, 2013.75, 2009.75, 2010.5, 2012.25, 2013.25, 2014.5, 2015.0}), frozenset({2011.25, 2011.5, 2011.75, 2012.5, 2012.75, 2014.25, 2014.0, 2009.0, 2010.75, 2011.0, 2012.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (216, 230)
train = (1.1476196454717928, 1.043866805952288)
scores = (0.54729664945819323, 0.57320112961061132)
score = 0.5602488895344022
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (78, 201)
train = (0.9472382418039681, 0.93735399911001738)
scores = (0.49900572096945911, 0.55226248485111207)
score = 0.5256341029102856
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (568, 194)
train = (1.3187333982347809, 1.0928233603773574)
scores = (0.55555179702553259, 0.62567271546873782)
score = 0.5906122562471352
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (568, 194)
train = (1.3187333982347809, 1.0928233603773574)
scores = (0.55555179702553259, 0.62567271546873782)
score = 0.5906122562471352
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (220, 245)
train = (1.3117998025191404, 1.1392111348312368)
scores = (0.54500501983912197, 0.60028504324249499)
score = 0.5726450315408085
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (73, 125)
train = (1.1026224209850766, 1.0157362400159287)
scores = (0.51081982799636905, 0.549506109101769)
score = 0.530162968549069
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (431, 276)
train = (1.3941629420105139, 1.2671343477729771)
scores = (0.55945110477618976, 0.63703972679892418)
score = 0.598245415787557
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (431, 276)
train = (1.3941629420105139, 1.2671343477729771)
scores = (0.55945110477618976, 0.63703972679892418)
score = 0.598245415787557
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 331)
train = (1.4087229648114341, 1.264885817239024)
scores = (0.54625118739451128, 0.62780902239481429)
score = 0.5870301048946628
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 161)
train = (1.3013319281208253, 1.1827526109804969)
scores = (0.5065183299516488, 0.56834855629136205)
score = 0.5374334431215054
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (562, 405)
train = (1.6307870336443167, 1.4251449871624207)
scores = (0.57013734466265209, 0.65466754630664903)
score = 0.6124024454846506
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (562, 405)
train = (1.6307870336443167, 1.4251449871624207)
scores = (0.57013734466265209, 0.65466754630664903)
score = 0.6124024454846506
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (242, 213)
train = (1.5737132046378963, 1.2607417342603826)
scores = (0.55981702421831203, 0.61924006601718939)
score = 0.5895285451177508
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 143)
train = (1.4219406355270243, 1.2826216029763902)
scores = (0.51402870947188672, 0.57115248769550808)
score = 0.5425905985836974
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (455, 297)
train = (1.6098756449701752, 1.4375551936877879)
scores = (0.56174350976106202, 0.64218459003316608)
score = 0.601964049897114
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (455, 297)
train = (1.6098756449701752, 1.4375551936877879)
scores = (0.56174350976106202, 0.64218459003316608)
score = 0.601964049897114
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 331)
train = (1.4087229648114339, 1.264885817239024)
scores = (0.54625118739451151, 0.62780902239481406)
score = 0.5870301048946628
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 81)
train = (1.2394779435255232, 0.92540905078807512)
scores = (0.51046760109717437, 0.53615162469129451)
score = 0.5233096128942345
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (562, 405)
train = (1.6307870336443167, 1.4251449871624209)
scores = (0.57013734466265198, 0.65466754630664914)
score = 0.6124024454846506
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (562, 405)
train = (1.6307870336443167, 1.4251449871624209)
scores = (0.57013734466265198, 0.65466754630664914)
score = 0.6124024454846506
>>>  k = 20 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (235, 278)
train = (2.0001707188548576, 1.619576553964164)
scores = (0.54686197538303882, 0.6263145033280435)
score = 0.5865882393555412
>>>  k = 21 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (80, 122)
train = (2.2156398238882975, 1.7684346785654279)
scores = (0.54197652660086004, 0.59450373644560051)
score = 0.5682401315232303
>>>  k = 22 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (564, 401)
train = (1.7650776490315174, 1.5358279245662323)
scores = (0.56617718570325593, 0.64531050917340105)
score = 0.6057438474383285
>>>  k = 23 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': -1, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (564, 401)
train = (1.7650776490315174, 1.5358279245662323)
scores = (0.56617718570325593, 0.64531050917340105)
score = 0.6057438474383285
>>>  k = 24 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 331)
train = (1.4087229648114332, 1.2648858172390238)
scores = (0.54625118739451128, 0.62780902239481429)
score = 0.5870301048946628
>>>  k = 25 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 161)
train = (1.3013319281208255, 1.1827526109804967)
scores = (0.50651832995164847, 0.56834855629136205)
score = 0.5374334431215053
>>>  k = 26 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (562, 405)
train = (1.6307870336445893, 1.4251449871624207)
scores = (0.57013734466261201, 0.65466754630664903)
score = 0.6124024454846305
>>>  k = 27 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (562, 405)
train = (1.6307870336445893, 1.4251449871624207)
scores = (0.57013734466261201, 0.65466754630664903)
score = 0.6124024454846305
>>> t = 4605 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2010.75, 2012.25, 2013.25, 2013.5, 2013.75, 2014.0, 2009.0, 2010.25, 2011.0, 2012.75, 2013.0, 2014.75}), frozenset({2015.0, 2011.5, 2011.75, 2012.5, 2009.25, 2009.75, 2014.25, 2009.5, 2010.0, 2011.25, 2012.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (585, 238)
train = (1.2012356595612108, 1.196591506706546)
scores = (0.39289655894153236, 0.64851438126563166)
score = 0.520705470103582
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (275, 254)
train = (1.0195463193091761, 1.1102965866996486)
scores = (0.37405716366160224, 0.54552860151928839)
score = 0.4597928825904453
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 274)
train = (0.56500145399548285, 1.2239767455313009)
scores = (0.25833997236835249, 0.63911499714944819)
score = 0.44872748475890034
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (585, 238)
train = (1.2012356595612108, 1.196591506706546)
scores = (0.39289655894153236, 0.64851438126563166)
score = 0.520705470103582
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (458, 121)
train = (1.2440286203136592, 1.22489422694751)
scores = (0.39410831562216997, 0.63377316676912199)
score = 0.513940741195646
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 136)
train = (0.98318194266914505, 1.19479297430313)
scores = (0.3525373565856727, 0.55518906142188151)
score = 0.4538632090037771
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (457, 88)
train = (1.3297708660145375, 1.1515030125649857)
scores = (0.38055432490282337, 0.60533360948905746)
score = 0.4929439671959404
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (458, 121)
train = (1.2440286203136592, 1.22489422694751)
scores = (0.39410831562216997, 0.63377316676912199)
score = 0.513940741195646
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (469, 187)
train = (1.3594796623203134, 1.3425171509843981)
scores = (0.40458931585965385, 0.64828946816262933)
score = 0.5264393920111416
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (681, 128)
train = (1.7243606330882206, 1.2880965629058496)
scores = (0.39986964783498108, 0.57048796108453792)
score = 0.48517880445975947
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (500, 1)
train = (1.4647900159391447, 0.7747998064568804)
scores = (0.38736274764258238, 0.59634968368945307)
score = 0.4918562156660177
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (469, 187)
train = (1.3594796623203134, 1.3425171509843981)
scores = (0.40458931585965385, 0.64828946816262933)
score = 0.5264393920111416
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (544, 69)
train = (1.5045899849109075, 1.3098677075576499)
scores = (0.41236745160690724, 0.61579798406268538)
score = 0.5140827178347963
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 138)
train = (1.2729551217726633, 1.4266002607939745)
scores = (0.31849819003015084, 0.56118616350337136)
score = 0.4398421767667611
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (596, 1)
train = (1.6358180932133166, 0.79634329911442658)
scores = (0.40331387158443877, 0.59638622219711979)
score = 0.4998500468907793
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (544, 69)
train = (1.5045899849109075, 1.3098677075576499)
scores = (0.41236745160690724, 0.61579798406268538)
score = 0.5140827178347963
>>> t = 4700 ===================================================================================================
(pair) len(F.columns) = 77
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 121
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:] 
                | Since{Max&index[0]} 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Max & index[0]} 
                | Drawup[1, 5:] 
                | Since{Min & index[0,20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|daoc|vp1dd)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd|Volatility)
            & [3:,12:,15:,9:3,18:9,15:3,18:6,21:9,21:6] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[5,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2011.75, 2012.25, 2013.25, 2013.0, 2013.75, 2010.5, 2011.5, 2012.5, 2013.5, 2014.0, 2015.0}), frozenset({2011.25, 2012.75, 2009.0, 2009.25, 2009.75, 2014.5, 2014.25, 2009.5, 2010.75, 2011.0, 2012.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (151, 284)
train = (1.0841744356691021, 0.99047206778647823)
scores = (0.37970188124576676, 0.54797179959071107)
score = 0.4638368404182389
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (190, 5)
train = (1.7659274347987837, 0.80109932618077262)
scores = (0.40153759759837632, 0.43121717934417775)
score = 0.41637738847127703
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 280)
train = (0.9771834048205793, 1.013438546597522)
scores = (0.33433972920596289, 0.52093173338456666)
score = 0.4276357312952648
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (151, 284)
train = (1.0841744356691021, 0.99047206778647823)
scores = (0.37970188124576676, 0.54797179959071107)
score = 0.4638368404182389
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (404, 160)
train = (2.1128436255938579, 0.98529213290978068)
scores = (0.40318136383249181, 0.54827359106535578)
score = 0.4757274774489238
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (130, 21)
train = (1.9970608059329999, 0.97810846355975434)
scores = (0.40661231944466913, 0.50156960264403372)
score = 0.4540909610443514
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (961, 160)
train = (2.2549916016864637, 1.010048512544061)
scores = (0.42146386123119828, 0.51700946890585209)
score = 0.4692366650685252
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (404, 160)
train = (2.1128436255938579, 0.98529213290978068)
scores = (0.40318136383249181, 0.54827359106535578)
score = 0.4757274774489238
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (885, 238)
train = (2.8669562078310373, 1.0975061729850704)
scores = (0.49223246265860227, 0.54928724968239984)
score = 0.520759856170501
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (495, 2)
train = (2.9447832350220944, 1.1531983880581245)
scores = (0.46894178518746282, 0.48181569585566264)
score = 0.4753787405215627
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (344, 108)
train = (1.4778598353639609, 0.95429443245465417)
scores = (0.35601606331472618, 0.51128274219369751)
score = 0.4336494027542118
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (885, 238)
train = (2.8669562078310373, 1.0975061729850704)
scores = (0.49223246265860227, 0.54928724968239984)
score = 0.520759856170501
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (166, 73)
train = (1.7141525022390933, 1.0731803037517493)
scores = (0.40364355573969213, 0.5207676482459539)
score = 0.462205601992823
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (456, 2)
train = (3.0148676608927327, 1.2361152242459998)
scores = (0.49085305038674265, 0.49480011790776518)
score = 0.4928265841472539
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (998, 213)
train = (2.4655490768667212, 1.2172020617499193)
scores = (0.42028513381279659, 0.52216156488486121)
score = 0.4712233493488289
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (456, 2)
train = (3.0148676608927327, 1.2361152242459998)
scores = (0.49085305038674265, 0.49480011790776518)
score = 0.4928265841472539
>>> t = 4701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 121
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:] 
                | Since{Max&index[0]} 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Max & index[0]} 
                | Drawup[1, 5:] 
                | Since{Min & index[0,20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|daoc|vp1dd)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd|Volatility)
            & [3:,12:,15:,9:3,18:9,15:3,18:6,21:9,21:6] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[5,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2012.25, 2009.5, 2009.25, 2013.5, 2013.0, 2014.25, 2014.5, 2009.0, 2010.75, 2012.5, 2013.75, 2014.0}), frozenset({2010.0, 2015.0, 2011.25, 2011.5, 2011.75, 2012.75, 2009.75, 2010.5, 2011.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (75, 278)
train = (0.86232543288907992, 1.6693742778379688)
scores = (0.45351241353083072, 0.49585717148999792)
score = 0.4746847925104143
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 322)
train = (0.82088702461001584, 2.0560271305974731)
scores = (0.45017562333318567, 0.48753440899293493)
score = 0.4688550161630603
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 452)
train = (0.52670471208634606, 1.6007999736863332)
scores = (0.44754358307886166, 0.46622731690139907)
score = 0.45688544999013037
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (75, 278)
train = (0.86232543288907992, 1.6693742778379688)
scores = (0.45351241353083072, 0.49585717148999792)
score = 0.4746847925104143
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 84)
train = (0.93158960920419442, 1.1845770680718151)
scores = (0.47113132586256251, 0.46553257467380788)
score = 0.4683319502681852
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 266)
train = (0.95918143817406565, 2.0900039228501668)
scores = (0.46693689383627457, 0.46055609555843569)
score = 0.4637464946973551
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 27)
train = (0.52670471208634617, 0.60435353273030179)
scores = (0.4475435830788615, 0.40696056066309122)
score = 0.42725207187097636
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (50, 84)
train = (0.93158960920419442, 1.1845770680718151)
scores = (0.47113132586256251, 0.46553257467380788)
score = 0.4683319502681852
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 302)
train = (0.98369012003800405, 2.0613167788071998)
scores = (0.47845799112226967, 0.50169710515832555)
score = 0.4900775481402976
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 364)
train = (1.1017389032641223, 2.1918003792362675)
scores = (0.46777162624274726, 0.49477009032576064)
score = 0.481270858284254
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 27)
train = (0.80369555744075349, 0.60435353273030201)
scores = (0.45155369207594204, 0.40696056066309128)
score = 0.42925712636951663
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (51, 302)
train = (0.98369012003800405, 2.0613167788071998)
scores = (0.47845799112226967, 0.50169710515832555)
score = 0.4900775481402976
>>> t = 4702 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 121
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:] 
                | Since{Max&index[0]} 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Max & index[0]} 
                | Drawup[1, 5:] 
                | Since{Min & index[0,20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|daoc|vp1dd)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd|Volatility)
            & [3:,12:,15:,9:3,18:9,15:3,18:6,21:9,21:6] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[5,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2012.25, 2009.0, 2009.75, 2009.5, 2014.75, 2014.25, 2009.25, 2010.75, 2012.5, 2013.75, 2014.5, 2015.0}), frozenset({2010.0, 2011.25, 2011.5, 2011.75, 2012.75, 2013.25, 2013.5, 2010.5, 2011.0, 2012.0, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 1)
train = (0.80947334503009982, 0.68580755306779928)
scores = (0.44798186467021056, 0.45962850179256221)
score = 0.4538051832313864
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (161, 117)
train = (0.897762215924921, 1.5986702765719225)
scores = (0.46086460044934202, 0.54171723492580637)
score = 0.5012909176875742
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 584)
train = (0.56385550556367192, 1.8465688882027504)
scores = (0.42863363781450792, 0.52516885426013005)
score = 0.476901246037319
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (161, 117)
train = (0.897762215924921, 1.5986702765719225)
scores = (0.46086460044934202, 0.54171723492580637)
score = 0.5012909176875742
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 1)
train = (0.88602535006670169, 0.72823722715381345)
scores = (0.46628117629905841, 0.45840919847986722)
score = 0.46234518738946284
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (267, 106)
train = (1.1587994464265541, 1.7518403265959279)
scores = (0.49697466277698404, 0.56802888684711639)
score = 0.5325017748120502
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 26)
train = (0.85867679782092132, 0.61120893549651489)
scores = (0.44664544192515787, 0.41461735597425242)
score = 0.43063139894970515
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (267, 106)
train = (1.1587994464265541, 1.7518403265959279)
scores = (0.49697466277698404, 0.56802888684711639)
score = 0.5325017748120502
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 274)
train = (0.95676904897992243, 2.0219013708165843)
scores = (0.47009966549221216, 0.57625210218483203)
score = 0.5231758838385221
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 142)
train = (0.97160218936510445, 1.9427912173862136)
scores = (0.4873633446078291, 0.56482728705437357)
score = 0.5260953158311014
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (143, 445)
train = (0.9191601370813629, 1.9549835285084327)
scores = (0.44774325304154128, 0.52188809966040339)
score = 0.48481567635097234
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (8, 142)
train = (0.97160218936510445, 1.9427912173862136)
scores = (0.4873633446078291, 0.56482728705437357)
score = 0.5260953158311014
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 247)
train = (0.94675250570751646, 2.0398440996288461)
scores = (0.47321224917715138, 0.58547719358223083)
score = 0.5293447213796911
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 134)
train = (1.1292003570603799, 1.9915234075408883)
scores = (0.48329663253743593, 0.58515299374247476)
score = 0.5342248131399554
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (143, 612)
train = (0.96891775247973266, 2.1470983895879288)
scores = (0.44977451839216054, 0.53737349032618298)
score = 0.49357400435917176
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (11, 134)
train = (1.1292003570603799, 1.9915234075408883)
scores = (0.48329663253743593, 0.58515299374247476)
score = 0.5342248131399554
>>> t = 4703 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 121
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:] 
                | Since{Max&index[0]} 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Max & index[0]} 
                | Drawup[1, 5:] 
                | Since{Min & index[0,20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|daoc|vp1dd)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd|Volatility)
            & [3:,12:,15:,9:3,18:9,15:3,18:6,21:9,21:6] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[5,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.25, 2012.5, 2009.75, 2013.5, 2013.0, 2009.0, 2010.25, 2011.5, 2012.25, 2013.25, 2014.5, 2015.0}), frozenset({2010.75, 2011.75, 2012.75, 2009.25, 2014.25, 2014.0, 2009.5, 2010.5, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (567, 93)
train = (1.1427117069065096, 1.0205429322278232)
scores = (0.38749978259562257, 0.54654444595313245)
score = 0.4670221142743775
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (745, 55)
train = (1.3132176803872362, 0.90311649428680685)
scores = (0.39698203672589033, 0.46054452548473845)
score = 0.42876328110531436
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (511, 130)
train = (1.0690985003165852, 1.0137575304541433)
scores = (0.33574566247535925, 0.60680973852930942)
score = 0.4712777005023343
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (511, 130)
train = (1.0690985003165852, 1.0137575304541433)
scores = (0.33574566247535925, 0.60680973852930942)
score = 0.4712777005023343
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (406, 87)
train = (1.1954244522315673, 1.1592665620300067)
scores = (0.37196887488210573, 0.56115497922447044)
score = 0.4665619270532881
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (682, 48)
train = (1.5194431331452025, 1.0391686193377871)
scores = (0.42723308628184553, 0.44330255452039036)
score = 0.43526782040111794
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (357, 120)
train = (1.0862633151276688, 1.1010220737308867)
scores = (0.33399245458674137, 0.61688967823511276)
score = 0.4754410664109271
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (357, 120)
train = (1.0862633151276688, 1.1010220737308867)
scores = (0.33399245458674137, 0.61688967823511276)
score = 0.4754410664109271
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (490, 76)
train = (1.3378668321496998, 1.2153142382512392)
scores = (0.38258494098566131, 0.56221364441645194)
score = 0.47239929270105663
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 45)
train = (1.1183508610358295, 1.2173373017879987)
scores = (0.29434299430006466, 0.44679035153165764)
score = 0.37056667291586115
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (843, 107)
train = (1.5364913555099817, 1.1068038231736461)
scores = (0.36964939402221603, 0.61653332292292429)
score = 0.49309135847257013
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (843, 107)
train = (1.5364913555099817, 1.1068038231736461)
scores = (0.36964939402221603, 0.61653332292292429)
score = 0.49309135847257013
>>> t = 4800 ===================================================================================================
(pair) len(F.columns) = 23
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 48
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Max&index[0,10,20]} 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:] 
      }
    | 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.5, 2012.75, 2009.5, 2013.5, 2013.0, 2014.0, 2009.75, 2011.25, 2009.25, 2013.75, 2014.75, 2015.0}), frozenset({2010.0, 2010.5, 2010.75, 2012.25, 2012.5, 2014.25, 2009.0, 2010.25, 2011.75, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 1)
train = (0.55211722821206244, 0.50759041784721814)
scores = (0.32694125512691996, 0.34155843088856436)
score = 0.3342498430077422
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 186)
train = (0.61543593148550058, 0.84401487664868258)
scores = (0.36849873603232464, 0.36866010890623241)
score = 0.36857942246927855
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 434)
train = (0.40410743554783607, 0.8616294997399242)
scores = (0.30739110746637288, 0.40116210411832776)
score = 0.3542766057923503
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (4, 186)
train = (0.61543593148550058, 0.84401487664868258)
scores = (0.36849873603232464, 0.36866010890623241)
score = 0.36857942246927855
>>> t = 4801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 48
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Max&index[0,10,20]} 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:] 
      }
    | 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.25, 2011.0, 2013.5, 2013.0, 2014.75, 2014.0, 2009.5, 2010.75, 2011.75, 2012.75, 2013.75, 2014.5, 2015.0}), frozenset({2010.0, 2010.5, 2012.25, 2012.5, 2009.25, 2009.75, 2009.0, 2010.25, 2011.5, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 53)
train = (0.55056441023303448, 0.65810326949581699)
scores = (0.27151569416456645, 0.40147138123181708)
score = 0.3364935376981918
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 2)
train = (0.57362602989101286, 0.6575093078196439)
scores = (0.29393668091359143, 0.39860591500633413)
score = 0.3462712979599628
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 19)
train = (0.43203688267062412, 0.43663543326159282)
scores = (0.2711502745865686, 0.38508671515888704)
score = 0.3281184948727278
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 2)
train = (0.57362602989101286, 0.6575093078196439)
scores = (0.29393668091359143, 0.39860591500633413)
score = 0.3462712979599628
>>> t = 4900 ===================================================================================================
(pair) len(F.columns) = 26
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.75, 2010.5, 2011.5, 2012.75, 2012.0, 2012.5, 2013.0, 2009.75, 2010.25, 2011.75, 2012.25, 2013.5, 2014.0}), frozenset({2015.0, 2011.25, 2009.25, 2013.75, 2014.5, 2014.25, 2009.5, 2010.0, 2011.0, 2009.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (73, 11)
train = (0.97023750181785284, 0.84760054773402094)
scores = (0.57951311416194973, 0.36045386928343465)
score = 0.46998349172269216
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 6)
train = (1.3815612611545978, 0.88881344147901775)
scores = (0.59389245910287825, 0.33922064279983272)
score = 0.4665565509513555
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (217, 548)
train = (1.0870603205723257, 1.0773294723072311)
scores = (0.54388117110026424, 0.43218518492961122)
score = 0.48803317801493773
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (217, 548)
train = (1.0870603205723257, 1.0773294723072311)
scores = (0.54388117110026424, 0.43218518492961122)
score = 0.48803317801493773
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (54, 10)
train = (0.99094975841228139, 0.86832156637225044)
scores = (0.58970060506539834, 0.37777553993260149)
score = 0.4837380724989999
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 3)
train = (1.5351954907195524, 1.0319197671491345)
scores = (0.57555458771645984, 0.36851314903402715)
score = 0.4720338683752435
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 403)
train = (0.82073282682139803, 1.1048344121104368)
scores = (0.5282051092140494, 0.43929266541021295)
score = 0.48374888731213117
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (89, 403)
train = (0.82073282682139803, 1.1048344121104368)
scores = (0.5282051092140494, 0.43929266541021295)
score = 0.48374888731213117
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (57, 20)
train = (1.1168391045493604, 0.89080466222046606)
scores = (0.58911929540587715, 0.38936333981442728)
score = 0.4892413176101522
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 3)
train = (1.6056838665299302, 1.1095745781979804)
scores = (0.57800698691416763, 0.36441536619080961)
score = 0.4712111765524886
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 419)
train = (0.84959903071320853, 1.2011420201212064)
scores = (0.5327979016021922, 0.4487610889530344)
score = 0.49077949527761333
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (90, 419)
train = (0.84959903071320853, 1.2011420201212064)
scores = (0.5327979016021922, 0.4487610889530344)
score = 0.49077949527761333
>>> t = 4901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.5, 2011.5, 2009.25, 2014.25, 2014.0, 2009.5, 2015.25, 2011.75, 2012.5, 2013.25, 2014.5, 2015.0}), frozenset({2010.0, 2011.25, 2012.25, 2012.75, 2009.75, 2013.5, 2013.75, 2009.0, 2010.75, 2011.0, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 48)
train = (0.79395185887449649, 0.83497264883642441)
scores = (0.4805227547120835, 0.5627126954733328)
score = 0.5216177250927081
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 11)
train = (0.85429685964469315, 0.96118989543986799)
scores = (0.47301570592652942, 0.5244872981431542)
score = 0.4987515020348418
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (180, 428)
train = (0.84689266190803969, 1.1840699480251466)
scores = (0.46800800766516015, 0.56932509996307679)
score = 0.5186665538141184
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (65, 48)
train = (0.79395185887449649, 0.83497264883642441)
scores = (0.4805227547120835, 0.5627126954733328)
score = 0.5216177250927081
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 23)
train = (0.81507006660596582, 0.92585782016282925)
scores = (0.48821598101330976, 0.54910384383824096)
score = 0.5186599124257754
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 11)
train = (0.73654806004237705, 1.1224975675364166)
scores = (0.48938511368316778, 0.54059076443649978)
score = 0.5149879390598338
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 252)
train = (0.70013010399709386, 1.1627057463421018)
scores = (0.45135565716429243, 0.56737146716839004)
score = 0.5093635621663413
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (43, 23)
train = (0.81507006660596582, 0.92585782016282925)
scores = (0.48821598101330976, 0.54910384383824096)
score = 0.5186599124257754
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (116, 44)
train = (0.99534317160523333, 0.99487438171563325)
scores = (0.49523121101752104, 0.57003552629140652)
score = 0.5326333686544638
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 17)
train = (0.93679154906882267, 1.205420530910404)
scores = (0.50155432966116287, 0.53187193117212073)
score = 0.5167131304166418
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 328)
train = (0.70646279517815946, 1.3233583913578204)
scores = (0.44638439642080957, 0.57926018530298706)
score = 0.5128222908618983
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (116, 44)
train = (0.99534317160523333, 0.99487438171563325)
scores = (0.49523121101752104, 0.57003552629140652)
score = 0.5326333686544638
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (211, 78)
train = (1.242749151730099, 1.1258133982350951)
scores = (0.51388257155295525, 0.58318317454161961)
score = 0.5485328730472874
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 15)
train = (1.1550069072631437, 1.2630610304998071)
scores = (0.47295847633673288, 0.5125697027247561)
score = 0.49276408953074446
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 387)
train = (0.70901821674181498, 1.4174045033553726)
scores = (0.44977139307515668, 0.58892591420997498)
score = 0.5193486536425658
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (211, 78)
train = (1.242749151730099, 1.1258133982350951)
scores = (0.51388257155295525, 0.58318317454161961)
score = 0.5485328730472874
>>> t = 4902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2015.0, 2011.5, 2011.0, 2013.25, 2014.25, 2014.75, 2009.75, 2010.0, 2011.25, 2012.0, 2013.75, 2014.0, 2015.25}), frozenset({2010.5, 2010.75, 2012.5, 2012.75, 2009.0, 2009.25, 2013.5, 2009.5, 2010.25, 2011.75, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (324, 13)
train = (1.4702761045491681, 0.69649576233232746)
scores = (0.45710229846599043, 0.41731152128173626)
score = 0.43720690987386335
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (196, 2)
train = (1.5595273374894483, 0.61827855572836943)
scores = (0.48213422309434584, 0.44093207283092434)
score = 0.4615331479626351
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (346, 1)
train = (1.251152395549225, 0.55087580786119306)
scores = (0.39836907727625281, 0.41457916995796712)
score = 0.40647412361711
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (196, 2)
train = (1.5595273374894483, 0.61827855572836943)
scores = (0.48213422309434584, 0.44093207283092434)
score = 0.4615331479626351
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (174, 4)
train = (1.4120249567998471, 0.74926582290507671)
scores = (0.46507851451983018, 0.45451935709071967)
score = 0.4597989358052749
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 3)
train = (1.6309372080490407, 0.71133043176347066)
scores = (0.47741464329977323, 0.45705209997612101)
score = 0.4672333716379471
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (498, 49)
train = (1.5083166095435063, 0.76406387176123813)
scores = (0.41431428448763769, 0.42774831213877018)
score = 0.42103129831320396
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (99, 3)
train = (1.6309372080490407, 0.71133043176347066)
scores = (0.47741464329977323, 0.45705209997612101)
score = 0.4672333716379471
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (168, 20)
train = (1.4919197579287991, 0.8335622060794684)
scores = (0.46256183759793001, 0.44066350476607641)
score = 0.4516126711820032
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 4)
train = (1.7500688982687982, 0.79941037941553517)
scores = (0.48571639107142023, 0.48035348058233007)
score = 0.4830349358268752
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (470, 70)
train = (1.5602358143500612, 0.81644551551437961)
scores = (0.41553545570632439, 0.4320174235638411)
score = 0.4237764396350827
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 4)
train = (1.7500688982687982, 0.79941037941553517)
scores = (0.48571639107142023, 0.48035348058233007)
score = 0.4830349358268752
>>> t = 4903 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.75, 2012.0, 2009.0, 2014.75, 2009.25, 2010.0, 2011.25, 2012.75, 2013.0, 2014.5, 2015.0}), frozenset({2010.75, 2012.5, 2009.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.5, 2011.0, 2012.25, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 185)
train = (0.69719515409069499, 1.1202138718262835)
scores = (0.50846931780779403, 0.52500383981176624)
score = 0.5167365788097802
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (132, 118)
train = (0.88335341015028279, 1.4122157162833926)
scores = (0.54816757206227573, 0.5204041490945539)
score = 0.5342858605784149
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 804)
train = (0.74584188784980099, 1.5349266181092296)
scores = (0.50069773991546596, 0.53590453916027503)
score = 0.5183011395378705
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (132, 118)
train = (0.88335341015028279, 1.4122157162833926)
scores = (0.54816757206227573, 0.5204041490945539)
score = 0.5342858605784149
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 182)
train = (0.82124912294618713, 1.3159794237215188)
scores = (0.51483475150850255, 0.53404504828750987)
score = 0.5244398998980062
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 214)
train = (0.96588556401980452, 2.0470345167463329)
scores = (0.55042930466936701, 0.55846852739955621)
score = 0.5544489160344617
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 403)
train = (0.7450553591123189, 1.318410559946438)
scores = (0.50429041785884898, 0.51004564236830474)
score = 0.5071680301135768
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (91, 214)
train = (0.96588556401980452, 2.0470345167463329)
scores = (0.55042930466936701, 0.55846852739955621)
score = 0.5544489160344617
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 218)
train = (0.8673096849926395, 1.5680454415526255)
scores = (0.50335578102903866, 0.54771261193073661)
score = 0.5255341964798876
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (120, 278)
train = (1.0610261172693187, 2.3757418215623365)
scores = (0.5427901511139418, 0.56633215340981757)
score = 0.5545611522618796
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 407)
train = (0.74319268905891989, 1.4191126167193868)
scores = (0.5098097211677779, 0.51129458536794559)
score = 0.5105521532678617
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (120, 278)
train = (1.0610261172693187, 2.3757418215623365)
scores = (0.5427901511139418, 0.56633215340981757)
score = 0.5545611522618796
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 96)
train = (0.89868469955663, 1.2338930559687817)
scores = (0.51737727466488159, 0.54432925752013384)
score = 0.5308532660925077
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (96, 190)
train = (1.1140995547890922, 2.3446947380193124)
scores = (0.5263585856209323, 0.56117187694343384)
score = 0.543765231282183
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 443)
train = (0.76193030130484463, 1.5451261601085264)
scores = (0.50515640750393509, 0.51695132105069797)
score = 0.5110538642773166
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (96, 190)
train = (1.1140995547890922, 2.3446947380193124)
scores = (0.5263585856209323, 0.56117187694343384)
score = 0.543765231282183
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 218)
train = (0.86730968499263927, 1.5680454415526257)
scores = (0.50335578102903833, 0.54771261193073717)
score = 0.5255341964798877
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (100, 221)
train = (0.94959621349039491, 2.0443808218297899)
scores = (0.5387195345593222, 0.55331286307454397)
score = 0.5460161988169331
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 407)
train = (0.74319268905891989, 1.4191126167193868)
scores = (0.5098097211677779, 0.51129458536794548)
score = 0.5105521532678616
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (100, 221)
train = (0.94959621349039491, 2.0443808218297899)
scores = (0.5387195345593222, 0.55331286307454397)
score = 0.5460161988169331
>>> t = 5000 ===================================================================================================
(pair) len(F.columns) = 25
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 54
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [9:,12:9,18:15,12:6,12:3,18:9,15:3,18:6,21:9,21:6,21:3] 
          }
      )
    | 
        <>FaceValue{Volume| Close} 
        | Return{mix[2,3,7,8,9,11,12,14,16,17,19]}
        | Return{ af| it} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2012.0, 2012.75, 2012.25, 2009.25, 2009.75, 2013.0, 2013.5, 2009.5, 2010.75, 2012.5, 2013.75, 2014.0, 2015.25}), frozenset({2010.25, 2010.5, 2011.25, 2011.5, 2011.75, 2014.5, 2014.25, 2009.0, 2010.0, 2011.0, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (118, 15)
train = (0.91384941661934449, 0.76017587818702381)
scores = (0.39444440841364925, 0.31782746775123033)
score = 0.3561359380824398
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (30, 2)
train = (0.85361824001450415, 0.68319659617706385)
scores = (0.33356779167987233, 0.32056728715037736)
score = 0.32706753941512484
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (248, 15)
train = (0.96912946042426917, 0.65257089988952965)
scores = (0.46796287940038023, 0.31740733971206259)
score = 0.3926851095562214
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (248, 15)
train = (0.96912946042426917, 0.65257089988952965)
scores = (0.46796287940038023, 0.31740733971206259)
score = 0.3926851095562214
>>> t = 5001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 54
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [9:,12:9,18:15,12:6,12:3,18:9,15:3,18:6,21:9,21:6,21:3] 
          }
      )
    | 
        <>FaceValue{Volume| Close} 
        | Return{mix[2,3,7,8,9,11,12,14,16,17,19]}
        | Return{ af| it} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2012.5, 2013.75, 2014.75, 2014.0, 2009.0, 2010.0, 2011.5, 2012.0, 2013.0, 2014.5, 2015.25}), frozenset({2010.75, 2011.25, 2011.75, 2012.75, 2009.25, 2009.75, 2013.5, 2009.5, 2010.25, 2011.0, 2012.25, 2013.25, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 7)
train = (0.72156099924964001, 0.70487594169347434)
scores = (0.46900927950364274, 0.35246901240449102)
score = 0.4107391459540669
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 5)
train = (0.60374318771200508, 0.7351124081090683)
scores = (0.4570102983335475, 0.28680076984397845)
score = 0.371905534088763
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 22)
train = (0.64631132828461757, 0.71495872020794682)
scores = (0.47837045175041137, 0.36711573006574838)
score = 0.4227430909080799
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (42, 22)
train = (0.64631132828461757, 0.71495872020794682)
scores = (0.47837045175041137, 0.36711573006574838)
score = 0.4227430909080799
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 8)
train = (0.84615437392717652, 0.7805082126946683)
scores = (0.47873042669692184, 0.36270481152765938)
score = 0.4207176191122906
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 57)
train = (0.73471613467669461, 1.1395017580977853)
scores = (0.42329076774906693, 0.30719795204834827)
score = 0.3652443598987076
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 25)
train = (0.68765260074699153, 0.73870390628632143)
scores = (0.48397685355293235, 0.36943028037201264)
score = 0.42670356696247247
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (38, 25)
train = (0.68765260074699153, 0.73870390628632143)
scores = (0.48397685355293235, 0.36943028037201264)
score = 0.42670356696247247
>>> t = 5100 ===================================================================================================
(pair) len(F.columns) = 29
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 66
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [10:,15:,15:10,20:15,20:10,20:5] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2015.0, 2011.75, 2013.25, 2013.5, 2014.0, 2009.25, 2010.0, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}), frozenset({2010.75, 2011.5, 2012.5, 2012.75, 2009.0, 2009.75, 2014.25, 2009.5, 2010.5, 2011.25, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (526, 57)
train = (1.1099487897927922, 0.67480848707002394)
scores = (0.46857238985739591, 0.44059434173540757)
score = 0.45458336579640174
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (198, 53)
train = (1.0790093994509886, 0.7049610792878831)
scores = (0.45290612250498413, 0.44061102824547826)
score = 0.4467585753752312
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (952, 54)
train = (1.0631277207390302, 0.55823978994566359)
scores = (0.49404522635656306, 0.41843694355657785)
score = 0.45624108495657045
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (952, 54)
train = (1.0631277207390302, 0.55823978994566359)
scores = (0.49404522635656306, 0.41843694355657785)
score = 0.45624108495657045
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (404, 48)
train = (1.1688175909291925, 0.69490158653117873)
scores = (0.47914078096803325, 0.44673246145941181)
score = 0.46293662121372253
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 21)
train = (1.2206697972757001, 0.82767211488055126)
scores = (0.44347630535234966, 0.43532137439589452)
score = 0.4393988398741221
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (796, 54)
train = (1.1153770926497415, 0.57038973524776704)
scores = (0.50372306784184917, 0.42542531413182161)
score = 0.4645741909868354
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (796, 54)
train = (1.1153770926497415, 0.57038973524776704)
scores = (0.50372306784184917, 0.42542531413182161)
score = 0.4645741909868354
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (504, 33)
train = (1.317732971064435, 0.70086893625636948)
scores = (0.4954756642902991, 0.44967856241181947)
score = 0.4725771133510593
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 25)
train = (1.3188023635694872, 0.96406586910971026)
scores = (0.45333957642574846, 0.45275976153958858)
score = 0.4530496689826685
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (693, 44)
train = (1.1317293918424534, 0.57699061526024997)
scores = (0.50430437767448821, 0.42812474100843462)
score = 0.4662145593414614
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (504, 33)
train = (1.317732971064435, 0.70086893625636948)
scores = (0.4954756642902991, 0.44967856241181947)
score = 0.4725771133510593
>>> t = 5101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 66
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [10:,15:,15:10,20:15,20:10,20:5] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2015.25, 2011.25, 2012.75, 2012.5, 2009.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.0, 2013.0, 2014.5, 2015.0}), frozenset({2010.25, 2010.75, 2011.75, 2009.25, 2013.5, 2013.75, 2014.0, 2009.0, 2010.5, 2011.0, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (84, 439)
train = (0.77753105656004018, 0.89422713144619315)
scores = (0.52888657632158942, 0.36745773489814482)
score = 0.4481721556098671
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 58)
train = (0.83153700908945805, 0.82358958083766776)
scores = (0.50052833661274299, 0.34063144272246132)
score = 0.4205798896676022
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 82)
train = (0.60981973593649419, 0.61157134066716268)
scores = (0.50188633202772037, 0.32119119210647662)
score = 0.4115387620670985
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (84, 439)
train = (0.77753105656004018, 0.89422713144619315)
scores = (0.52888657632158942, 0.36745773489814482)
score = 0.4481721556098671
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 584)
train = (0.79851371212832911, 1.0143704296200515)
scores = (0.54055409135109556, 0.37463108259892042)
score = 0.457592586975008
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 56)
train = (1.0294997644884272, 0.98245125638522401)
scores = (0.52012481505346886, 0.34602419116782807)
score = 0.43307450311064843
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 647)
train = (0.63964076198583852, 0.92930403252934457)
scores = (0.52984177648319031, 0.37508617265680994)
score = 0.4524639745700001
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (59, 584)
train = (0.79851371212832911, 1.0143704296200515)
scores = (0.54055409135109556, 0.37463108259892042)
score = 0.457592586975008
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 280)
train = (0.83365507980674036, 0.96938690327793409)
scores = (0.53604093491784566, 0.37649986251770151)
score = 0.4562703987177736
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 44)
train = (1.2621581211792063, 1.1285080920494368)
scores = (0.52313473440527936, 0.35098928127883888)
score = 0.4370620078420591
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (66, 685)
train = (0.64396034462678287, 1.0078073660435889)
scores = (0.52961769968130112, 0.38350270979170359)
score = 0.4565602047365024
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (66, 685)
train = (0.64396034462678287, 1.0078073660435889)
scores = (0.52961769968130112, 0.38350270979170359)
score = 0.4565602047365024
>>> t = 5102 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 66
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [10:,15:,15:10,20:15,20:10,20:5] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.75, 2011.25, 2012.25, 2012.75, 2014.25, 2009.25, 2010.5, 2011.75, 2012.5, 2013.0, 2014.5, 2015.0}), frozenset({2011.5, 2009.0, 2009.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.25, 2011.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (410, 93)
train = (0.9686854917898724, 0.79221094799525782)
scores = (0.49675642046338386, 0.37114134813583882)
score = 0.4339488842996113
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (148, 66)
train = (0.88642797553439434, 0.88136641623372713)
scores = (0.45286704298888597, 0.36836691230264795)
score = 0.410616977645767
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 839)
train = (0.47081854934726497, 0.95045284729677193)
scores = (0.44762529038088372, 0.41196794268499143)
score = 0.42979661653293755
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (410, 93)
train = (0.9686854917898724, 0.79221094799525782)
scores = (0.49675642046338386, 0.37114134813583882)
score = 0.4339488842996113
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (102, 739)
train = (0.80788852868730876, 1.0830129046578074)
scores = (0.49129019819709951, 0.4145795574507008)
score = 0.4529348778239002
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (367, 37)
train = (1.2035342734341805, 1.0414124937326128)
scores = (0.48642234521014061, 0.37123984183334702)
score = 0.4288310935217438
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (397, 765)
train = (0.85201723486993919, 1.0096829334738018)
scores = (0.51927669856645076, 0.41610837771772874)
score = 0.4676925381420898
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (397, 765)
train = (0.85201723486993919, 1.0096829334738018)
scores = (0.51927669856645076, 0.41610837771772874)
score = 0.4676925381420898
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 367)
train = (0.67091938709326082, 1.0504473087464057)
scores = (0.49311836466780173, 0.407537178498251)
score = 0.4503277715830264
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 41)
train = (1.0986866797173498, 1.1857093283335021)
scores = (0.46538145354197441, 0.38303650560353492)
score = 0.42420897957275466
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (345, 622)
train = (0.85074400074121093, 1.0170699199491771)
scores = (0.52508261902744813, 0.41712138689310252)
score = 0.4711020029602753
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (345, 622)
train = (0.85074400074121093, 1.0170699199491771)
scores = (0.52508261902744813, 0.41712138689310252)
score = 0.4711020029602753
>>> t = 5200 ===================================================================================================
(pair) len(F.columns) = 37
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 81
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|daoc|vp1dd)
            & index[1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,15:,15:5] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[20]} 
                | Drawup[1:] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2010.25, 2011.5, 2012.5, 2012.75, 2009.25, 2013.75, 2009.0, 2010.0, 2011.0, 2012.25, 2013.5, 2015.25}), frozenset({2011.75, 2009.75, 2013.25, 2014.5, 2014.25, 2014.0, 2009.5, 2010.75, 2011.25, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 321)
train = (0.6132264097779957, 1.6020069583397551)
scores = (0.20973595014036744, 0.57663710849489569)
score = 0.39318652931763154
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (330, 244)
train = (1.0452508247862355, 1.6464448446526669)
scores = (0.29799107861152258, 0.47968504357665331)
score = 0.3888380610940879
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (353, 160)
train = (0.96389538894759674, 1.3202539485524838)
scores = (0.24666570427808315, 0.51035316911620909)
score = 0.3785094366971461
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (17, 321)
train = (0.6132264097779957, 1.6020069583397551)
scores = (0.20973595014036744, 0.57663710849489569)
score = 0.39318652931763154
>>> t = 5201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 81
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|daoc|vp1dd)
            & index[1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,15:,15:5] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[20]} 
                | Drawup[1:] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2011.25, 2012.0, 2012.5, 2012.75, 2009.5, 2009.75, 2009.25, 2010.0, 2011.75, 2009.0, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2013.25, 2013.5, 2013.75, 2014.5, 2014.0, 2010.25, 2011.0, 2012.25, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 450)
train = (0.68082691632072989, 1.971917329853188)
scores = (0.35535886119458115, 0.27678019558509337)
score = 0.31606952838983726
>>> t = 5300 ===================================================================================================
(pair) len(F.columns) = 8
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 16
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.25, 2011.5, 2009.75, 2013.5, 2013.75, 2014.75, 2014.0, 2009.5, 2011.75, 2012.0, 2013.0, 2014.5, 2015.25}), frozenset({2010.0, 2010.5, 2010.75, 2012.5, 2012.75, 2009.25, 2009.0, 2010.25, 2011.0, 2012.25, 2013.25, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.36128413486250083, 0.50507121693831258)
scores = (0.20946944905579623, 0.1825854914698338)
score = 0.19602747026281503
>>> t = 5301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 16
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.5, 2011.25, 2012.5, 2014.25, 2014.0, 2014.5, 2009.75, 2010.0, 2011.5, 2012.0, 2014.75, 2015.0}), frozenset({2011.75, 2012.75, 2009.0, 2009.25, 2013.25, 2013.5, 2013.75, 2009.5, 2010.75, 2011.0, 2012.25, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 2)
train = (0.78902789804165618, 0.4656158230997815)
scores = (0.15980758766142922, 0.11775059069750102)
score = 0.13877908917946513
>>> t = 5400 ===================================================================================================
(pair) len(F.columns) = 133
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 153
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [10:,15:,10:5,15:10,15:5,20:10] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,5:,10:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[10:,20:] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 125:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2011.25, 2011.75, 2011.0, 2012.5, 2013.75, 2013.25, 2014.0, 2009.25, 2010.25, 2011.5, 2009.0, 2013.5, 2014.75}), frozenset({2010.5, 2010.75, 2015.0, 2012.25, 2012.75, 2009.75, 2014.25, 2009.5, 2010.0, 2012.0, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 9)
train = (0.84460284551487297, 0.96536068553650989)
scores = (0.19977786672464554, 0.4639020884752032)
score = 0.33183997759992434
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 3)
train = (0.81492579362773154, 0.864358453255342)
scores = (0.1830569387097222, 0.4146163155935994)
score = 0.2988366271516608
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 6)
train = (0.70153365397539413, 0.68905880269077813)
scores = (0.211296601521231, 0.4350051562650798)
score = 0.3231508788931554
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 9)
train = (0.84460284551487297, 0.96536068553650989)
scores = (0.19977786672464554, 0.4639020884752032)
score = 0.33183997759992434
>>> t = 5401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 153
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [10:,15:,10:5,15:10,15:5,20:10] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,5:,10:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[10:,20:] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 125:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.5, 2012.0, 2012.5, 2012.75, 2013.0, 2013.25, 2014.0, 2009.0, 2010.25, 2012.25, 2013.5, 2014.25, 2015.0}), frozenset({2010.75, 2011.25, 2011.5, 2011.75, 2009.75, 2014.5, 2009.5, 2010.0, 2011.0, 2009.25, 2013.75, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.90063417115972866, 0.81383072150812097)
scores = (0.38229806900241997, 0.3237688754849794)
score = 0.3530334722436997
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (1.1132501069368295, 0.95749283982780609)
scores = (0.39407673973034602, 0.25090503076768428)
score = 0.32249088524901515
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.61005292681809609, 0.55328663878829698)
scores = (0.30949694403650579, 0.38018491622054895)
score = 0.34484093012852735
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 1)
train = (0.90063417115972866, 0.81383072150812097)
scores = (0.38229806900241997, 0.3237688754849794)
score = 0.3530334722436997
>>> t = 5500 ===================================================================================================
(pair) len(F.columns) = 16
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | 
        | Return{ it} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2015.0, 2011.0, 2013.0, 2013.5, 2014.25, 2009.0, 2010.5, 2011.75, 2009.25, 2013.25, 2014.0, 2015.25}), frozenset({2010.75, 2011.5, 2012.25, 2012.5, 2012.75, 2009.75, 2014.5, 2009.5, 2010.25, 2011.25, 2012.0, 2013.75, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (182, 80)
train = (0.84398830687190218, 0.80112670322440005)
scores = (0.31762699469136452, 0.37450481141119835)
score = 0.34606590305128143
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (82, 1)
train = (0.85247467197946514, 0.69912104104797279)
scores = (0.27129146226248907, 0.33995251642380409)
score = 0.30562198934314655
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 108)
train = (0.56438118866057918, 0.63905404766552698)
scores = (0.30071586778007009, 0.36467530784891045)
score = 0.33269558781449027
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (182, 80)
train = (0.84398830687190218, 0.80112670322440005)
scores = (0.31762699469136452, 0.37450481141119835)
score = 0.34606590305128143
>>> t = 5501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | 
        | Return{ it} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2010.75, 2011.0, 2012.0, 2009.75, 2009.5, 2013.5, 2009.25, 2010.5, 2011.75, 2012.5, 2013.25, 2014.5}), frozenset({2015.0, 2011.5, 2012.75, 2013.75, 2014.25, 2014.0, 2009.0, 2010.0, 2011.25, 2012.25, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 446)
train = (1.0115265283121742, 0.96573003919353329)
scores = (0.43978614261567794, 0.28392175010727361)
score = 0.3618539463614758
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (109, 19)
train = (1.0305421361055893, 0.82625376887054114)
scores = (0.42545349404480465, 0.19890042256063137)
score = 0.312176958302718
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (197, 451)
train = (0.88307922610875467, 0.84882645500181841)
scores = (0.44316902203303865, 0.28033855145979514)
score = 0.3617537867464169
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (126, 446)
train = (1.0115265283121742, 0.96573003919353329)
scores = (0.43978614261567794, 0.28392175010727361)
score = 0.3618539463614758
>>> t = 5600 ===================================================================================================
(pair) len(F.columns) = 65
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.25, 2012.25, 2012.75, 2012.5, 2013.25, 2013.5, 2013.75, 2014.0, 2014.5, 2011.5, 2012.0, 2013.0, 2014.25}), frozenset({2010.25, 2010.5, 2010.75, 2015.0, 2011.75, 2009.25, 2009.75, 2009.5, 2010.0, 2011.0, 2009.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 1)
train = (1.504574347329614, 0.60349801681004323)
scores = (0.52399984312982495, 0.40424092299165365)
score = 0.4641203830607393
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (187, 155)
train = (1.5871117868443263, 0.93042907291001264)
scores = (0.46374582701320027, 0.42419961637607256)
score = 0.4439727216946364
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (231, 51)
train = (1.0758915414406436, 0.72095563593322565)
scores = (0.46110916572761224, 0.40877962076605945)
score = 0.43494439324683587
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (271, 1)
train = (1.504574347329614, 0.60349801681004323)
scores = (0.52399984312982495, 0.40424092299165365)
score = 0.4641203830607393
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (277, 1)
train = (1.6472729343492061, 0.67738837493382953)
scores = (0.52173167836748979, 0.41118192432234096)
score = 0.4664568013449154
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 40)
train = (1.0288357569095246, 0.87839274494455799)
scores = (0.35175745760351296, 0.42912464026243702)
score = 0.390441048932975
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (206, 43)
train = (1.1320555529601852, 0.75696610022384481)
scores = (0.46411554479722977, 0.41619026493531602)
score = 0.4401529048662729
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (277, 1)
train = (1.6472729343492061, 0.67738837493382953)
scores = (0.52173167836748979, 0.41118192432234096)
score = 0.4664568013449154
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (190, 99)
train = (1.6221329675067226, 0.9585352378355797)
scores = (0.52323337349773014, 0.43572755345628167)
score = 0.4794804634770059
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 5)
train = (1.17935702524515, 0.98266182821490666)
scores = (0.35623815607933629, 0.43737268893166176)
score = 0.396805422505499
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (339, 48)
train = (1.4869264250804097, 0.79472474042163677)
scores = (0.47024529984395647, 0.42759478748352076)
score = 0.4489200436637386
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (190, 99)
train = (1.6221329675067226, 0.9585352378355797)
scores = (0.52323337349773014, 0.43572755345628167)
score = 0.4794804634770059
>>> t = 5601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2012.75, 2012.0, 2009.75, 2013.25, 2013.0, 2014.75, 2009.0, 2010.75, 2011.0, 2012.5, 2013.5, 2014.5}), frozenset({2010.25, 2010.5, 2015.0, 2011.75, 2009.25, 2014.0, 2009.5, 2010.0, 2011.25, 2012.25, 2013.75, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (311, 119)
train = (1.1542000313537679, 1.0123124774343162)
scores = (0.57396614083035147, 0.45907821096622792)
score = 0.5165221758982896
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (265, 53)
train = (1.0708539907606212, 0.90624269595700502)
scores = (0.53434836312839062, 0.43778313634839239)
score = 0.4860657497383915
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (341, 577)
train = (1.1792777850751583, 1.3407554197293814)
scores = (0.56910591956265433, 0.48684003887957811)
score = 0.5279729792211162
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (341, 577)
train = (1.1792777850751583, 1.3407554197293814)
scores = (0.56910591956265433, 0.48684003887957811)
score = 0.5279729792211162
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (211, 103)
train = (1.2148852132287433, 1.1004839390503922)
scores = (0.59600888924956297, 0.46162364486181628)
score = 0.5288162670556896
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (260, 39)
train = (1.2013694618188138, 1.0082359228193625)
scores = (0.54323056289316962, 0.43501676209759277)
score = 0.4891236624953812
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (315, 115)
train = (1.2922067233339902, 0.95319043108497392)
scores = (0.57633848907951368, 0.4624600318116901)
score = 0.5193992604456019
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (211, 103)
train = (1.2148852132287433, 1.1004839390503922)
scores = (0.59600888924956297, 0.46162364486181628)
score = 0.5288162670556896
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (244, 181)
train = (1.3217648731202445, 1.3321956514628006)
scores = (0.59474576848663918, 0.47948558912721823)
score = 0.5371156788069287
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 41)
train = (1.196443441140441, 1.1992620385012536)
scores = (0.52877649297662599, 0.4621213706160871)
score = 0.4954489317963565
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (514, 303)
train = (1.5055343571686348, 1.3653983026931198)
scores = (0.59132843110475608, 0.48606697409089855)
score = 0.5386977025978273
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (514, 303)
train = (1.5055343571686348, 1.3653983026931198)
scores = (0.59132843110475608, 0.48606697409089855)
score = 0.5386977025978273
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (214, 341)
train = (1.3948912979490928, 1.5894619494640705)
scores = (0.59141713670580143, 0.49193356648051845)
score = 0.5416753515931599
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 33)
train = (1.3430916447685968, 1.3242605108218917)
scores = (0.56012610181572653, 0.46504812970180509)
score = 0.5125871157587658
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (296, 388)
train = (1.3890564033789463, 1.5223516333445088)
scores = (0.58093991959719959, 0.50091091894067996)
score = 0.5409254192689398
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (214, 341)
train = (1.3948912979490928, 1.5894619494640705)
scores = (0.59141713670580143, 0.49193356648051845)
score = 0.5416753515931599
>>> t = 5602 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2012.75, 2013.75, 2014.75, 2014.0, 2009.5, 2010.0, 2011.75, 2012.5, 2013.25, 2014.5, 2015.0}), frozenset({2010.75, 2011.25, 2012.25, 2009.25, 2009.75, 2013.5, 2009.0, 2010.5, 2011.0, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (669, 32)
train = (1.8793972309713169, 0.78398994231180219)
scores = (0.46462492495576907, 0.59688336369857842)
score = 0.5307541443271737
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (670, 52)
train = (2.1744266168200301, 0.75329428237840579)
scores = (0.47955510886431696, 0.62024655056528477)
score = 0.5499008297148009
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (938, 81)
train = (1.6996129879143378, 0.80922553832353716)
scores = (0.42739663852455273, 0.59681564913478236)
score = 0.5121061438296676
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (670, 52)
train = (2.1744266168200301, 0.75329428237840579)
scores = (0.47955510886431696, 0.62024655056528477)
score = 0.5499008297148009
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (759, 30)
train = (2.2198564833011187, 0.87470613517402274)
scores = (0.47708072234388021, 0.59904441162767796)
score = 0.538062566985779
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (446, 75)
train = (2.3120409579761385, 0.87293519306413747)
scores = (0.46506415351409103, 0.63470323013243624)
score = 0.5498836918232637
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (871, 60)
train = (1.8951200928975802, 0.85407746681252661)
scores = (0.43579206315033525, 0.61020390272911729)
score = 0.5229979829397262
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (446, 75)
train = (2.3120409579761385, 0.87293519306413747)
scores = (0.46506415351409103, 0.63470323013243624)
score = 0.5498836918232637
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (529, 33)
train = (2.2176671116078768, 0.96191458461286428)
scores = (0.47767722330499734, 0.616491277986561)
score = 0.5470842506457791
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (360, 126)
train = (2.4476639171794043, 1.1288236566262888)
scores = (0.44973540795186245, 0.6616803980599566)
score = 0.5557079030059096
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (826, 96)
train = (2.0067324964633051, 1.0527199064749844)
scores = (0.4394492175159499, 0.62621510632129318)
score = 0.5328321619186216
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (360, 126)
train = (2.4476639171794043, 1.1288236566262888)
scores = (0.44973540795186245, 0.6616803980599566)
score = 0.5557079030059096
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (444, 27)
train = (2.2501534284682454, 1.0271293231045402)
scores = (0.47857949670795985, 0.61596483705495797)
score = 0.5472721668814589
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (346, 68)
train = (2.5834095529897949, 1.0992703103941515)
scores = (0.45635219170002456, 0.65773071012477413)
score = 0.5570414509123993
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (624, 95)
train = (1.8254554392419637, 1.1135879208087294)
scores = (0.42909002418085157, 0.63380927884223337)
score = 0.5314496515115424
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (346, 68)
train = (2.5834095529897949, 1.0992703103941515)
scores = (0.45635219170002456, 0.65773071012477413)
score = 0.5570414509123993
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (529, 33)
train = (2.2176671116078768, 0.96191458461286428)
scores = (0.4776772233049974, 0.616491277986561)
score = 0.5470842506457791
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (515, 87)
train = (2.3545391718658064, 0.88296318061289314)
scores = (0.460892317016593, 0.63970308211762739)
score = 0.5502976995671102
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (826, 96)
train = (2.0067324964633082, 1.0527199064749841)
scores = (0.43944921751596461, 0.62621510632129307)
score = 0.5328321619186288
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (515, 87)
train = (2.3545391718658064, 0.88296318061289314)
scores = (0.460892317016593, 0.63970308211762739)
score = 0.5502976995671102
>>> t = 5603 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2012.75, 2009.0, 2013.75, 2014.75, 2009.5, 2015.25, 2011.75, 2012.0, 2013.25, 2014.25, 2015.0}), frozenset({2010.0, 2010.75, 2011.25, 2012.5, 2009.75, 2013.5, 2014.0, 2009.25, 2010.25, 2011.0, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (456, 198)
train = (1.1214873930572056, 1.1806723644180623)
scores = (0.51793423557915497, 0.51179582429772297)
score = 0.514865029938439
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (270, 145)
train = (1.0135946011660415, 1.0679245966896462)
scores = (0.48318727305991394, 0.49303944780874998)
score = 0.48811336043433196
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (542, 737)
train = (1.2031837568181771, 1.523854049328883)
scores = (0.52280588225600155, 0.54219614656988369)
score = 0.5325010144129426
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (542, 737)
train = (1.2031837568181771, 1.523854049328883)
scores = (0.52280588225600155, 0.54219614656988369)
score = 0.5325010144129426
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (621, 150)
train = (1.3165322445790191, 1.2761498009872556)
scores = (0.56911297969680374, 0.53441211196254756)
score = 0.5517625458296757
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (331, 24)
train = (1.2566330148501217, 1.0255278290969163)
scores = (0.53635548294039848, 0.4881088330276247)
score = 0.5122321579840116
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (418, 590)
train = (1.2602467309333205, 1.5851577644911712)
scores = (0.53834290949263386, 0.55633284714775855)
score = 0.5473378783201962
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (621, 150)
train = (1.3165322445790191, 1.2761498009872556)
scores = (0.56911297969680374, 0.53441211196254756)
score = 0.5517625458296757
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (688, 326)
train = (1.42969430166151, 1.6300000258366725)
scores = (0.56649422076594869, 0.56975899178050382)
score = 0.5681266062732262
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 73)
train = (1.1203762263787804, 1.3469995059163855)
scores = (0.48509054896721882, 0.50333562103602292)
score = 0.49421308500162087
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (619, 347)
train = (1.4467078209390771, 1.4913108171556297)
scores = (0.56080944712962455, 0.54432285777109546)
score = 0.55256615245036
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (688, 326)
train = (1.42969430166151, 1.6300000258366725)
scores = (0.56649422076594869, 0.56975899178050382)
score = 0.5681266062732262
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (573, 412)
train = (1.4727731016233454, 1.752600600031909)
scores = (0.58564476994108328, 0.55379446118928233)
score = 0.5697196155651828
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 57)
train = (1.1095448099686429, 1.5321136524826282)
scores = (0.48606919808476701, 0.51377238512152745)
score = 0.49992079160314723
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (539, 245)
train = (1.4794897381594594, 1.3748541371224459)
scores = (0.57375706457313336, 0.53771862148225857)
score = 0.555737843027696
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (573, 412)
train = (1.4727731016233454, 1.752600600031909)
scores = (0.58564476994108328, 0.55379446118928233)
score = 0.5697196155651828
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (688, 326)
train = (1.4296943016615105, 1.6300000258366729)
scores = (0.56649422076594869, 0.56975899178050404)
score = 0.5681266062732264
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (242, 113)
train = (1.1888057616912739, 1.2076426130331233)
scores = (0.50913765731552996, 0.48940137724131977)
score = 0.49926951727842483
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (619, 347)
train = (1.4467078209390771, 1.49131081715563)
scores = (0.56080944712962444, 0.54432285777109546)
score = 0.55256615245036
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (688, 326)
train = (1.4296943016615105, 1.6300000258366729)
scores = (0.56649422076594869, 0.56975899178050404)
score = 0.5681266062732264
>>> t = 5604 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.5, 2012.5, 2012.25, 2014.25, 2009.5, 2010.0, 2011.0, 2012.75, 2013.75, 2014.5, 2015.0}), frozenset({2011.75, 2009.25, 2009.75, 2013.25, 2013.5, 2014.0, 2009.0, 2010.25, 2011.25, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (685, 182)
train = (2.0788637601549276, 0.99325521957455032)
scores = (0.5742386523351436, 0.46794890501691777)
score = 0.5210937786760307
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (141, 107)
train = (1.5324017945548529, 0.95526526929067535)
scores = (0.52271167344539837, 0.44243695607340605)
score = 0.4825743147594022
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (220, 134)
train = (1.0097423835716457, 0.92077228700871794)
scores = (0.5182404514576503, 0.44922506169523158)
score = 0.48373275657644094
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (685, 182)
train = (2.0788637601549276, 0.99325521957455032)
scores = (0.5742386523351436, 0.46794890501691777)
score = 0.5210937786760307
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (205, 91)
train = (1.5785649131212247, 1.000039732224808)
scores = (0.54107994115112246, 0.47324544951634734)
score = 0.5071626953337349
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (164, 42)
train = (2.0494671904695245, 1.0295854533084146)
scores = (0.54546225379499225, 0.44931863045136589)
score = 0.49739044212317907
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (342, 101)
train = (1.4384733783883448, 0.91656775631169796)
scores = (0.55074408842620703, 0.45259242052738435)
score = 0.5016682544767956
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (205, 91)
train = (1.5785649131212247, 1.000039732224808)
scores = (0.54107994115112246, 0.47324544951634734)
score = 0.5071626953337349
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 125)
train = (1.0222561866192941, 1.1184918792528415)
scores = (0.52426493199979718, 0.47071882897515827)
score = 0.4974918804874777
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (127, 209)
train = (2.2065461040639427, 1.2826713196799584)
scores = (0.5481728104731991, 0.49937487607622133)
score = 0.5237738432747102
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (335, 96)
train = (1.5405858114976412, 0.94375768754206113)
scores = (0.53875576716257056, 0.4603751984471639)
score = 0.49956548280486723
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (127, 209)
train = (2.2065461040639427, 1.2826713196799584)
scores = (0.5481728104731991, 0.49937487607622133)
score = 0.5237738432747102
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (407, 127)
train = (2.3084517410528602, 1.1693377528279585)
scores = (0.58884805676692453, 0.47312727659142095)
score = 0.5309876666791727
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (181, 16)
train = (2.4767698490927668, 1.2416285596292225)
scores = (0.56174900330884148, 0.44329180680508168)
score = 0.5025204050569616
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (306, 82)
train = (1.5221294438066395, 0.93955404792823272)
scores = (0.53909471874928672, 0.44923733725944404)
score = 0.4941660280043654
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (407, 127)
train = (2.3084517410528602, 1.1693377528279585)
scores = (0.58884805676692453, 0.47312727659142095)
score = 0.5309876666791727
>>> t = 5700 ===================================================================================================
(pair) len(F.columns) = 14
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[0,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|vp5dd)
            & [10:5,15:5] 
          }
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[0,1:2] 
          }
      )
    | 
        | FracRec[62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.5, 2011.0, 2009.25, 2013.75, 2014.0, 2009.0, 2010.25, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}), frozenset({2010.5, 2010.75, 2012.5, 2012.75, 2009.75, 2013.5, 2014.25, 2009.5, 2010.0, 2011.25, 2012.25, 2013.25, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 39)
train = (0.55626986082850871, 0.72699193729169775)
scores = (0.38956785993020643, 0.33157897548991966)
score = 0.360573417710063
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 9)
train = (0.57134140636677944, 0.71940716832839258)
scores = (0.33320709052796604, 0.3209775079154385)
score = 0.32709229922170224
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 83)
train = (0.60671901424415398, 0.63185957370695367)
scores = (0.39688620275613806, 0.33623493183133163)
score = 0.3665605672937349
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (87, 83)
train = (0.60671901424415398, 0.63185957370695367)
scores = (0.39688620275613806, 0.33623493183133163)
score = 0.3665605672937349
>>> t = 5701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[0,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|vp5dd)
            & [10:5,15:5] 
          }
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[0,1:2] 
          }
      )
    | 
        | FracRec[62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2011.75, 2012.0, 2009.0, 2013.0, 2014.5, 2009.75, 2010.5, 2011.0, 2012.25, 2013.75, 2014.75, 2015.0}), frozenset({2010.25, 2010.75, 2012.75, 2009.25, 2013.5, 2014.0, 2009.5, 2010.0, 2011.25, 2012.5, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (93, 26)
train = (0.73530826874798139, 0.69123252085301523)
scores = (0.40695529604835534, 0.32592670600250551)
score = 0.3664410010254304
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (110, 16)
train = (0.81514300072704415, 0.74268688838781804)
scores = (0.41670189501905042, 0.32603095699885953)
score = 0.371366426008955
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 15)
train = (0.42005970368373907, 0.50853526701793228)
scores = (0.40426854355696867, 0.32814816697715016)
score = 0.3662083552670594
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (110, 16)
train = (0.81514300072704415, 0.74268688838781804)
scores = (0.41670189501905042, 0.32603095699885953)
score = 0.371366426008955
>>> t = 5800 ===================================================================================================
(pair) len(F.columns) = 16
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|dcc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [10:5,15:10,20:10,20:5] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [10:] 
      }
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.0, 2012.0, 2013.5, 2014.0, 2009.5, 2010.25, 2011.75, 2012.25, 2013.0, 2014.25, 2015.25}), frozenset({2010.0, 2012.75, 2009.25, 2009.75, 2013.75, 2014.5, 2009.0, 2010.75, 2011.5, 2012.5, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.43254931526187707, 0.44262338509122817)
scores = (0.33592955568299715, 0.30528117879100319)
score = 0.32060536723700017
>>> t = 5801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|dcc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [10:5,15:10,20:10,20:5] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [10:] 
      }
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2012.25, 2012.75, 2013.5, 2013.75, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.5, 2015.0}), frozenset({2010.25, 2011.75, 2009.25, 2009.75, 2014.25, 2014.0, 2009.0, 2010.75, 2011.5, 2012.5, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (275, 68)
train = (0.78658156276348323, 0.61995835532195165)
scores = (0.33687754651666274, 0.32973746520655584)
score = 0.3333075058616093
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 1)
train = (0.83099900693777839, 0.4935737574256942)
scores = (0.33053814815860283, 0.32779991407903186)
score = 0.32916903111881735
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (221, 78)
train = (0.57212847636151754, 0.5037942036490809)
scores = (0.3331952878954394, 0.35540541327859326)
score = 0.34430035058701636
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (221, 78)
train = (0.57212847636151754, 0.5037942036490809)
scores = (0.3331952878954394, 0.35540541327859326)
score = 0.34430035058701636
>>> t = 5900 ===================================================================================================
(pair) len(F.columns) = 48
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:12,18:12,21:15,15:6,18:9,18:6,18:3] 
          }
        | ( 
            <>Return{(doo[1:]|oo{.&[10:]}|aoo[10:]|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.25, 2011.5, 2009.75, 2013.25, 2013.5, 2014.5, 2009.0, 2010.5, 2011.0, 2012.75, 2013.75, 2014.25, 2015.25}), frozenset({2010.25, 2010.75, 2012.25, 2012.5, 2009.25, 2014.0, 2009.5, 2010.0, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 281)
train = (1.0336396766140639, 1.3303648367501739)
scores = (0.40984510545160585, 0.57291618054855675)
score = 0.49138064300008133
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (267, 184)
train = (1.1431592642393364, 1.2528993832568183)
scores = (0.45678133709700403, 0.44318821798330993)
score = 0.449984777540157
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (374, 89)
train = (1.2287296180709413, 1.0552050413875846)
scores = (0.38018238506157465, 0.60002861275239694)
score = 0.4901054989069858
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (144, 281)
train = (1.0336396766140639, 1.3303648367501739)
scores = (0.40984510545160585, 0.57291618054855675)
score = 0.49138064300008133
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (234, 254)
train = (1.2300785907743255, 1.4681716242648368)
scores = (0.42638976289112407, 0.56707923044067921)
score = 0.49673449666590164
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (351, 328)
train = (1.4562946941553014, 1.6871751300910396)
scores = (0.49073592362985058, 0.48025355722798813)
score = 0.4854947404289194
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (321, 186)
train = (1.2687421798049072, 1.3808015175923247)
scores = (0.38826418916753641, 0.61109866818345204)
score = 0.49968142867549425
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (321, 186)
train = (1.2687421798049072, 1.3808015175923247)
scores = (0.38826418916753641, 0.61109866818345204)
score = 0.49968142867549425
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (192, 159)
train = (1.272079924683102, 1.4140388421084547)
scores = (0.41927905034063784, 0.59125755909906264)
score = 0.5052683047198503
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (353, 197)
train = (1.6052134207227606, 1.6861031135998656)
scores = (0.49945211361319192, 0.50960720109858337)
score = 0.5045296573558876
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (304, 89)
train = (1.3246773843341322, 1.2040260586209151)
scores = (0.38897963682087683, 0.60079526993519383)
score = 0.4948874533780353
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (192, 159)
train = (1.272079924683102, 1.4140388421084547)
scores = (0.41927905034063784, 0.59125755909906264)
score = 0.5052683047198503
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (176, 152)
train = (1.3244445394597921, 1.4850687394560478)
scores = (0.42671498220162091, 0.58753932676083731)
score = 0.5071271544812291
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 196)
train = (1.1078907766877013, 1.7539010422114503)
scores = (0.35402994114733499, 0.49761209730691552)
score = 0.42582101922712523
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 87)
train = (1.0261861816777085, 1.2601516398866244)
scores = (0.36017066775241907, 0.60776501813853379)
score = 0.48396784294547646
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (176, 152)
train = (1.3244445394597921, 1.4850687394560478)
scores = (0.42671498220162091, 0.58753932676083731)
score = 0.5071271544812291
>>> t = 5901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:12,18:12,21:15,15:6,18:9,18:6,18:3] 
          }
        | ( 
            <>Return{(doo[1:]|oo{.&[10:]}|aoo[10:]|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2015.0, 2011.25, 2011.5, 2012.25, 2013.5, 2009.25, 2010.75, 2011.75, 2012.75, 2013.25, 2014.0, 2015.25}), frozenset({2010.5, 2012.5, 2009.0, 2009.75, 2013.75, 2014.75, 2014.25, 2009.5, 2010.25, 2011.0, 2012.0, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (23, 25)
train = (0.96256927595847119, 0.88535552005148255)
scores = (0.47488983679803565, 0.41187287275892276)
score = 0.4433813547784792
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 343)
train = (0.96430649196037277, 1.1789118754883585)
scores = (0.44413856132511004, 0.48863719942890077)
score = 0.4663878803770054
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (30, 231)
train = (0.78959151849785281, 1.095200577530419)
scores = (0.45836654047786962, 0.54572087630928301)
score = 0.5020437083935763
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (30, 231)
train = (0.78959151849785281, 1.095200577530419)
scores = (0.45836654047786962, 0.54572087630928301)
score = 0.5020437083935763
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (27, 7)
train = (1.0749903018142575, 0.95647177077512213)
scores = (0.46474673619841106, 0.27251242560073408)
score = 0.36862958089957254
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 131)
train = (1.0820658114571784, 1.1031769493335435)
scores = (0.44272269555735794, 0.49412300056064618)
score = 0.46842284805900203
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 328)
train = (0.81536307177796774, 1.333883077562547)
scores = (0.44970427455035272, 0.55891805174343345)
score = 0.5043111631468931
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (29, 328)
train = (0.81536307177796774, 1.333883077562547)
scores = (0.44970427455035272, 0.55891805174343345)
score = 0.5043111631468931
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 22)
train = (1.0410364183499532, 1.0269494030481332)
scores = (0.44855531914779756, 0.44699323237781291)
score = 0.44777427576280526
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 126)
train = (1.3363438275987269, 1.2720553711771678)
scores = (0.45483248783892172, 0.51326947718037341)
score = 0.48405098250964756
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 160)
train = (0.80054766428643731, 1.1897474885843007)
scores = (0.44657487257299622, 0.56824152034568964)
score = 0.5074081964593429
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (24, 160)
train = (0.80054766428643731, 1.1897474885843007)
scores = (0.44657487257299622, 0.56824152034568964)
score = 0.5074081964593429
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 24)
train = (1.0603536311402721, 1.0440631678388075)
scores = (0.46250322229858026, 0.45716388503706412)
score = 0.4598335536678222
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 165)
train = (1.5567015413297236, 1.4126009303055476)
scores = (0.46464445014602668, 0.53282006669954352)
score = 0.4987322584227851
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 194)
train = (0.823122096355416, 1.2940117567902747)
scores = (0.44739794375046643, 0.56568383445316173)
score = 0.506540889101814
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (19, 194)
train = (0.823122096355416, 1.2940117567902747)
scores = (0.44739794375046643, 0.56568383445316173)
score = 0.506540889101814
>>> t = 5902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:12,18:12,21:15,15:6,18:9,18:6,18:3] 
          }
        | ( 
            <>Return{(doo[1:]|oo{.&[10:]}|aoo[10:]|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2012.0, 2012.75, 2009.5, 2009.75, 2013.25, 2009.0, 2010.5, 2011.5, 2012.25, 2013.0, 2014.5, 2015.0}), frozenset({2010.75, 2011.25, 2011.75, 2013.75, 2014.25, 2014.0, 2009.25, 2010.25, 2011.0, 2012.5, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 167)
train = (0.87008236068736777, 1.2759450058440012)
scores = (0.4702316977335193, 0.45277314110248318)
score = 0.46150241941800124
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (209, 163)
train = (1.014557701994159, 1.3438831956081774)
scores = (0.42650154462495082, 0.42992332567346569)
score = 0.42821243514920826
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (119, 282)
train = (0.9396027215499011, 1.3361767786851881)
scores = (0.50069697983191075, 0.41439358272385723)
score = 0.45754528127788396
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (121, 167)
train = (0.87008236068736777, 1.2759450058440012)
scores = (0.4702316977335193, 0.45277314110248318)
score = 0.46150241941800124
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 147)
train = (1.015744522403403, 1.3580349395175921)
scores = (0.47375461798814605, 0.46635711964376453)
score = 0.4700558688159553
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (191, 250)
train = (1.2063979656329238, 1.7249184315755164)
scores = (0.44942082579187981, 0.4637591841755897)
score = 0.45659000498373475
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 223)
train = (0.99736470013764322, 1.3488203608311735)
scores = (0.5088036275057588, 0.41681950022357472)
score = 0.46281156386466676
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (155, 147)
train = (1.015744522403403, 1.3580349395175921)
scores = (0.47375461798814605, 0.46635711964376453)
score = 0.4700558688159553
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (103, 115)
train = (1.0340718779177851, 1.3886667664284635)
scores = (0.4897399227595185, 0.45895699707823173)
score = 0.4743484599188751
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (100, 225)
train = (1.1447340330122926, 1.8177199652737872)
scores = (0.47846504121916106, 0.50163997676607019)
score = 0.49005250899261565
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 260)
train = (1.0481452910122337, 1.5310605200757188)
scores = (0.51512300682214007, 0.41906413150165839)
score = 0.46709356916189926
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (100, 225)
train = (1.1447340330122926, 1.8177199652737872)
scores = (0.47846504121916106, 0.50163997676607019)
score = 0.49005250899261565
>>> t = 6000 ===================================================================================================
(pair) len(F.columns) = 159
(pair) generating [452]0.........100.........200.........300.........400.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 320
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [5:,15:,10:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                | Drawdown[1:] 
                | Since{Max&index[0]} 
                | Drawup[1:,10:] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[5,10]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.25, 2011.5, 2014.5, 2014.75, 2009.5, 2010.5, 2011.75, 2012.25, 2013.0, 2014.25, 2015.25}), frozenset({2012.0, 2012.75, 2009.25, 2009.75, 2013.5, 2013.75, 2009.0, 2010.25, 2011.0, 2012.5, 2013.25, 2014.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (526, 844)
train = (2.1250748046651289, 1.1611878998085199)
scores = (0.65212188861367026, 0.56176827517723982)
score = 0.606945081895455
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (383, 649)
train = (2.1893837415382014, 1.2579014225571596)
scores = (0.669366450147727, 0.56900327958496477)
score = 0.6191848648663458
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (465, 603)
train = (1.7822921860239762, 1.1608445495834665)
scores = (0.57836949057373965, 0.51184087983258786)
score = 0.5451051852031638
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (383, 649)
train = (2.1893837415382014, 1.2579014225571596)
scores = (0.669366450147727, 0.56900327958496477)
score = 0.6191848648663458
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (392, 677)
train = (2.1657709444287869, 1.1892863434422742)
scores = (0.65495210414697325, 0.55828718860074567)
score = 0.6066196463738595
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (351, 564)
train = (2.4086595493948675, 1.4301860934396069)
scores = (0.69647903030452796, 0.58629135444751546)
score = 0.6413851923760217
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (947, 441)
train = (2.2733026781039873, 1.198287276454318)
scores = (0.63104000667073878, 0.51244481688065724)
score = 0.571742411775698
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (351, 564)
train = (2.4086595493948675, 1.4301860934396069)
scores = (0.69647903030452796, 0.58629135444751546)
score = 0.6413851923760217
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (288, 596)
train = (2.1351088111911078, 1.246516376983986)
scores = (0.64934907071768766, 0.55771155658258298)
score = 0.6035303136501353
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (320, 443)
train = (2.5290243738342659, 1.4802435975719272)
scores = (0.71631586196874242, 0.59525032902858011)
score = 0.6557830954986612
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (638, 506)
train = (2.1890289800408431, 1.3049998380539292)
scores = (0.61784084406176165, 0.53001488457214063)
score = 0.5739278643169512
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (320, 443)
train = (2.5290243738342659, 1.4802435975719272)
scores = (0.71631586196874242, 0.59525032902858011)
score = 0.6557830954986612
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (525, 754)
train = (2.4255609825570623, 1.3567122636597109)
scores = (0.68628144037670002, 0.57151106249343986)
score = 0.62889625143507
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (351, 452)
train = (2.6469559255938355, 1.5709440141498581)
scores = (0.71375552428627798, 0.58231523827834708)
score = 0.6480353812823125
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (833, 556)
train = (2.3473642261335272, 1.4094079941770772)
scores = (0.63888173895214073, 0.54481069283996109)
score = 0.5918462158960509
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (351, 452)
train = (2.6469559255938355, 1.5709440141498581)
scores = (0.71375552428627798, 0.58231523827834708)