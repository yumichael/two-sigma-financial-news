>>> t = 0 ===================================================================================================
(pair) len(F.columns) = 42
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 51
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [5:,15:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[ 5:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:,20:, 10:5] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2012.0, 2012.25, 2009.25, 2013.75, 2013.5, 2009.75, 2010.75, 2011.5, 2012.75, 2013.25, 2014.0}), frozenset({2015.0, 2011.25, 2011.75, 2009.0, 2014.75, 2014.25, 2009.5, 2010.25, 2011.0, 2012.5, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 59)
train = (0.91653724708211315, 0.75269852410176963)
scores = (0.41894218558392959, 0.32314232841937623)
score = 0.37104225700165294
holdout = (0.5211418413423382, 0.450757057768339)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (78, 3)
train = (0.93841270991721115, 0.55622487697924283)
scores = (0.38878046699585167, 0.28760776838290514)
score = 0.3381941176893784
holdout = (0.5489944156647225, 0.36385745199665936)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (133, 204)
train = (0.82330614864595797, 0.8582257577958593)
scores = (0.45067876626743086, 0.32984719666211337)
score = 0.3902629814647721
holdout = (0.48929811968687975, 0.4919586964997293)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (133, 204)
train = (0.82330614864595797, 0.8582257577958593)
scores = (0.45067876626743086, 0.32984719666211337)
score = 0.3902629814647721
holdout = (0.48929811968687975, 0.4919586964997293)
>>> t = 1 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 51
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [5:,15:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[ 5:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:,20:, 10:5] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.0, 2011.25, 2011.5, 2009.5, 2009.25, 2015.25, 2011.75, 2009.0, 2013.0, 2014.0, 2015.0}), frozenset({2010.0, 2012.25, 2012.5, 2012.75, 2013.5, 2013.75, 2014.5, 2014.25, 2009.75, 2010.25, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 400)
train = (0.8905177348586002, 1.6455486362575342)
scores = (0.39461837905415403, 0.31694018017501552)
score = 0.3557792796145848
holdout = (0.5200953346782219, 0.6787024317346334)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 1)
train = (0.67584267279484012, 0.60961005826356685)
scores = (0.34269822160687968, 0.28661305350271593)
score = 0.3146556375547978
holdout = (0.414662611397288, 0.3715796906264922)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (164, 251)
train = (0.89647715829894248, 0.97025879525563308)
scores = (0.39080225342359221, 0.2723665109825999)
score = 0.33158438220309605
holdout = (0.5085725773317855, 0.47512315323561044)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 400)
train = (0.8905177348586002, 1.6455486362575342)
scores = (0.39461837905415403, 0.31694018017501552)
score = 0.3557792796145848
holdout = (0.5200953346782219, 0.6787024317346334)
>>> t = 100 ===================================================================================================
(pair) len(F.columns) = 104
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 143
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Drawup[1] 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp1dd)
            & [12:,15:,18:,6:3,18:15,21:18,12:6,18:12,12:3,15:6,15:3,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:10] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2011.0, 2011.25, 2012.75, 2009.75, 2009.5, 2014.5, 2009.0, 2010.0, 2011.5, 2012.25, 2013.25, 2014.0, 2015.0}), frozenset({2010.5, 2010.75, 2012.5, 2013.5, 2013.75, 2014.25, 2009.25, 2010.25, 2011.75, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 28)
train = (1.0653668123605367, 1.0310287947856642)
scores = (0.23555986350869751, 0.34968550016294947)
score = 0.2926226818358235
holdout = (0.5134423947657113, 0.5513939742858145)
>>> t = 101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 143
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Drawup[1] 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp1dd)
            & [12:,15:,18:,6:3,18:15,21:18,12:6,18:12,12:3,15:6,15:3,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:10] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,125:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.25, 2011.25, 2011.0, 2011.5, 2009.0, 2013.5, 2009.25, 2010.5, 2011.75, 2012.5, 2013.75, 2014.5, 2015.25}), frozenset({2010.75, 2012.25, 2012.75, 2009.75, 2013.25, 2014.25, 2014.0, 2009.5, 2010.0, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (102, 39)
train = (0.98097317042628107, 1.052818698990726)
scores = (0.2026327361301351, 0.38876041541156864)
score = 0.29569657577085184
holdout = (0.5009811691809463, 0.510363663186607)
>>> t = 200 ===================================================================================================
(pair) len(F.columns) = 23
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [9:,15:,18:,6:3,9:6,18:15,21:18,12:6,            15:9,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:, 10:5,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,125:] 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.5, 2012.5, 2009.75, 2013.25, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.5, 2015.0}), frozenset({2011.75, 2012.75, 2009.25, 2013.75, 2014.25, 2014.0, 2009.0, 2010.25, 2011.25, 2012.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (203, 559)
train = (1.286909914709224, 0.88045518813824142)
scores = (0.51618666282547854, 0.33384016454200516)
score = 0.42501341368374185
holdout = (0.7205301490122713, 0.5320738307717783)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 25)
train = (1.3083499009037092, 0.702909229644331)
scores = (0.52110479024797529, 0.24761682105320371)
score = 0.3843608056505895
holdout = (0.7399630879890225, 0.4488570644732406)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 175)
train = (0.99481779670158765, 0.70550117876899376)
scores = (0.41025420298605308, 0.26627038784427975)
score = 0.3382622954151664
holdout = (0.5776908124900572, 0.4253222798269453)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (203, 559)
train = (1.286909914709224, 0.88045518813824142)
scores = (0.51618666282547854, 0.33384016454200516)
score = 0.42501341368374185
holdout = (0.7205301490122713, 0.5320738307717783)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 46)
train = (1.058299004805584, 0.70885912524672867)
scores = (0.51023569481893849, 0.28479381522403724)
score = 0.39751475502148786
holdout = (0.6360263367561482, 0.4505641931389591)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 10)
train = (1.3447328365924369, 0.78258016594876001)
scores = (0.57260937869732964, 0.26672614599712713)
score = 0.41966776234722836
holdout = (0.7615545061692485, 0.4848357361818865)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (215, 526)
train = (1.2044846814885557, 1.0291109296036181)
scores = (0.42966768847906789, 0.30301734521912982)
score = 0.36634251684909885
holdout = (0.6473101151744456, 0.5494868314354902)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (59, 10)
train = (1.3447328365924369, 0.78258016594876001)
scores = (0.57260937869732964, 0.26672614599712713)
score = 0.41966776234722836
holdout = (0.7615545061692485, 0.4848357361818865)
>>> t = 201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [9:,15:,18:,6:3,9:6,18:15,21:18,12:6,            15:9,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:, 10:5,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,125:] 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.5, 2012.5, 2009.25, 2014.5, 2014.75, 2009.5, 2015.25, 2011.75, 2012.25, 2013.5, 2014.25, 2015.0}), frozenset({2010.25, 2010.75, 2011.25, 2012.75, 2009.75, 2013.25, 2013.75, 2009.0, 2010.5, 2011.0, 2012.0, 2013.0, 2014.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 52)
train = (0.8386907726193894, 0.74592643441273387)
scores = (0.42262444801339405, 0.404083233605813)
score = 0.4133538408096035
holdout = (0.5364310465164913, 0.5074979606669019)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 61)
train = (0.70071557434656639, 0.72468190996495363)
scores = (0.32529456319466588, 0.34301119537682184)
score = 0.3341528792857439
holdout = (0.46649542511505626, 0.4979218514989922)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (92, 127)
train = (0.66851331450442442, 0.79482224751478503)
scores = (0.40070021378520698, 0.37476188048830023)
score = 0.3877310471367536
holdout = (0.45489186396437187, 0.4918533312746137)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 52)
train = (0.8386907726193894, 0.74592643441273387)
scores = (0.42262444801339405, 0.404083233605813)
score = 0.4133538408096035
holdout = (0.5364310465164913, 0.5074979606669019)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 41)
train = (0.64618117833938349, 0.78968381901186924)
scores = (0.40221143757014244, 0.40343952269178585)
score = 0.40282548013096414
holdout = (0.4602662558173507, 0.5193393740708719)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 14)
train = (0.6938938364108258, 0.81252529610521829)
scores = (0.34385560922504554, 0.34770449009220733)
score = 0.3457800496586264
holdout = (0.4689650156335643, 0.533182935083211)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (68, 130)
train = (0.67893115782977742, 0.89391459253766636)
scores = (0.40232703884567028, 0.39008835666245356)
score = 0.39620769775406195
holdout = (0.46327395847986774, 0.530294020851089)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 41)
train = (0.64618117833938349, 0.78968381901186924)
scores = (0.40221143757014244, 0.40343952269178585)
score = 0.40282548013096414
holdout = (0.4602662558173507, 0.5193393740708719)
>>> t = 300 ===================================================================================================
(pair) len(F.columns) = 26
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 55
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd|Volatility)
            & [12:,15:,12:9,12:6,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Drawup[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[10:] 
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
              )
            & Since[ 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.25, 2012.0, 2012.25, 2009.25, 2009.5, 2013.75, 2009.75, 2010.75, 2011.5, 2012.5, 2013.25, 2014.75, 2015.0}), frozenset({2010.25, 2010.5, 2011.75, 2013.5, 2014.25, 2014.0, 2009.0, 2010.0, 2011.0, 2012.75, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (158, 3)
train = (1.1812397808799104, 0.62865251356950147)
scores = (0.24791884286768512, 0.10467992419089719)
score = 0.17629938352929114
holdout = (0.5947245265789516, 0.2528745818305651)
>>> t = 301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 55
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd|Volatility)
            & [12:,15:,12:9,12:6,18:12,21:15,15:6,18:9,21:12,15:3,18:6,21:9,18:3,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Drawup[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[10:] 
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
              )
            & Since[ 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2010.75, 2012.75, 2012.5, 2009.75, 2014.75, 2009.25, 2010.0, 2011.0, 2009.5, 2013.5, 2014.25, 2015.25}), frozenset({2011.25, 2011.75, 2012.25, 2013.25, 2013.75, 2014.0, 2009.0, 2010.5, 2011.5, 2012.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (205, 20)
train = (1.0046499720906295, 0.7864011686647906)
scores = (0.32977578356981452, 0.26351011034691668)
score = 0.29664294695836557
holdout = (0.5400330810683366, 0.45575823512372615)
>>> t = 400 ===================================================================================================
(pair) len(F.columns) = 35
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 58
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo)
            & [12:,15:,18:15,12:6,            15:9,21:9,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| VP)
        & [10:,20:,60:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [3:,9:,12:,15:,12:9,9:3,            15:9,18:12,12:3,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:] 
                | Since{Max&index[5]} 
                | Since{Min&index[0]} 
              )
            & Since[ 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.5, 2011.0, 2012.0, 2013.25, 2013.5, 2014.0, 2009.0, 2010.75, 2011.25, 2012.5, 2013.75, 2014.75}), frozenset({2010.25, 2010.5, 2015.0, 2012.75, 2009.25, 2009.75, 2014.25, 2009.5, 2010.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 11)
train = (0.78547561892542905, 0.61666704536291239)
scores = (0.32913659383348204, 0.45995409952872751)
score = 0.39454534668110475
holdout = (0.5117777117082974, 0.4802121481953367)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 33)
train = (0.60984329550022998, 0.75771777294311538)
scores = (0.31693141170075395, 0.42315306426647425)
score = 0.37004223798361413
holdout = (0.4562286978460929, 0.530931406165493)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 11)
train = (0.66948416084552376, 0.47421852707675599)
scores = (0.32495143940570864, 0.46223372353153419)
score = 0.3935925814686214
holdout = (0.467327235077541, 0.4421518888565379)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (60, 11)
train = (0.78547561892542905, 0.61666704536291239)
scores = (0.32913659383348204, 0.45995409952872751)
score = 0.39454534668110475
holdout = (0.5117777117082974, 0.4802121481953367)
>>> t = 401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 58
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo)
            & [12:,15:,18:15,12:6,            15:9,21:9,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[0]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| VP)
        & [10:,20:,60:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [3:,9:,12:,15:,12:9,9:3,            15:9,18:12,12:3,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:] 
                | Since{Max&index[5]} 
                | Since{Min&index[0]} 
              )
            & Since[ 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.0, 2015.0, 2013.25, 2014.25, 2014.75, 2014.5, 2009.5, 2010.5, 2011.5, 2009.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.25, 2011.0, 2011.25, 2012.25, 2012.5, 2012.75, 2009.75, 2013.75, 2009.25, 2010.75, 2011.75, 2012.0, 2013.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (93, 97)
train = (0.74058101638524498, 0.80566799657946964)
scores = (0.3979546441144195, 0.37727387529301487)
score = 0.3876142597037172
holdout = (0.4963111444639676, 0.54457249166802)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (81, 88)
train = (0.71975825906915181, 0.78472668291839454)
scores = (0.40839000522593688, 0.38450572472398742)
score = 0.39644786497496215
holdout = (0.4941856076536017, 0.5514485660996055)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 18)
train = (0.71155235944751083, 0.52746180307870394)
scores = (0.40334735153903878, 0.40404447939079652)
score = 0.4036959154649177
holdout = (0.49538020299234775, 0.4494237247536093)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (117, 18)
train = (0.71155235944751083, 0.52746180307870394)
scores = (0.40334735153903878, 0.40404447939079652)
score = 0.4036959154649177
holdout = (0.49538020299234775, 0.4494237247536093)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (99, 80)
train = (0.86003866427609965, 0.82787624243172497)
scores = (0.37936792897573346, 0.37018325322923595)
score = 0.3747755911024847
holdout = (0.5354426464114683, 0.5439229290922775)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 81)
train = (0.81049748301276714, 0.8573054058302142)
scores = (0.3827748253335112, 0.37079019680830344)
score = 0.3767825110709073
holdout = (0.5197478634443913, 0.5698489587947299)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (108, 18)
train = (0.72877123856456782, 0.52746180307870394)
scores = (0.40633053960932486, 0.40404447939079652)
score = 0.40518750950006066
holdout = (0.5055610369554231, 0.44942372475360937)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (108, 18)
train = (0.72877123856456782, 0.52746180307870394)
scores = (0.40633053960932486, 0.40404447939079652)
score = 0.40518750950006066
holdout = (0.5055610369554231, 0.44942372475360937)
>>> t = 500 ===================================================================================================
(pair) len(F.columns) = 83
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 116
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd)
            & [20:15,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[0,10]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [20:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [3:,6:,12:,15:,9:6,15:12,12:6,18:12,12:3,15:6,15:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0]} 
                | Drawup[1, 10:5] 
                | Since{Min & index[0,10,20]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        | FracRec[62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo)
            & index[0,1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd|vp5dd)
            & [5:,15:,15:10,15:5,20:5] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.0, 2009.0, 2013.0, 2013.5, 2014.75, 2014.5, 2009.25, 2010.0, 2011.75, 2012.5, 2013.25, 2014.25}), frozenset({2010.75, 2015.0, 2011.5, 2012.25, 2012.75, 2009.75, 2009.5, 2010.25, 2011.25, 2012.0, 2013.75, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 57)
train = (0.5257380211710565, 1.0084187657779813)
scores = (0.34981009290951293, 0.41122498604852348)
score = 0.38051753947901823
holdout = (0.4064220046965434, 0.5932320775955081)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 144)
train = (0.55890456322445681, 1.5455708315589234)
scores = (0.32424585468205802, 0.39224641172793234)
score = 0.3582461332049952
holdout = (0.41079667945335097, 0.759054298078671)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 140)
train = (0.44178518418879836, 1.0769359337736562)
scores = (0.30127486511102319, 0.40707063198811727)
score = 0.35417274854957026
holdout = (0.3525451831607768, 0.6052857657384328)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 57)
train = (0.5257380211710565, 1.0084187657779813)
scores = (0.34981009290951293, 0.41122498604852348)
score = 0.38051753947901823
holdout = (0.4064220046965434, 0.5932320775955081)
>>> t = 501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 116
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd)
            & [20:15,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[0,10]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [20:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [3:,6:,12:,15:,9:6,15:12,12:6,18:12,12:3,15:6,15:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0]} 
                | Drawup[1, 10:5] 
                | Since{Min & index[0,10,20]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        | FracRec[62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo)
            & index[0,1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd|vp5dd)
            & [5:,15:,15:10,15:5,20:5] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.25, 2012.25, 2009.5, 2013.25, 2014.75, 2014.5, 2009.0, 2010.5, 2011.0, 2012.75, 2013.5, 2014.25}), frozenset({2010.0, 2010.75, 2015.0, 2012.5, 2009.75, 2013.75, 2009.25, 2010.25, 2011.5, 2012.0, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 2)
train = (0.60013348361823915, 0.69484596067011162)
scores = (0.22402075440740438, 0.54497634301362796)
score = 0.38449854871051614
holdout = (0.37696707520951356, 0.54119553371957)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 3)
train = (0.60798752680198209, 0.72496005038040934)
scores = (0.23116371984692288, 0.4964157970048565)
score = 0.3637897584258897
holdout = (0.3861670502097036, 0.5440431210411831)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 102)
train = (0.49540446862820187, 1.0527355072945292)
scores = (0.20770902016231968, 0.57994492960792654)
score = 0.3938269748851231
holdout = (0.32980371876183395, 0.6944231602268509)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (9, 102)
train = (0.49540446862820187, 1.0527355072945292)
scores = (0.20770902016231968, 0.57994492960792654)
score = 0.3938269748851231
holdout = (0.32980371876183395, 0.6944231602268509)
>>> t = 600 ===================================================================================================
(pair) len(F.columns) = 27
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 46
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|dcc)
            & index[ 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo)
            & [6:,12:,15:,18:,15:12,21:18,12:6,12:3,15:6,21:12,15:3,18:3,21:6] 
          }
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doc|daoc)
            & index[0,1,1:2,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.25, 2012.75, 2012.5, 2012.0, 2009.75, 2009.5, 2009.0, 2010.25, 2011.75, 2012.25, 2013.25, 2015.0}), frozenset({2010.5, 2010.75, 2013.5, 2013.75, 2014.5, 2014.25, 2014.0, 2009.25, 2010.0, 2011.5, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 6)
train = (0.62613992370775473, 0.64396713386905113)
scores = (0.38166233494188695, 0.45598607663574975)
score = 0.41882420578881835
holdout = (0.4696639391305747, 0.5033870585577848)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 25)
train = (0.65373795799424472, 0.69712669644847924)
scores = (0.38842902532495438, 0.45423707063455465)
score = 0.4213330479797545
holdout = (0.485643882127718, 0.5294302292802621)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 7)
train = (0.58503005601937297, 0.55579234621618312)
scores = (0.35483579334936682, 0.44280726564051159)
score = 0.3988215294949392
holdout = (0.4395978462352153, 0.46392969020908)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (22, 25)
train = (0.65373795799424472, 0.69712669644847924)
scores = (0.38842902532495438, 0.45423707063455465)
score = 0.4213330479797545
holdout = (0.485643882127718, 0.5294302292802621)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 10)
train = (0.67248827756276075, 0.68659433419362181)
scores = (0.38283945160144989, 0.46863514136741524)
score = 0.4257372964844326
holdout = (0.49073303568279153, 0.5272376186429024)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 9)
train = (0.76480191465123448, 0.7875226242292398)
scores = (0.39037720360941858, 0.4713652513545839)
score = 0.43087122748200124
holdout = (0.5306940872633441, 0.5661979317965061)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 7)
train = (0.60194580920470653, 0.55824976242621982)
scores = (0.36200684212792988, 0.44270051588143483)
score = 0.40235367900468233
holdout = (0.4506911261409669, 0.4649527535412992)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (14, 9)
train = (0.76480191465123448, 0.7875226242292398)
scores = (0.39037720360941858, 0.4713652513545839)
score = 0.43087122748200124
holdout = (0.5306940872633441, 0.5661979317965061)
>>> t = 601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 46
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|dcc)
            & index[ 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo)
            & [6:,12:,15:,18:,15:12,21:18,12:6,12:3,15:6,21:12,15:3,18:3,21:6] 
          }
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doc|daoc)
            & index[0,1,1:2,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.75, 2011.0, 2012.0, 2009.75, 2013.0, 2013.25, 2009.0, 2010.25, 2011.25, 2012.5, 2013.75, 2014.75}), frozenset({2015.0, 2011.75, 2012.75, 2009.25, 2014.25, 2014.0, 2009.5, 2010.5, 2011.5, 2012.25, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 101)
train = (0.65485345513661475, 0.76371071924544931)
scores = (0.35326268111588899, 0.36635768126619211)
score = 0.3598101811910406
holdout = (0.466263495659558, 0.4969948740993874)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (307, 110)
train = (0.81527058090047733, 0.83898215779429186)
scores = (0.36495215895687061, 0.36531952983723631)
score = 0.3651358443970535
holdout = (0.5379189904072466, 0.5491878533753449)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 198)
train = (0.54293068321166227, 0.71295943787936555)
scores = (0.36049279999961126, 0.36237633261223196)
score = 0.36143456630592163
holdout = (0.42297804987076454, 0.47429309539111575)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (307, 110)
train = (0.81527058090047733, 0.83898215779429186)
scores = (0.36495215895687061, 0.36531952983723631)
score = 0.3651358443970535
holdout = (0.5379189904072466, 0.5491878533753449)
>>> t = 700 ===================================================================================================
(pair) len(F.columns) = 124
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.25, 2009.25, 2013.25, 2013.0, 2009.5, 2010.25, 2011.75, 2009.75, 2013.75, 2014.0, 2015.0}), frozenset({2010.5, 2011.5, 2012.5, 2012.75, 2014.5, 2014.25, 2009.0, 2010.0, 2011.0, 2012.0, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (82, 47)
train = (1.2145583063525178, 0.78312674230078372)
scores = (0.53639778785090664, 0.41805368052097192)
score = 0.4772257341859393
holdout = (0.7101092995351327, 0.5613406743256196)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (74, 243)
train = (1.1381045170386583, 0.97256913223332997)
scores = (0.49607272728167173, 0.42159164869806648)
score = 0.45883218798986913
holdout = (0.6880166473009878, 0.6003597431279776)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 112)
train = (0.96287368653382621, 0.81273079482064969)
scores = (0.52588564876912514, 0.40502873086744035)
score = 0.46545718981828277
holdout = (0.6314739815886069, 0.5618403812733421)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (82, 47)
train = (1.2145583063525178, 0.78312674230078372)
scores = (0.53639778785090664, 0.41805368052097192)
score = 0.4772257341859393
holdout = (0.7101092995351327, 0.5613406743256196)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 41)
train = (1.2689240665964634, 0.84260375405775079)
scores = (0.52904313098523137, 0.42095466204030874)
score = 0.47499889651277005
holdout = (0.7215156668346379, 0.582920213236449)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 190)
train = (1.1479545001673503, 1.0829558308342659)
scores = (0.50663966475035038, 0.38326760801502319)
score = 0.4449536363826868
holdout = (0.6911600443103948, 0.626299613864405)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 89)
train = (1.0325033401653596, 0.82187801341605893)
scores = (0.52841217299946008, 0.40153105734256384)
score = 0.46497161517101193
holdout = (0.6570901063959101, 0.561437023428507)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (60, 41)
train = (1.2689240665964634, 0.84260375405775079)
scores = (0.52904313098523137, 0.42095466204030874)
score = 0.47499889651277005
holdout = (0.7215156668346379, 0.582920213236449)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (82, 43)
train = (1.4433543534123467, 0.87407041016160714)
scores = (0.54214462872102354, 0.41870285181902789)
score = 0.4804237402700257
holdout = (0.776855648782479, 0.5917699802274901)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (75, 150)
train = (1.5313821726146051, 1.1580678660722878)
scores = (0.50882746376517252, 0.39644637055458731)
score = 0.4526369171598799
holdout = (0.7685791374823907, 0.6465951973756766)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 149)
train = (1.0504224570686478, 0.99812347326874606)
scores = (0.5232747763196578, 0.40036280012166314)
score = 0.46181878822066047
holdout = (0.6599912659291264, 0.6161627094924321)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (82, 43)
train = (1.4433543534123467, 0.87407041016160714)
scores = (0.54214462872102354, 0.41870285181902789)
score = 0.4804237402700257
holdout = (0.776855648782479, 0.5917699802274901)
>>> t = 701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2009.75, 2009.25, 2013.75, 2014.25, 2014.75, 2014.0, 2009.5, 2010.5, 2011.0, 2009.0, 2013.0, 2014.5, 2015.0}), frozenset({2010.0, 2010.75, 2011.5, 2011.75, 2012.25, 2012.5, 2012.75, 2013.5, 2010.25, 2011.25, 2012.0, 2013.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 4)
train = (0.72574499887600163, 0.70840164965530983)
scores = (0.49715989546867989, 0.3499609713315307)
score = 0.4235604334001053
holdout = (0.56271316772179, 0.46950068104604487)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 64)
train = (0.60972441624903784, 1.3089395244355224)
scores = (0.5033210147522077, 0.34978643850310343)
score = 0.42655372662765556
holdout = (0.498210335298087, 0.6463761497999)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 5)
train = (0.48720103147906091, 0.60783195276129665)
scores = (0.50400894285232845, 0.35546246856849034)
score = 0.4297357057104094
holdout = (0.4643373393287949, 0.4401774174400596)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (15, 5)
train = (0.48720103147906091, 0.60783195276129665)
scores = (0.50400894285232845, 0.35546246856849034)
score = 0.4297357057104094
holdout = (0.4643373393287949, 0.4401774174400596)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 304)
train = (0.73538309608923558, 1.7063756090441284)
scores = (0.50633366141587277, 0.399763181124002)
score = 0.4530484212699374
holdout = (0.5669983947592726, 0.7437296027645603)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (23, 190)
train = (0.72043427484460976, 1.9150919272690212)
scores = (0.49365581842043477, 0.36495308782789482)
score = 0.42930445312416476
holdout = (0.5321522548274823, 0.7794594071186942)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 5)
train = (0.48720103147906085, 0.60783195276129665)
scores = (0.50400894285232856, 0.35546246856849045)
score = 0.42973570571040953
holdout = (0.4643373393287949, 0.44017741744005984)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (24, 304)
train = (0.73538309608923558, 1.7063756090441284)
scores = (0.50633366141587277, 0.399763181124002)
score = 0.4530484212699374
holdout = (0.5669983947592726, 0.7437296027645603)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (182, 307)
train = (1.0255751855136457, 1.8108868649796597)
scores = (0.52312763256964978, 0.40238629899455325)
score = 0.4627569657821015
holdout = (0.6552313233857522, 0.7680122533228914)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 50)
train = (0.84531441960459808, 1.6161704441523812)
scores = (0.49181953686668406, 0.33987127255103894)
score = 0.4158454047088615
holdout = (0.5841597052281449, 0.7227382798598802)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 5)
train = (0.4872010314790608, 0.60783195276129665)
scores = (0.50400894285232867, 0.35546246856849034)
score = 0.42973570571040953
holdout = (0.4643373393287949, 0.4401774174400596)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (182, 307)
train = (1.0255751855136457, 1.8108868649796597)
scores = (0.52312763256964978, 0.40238629899455325)
score = 0.4627569657821015
holdout = (0.6552313233857522, 0.7680122533228914)
>>> t = 702 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 262
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo)
            & [10:,10:5,15:10,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:] 
                | Since{Min & index[10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,10:5,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        | FracRec[21:] 
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.25, 2009.0, 2009.5, 2013.0, 2014.0, 2009.25, 2010.0, 2011.5, 2012.75, 2013.5, 2014.75}), frozenset({2010.5, 2015.0, 2011.75, 2012.5, 2013.75, 2014.25, 2009.75, 2010.25, 2011.0, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (278, 267)
train = (0.97632149374616195, 1.4939058860000156)
scores = (0.42188240773884172, 0.51345677853930782)
score = 0.46766959313907475
holdout = (0.6113839083434085, 0.7749340320452003)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (170, 28)
train = (0.92580064480885005, 1.042976092824534)
scores = (0.40458996233281763, 0.45744534239665419)
score = 0.4310176523647359
holdout = (0.574521638608452, 0.6232994424318392)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (273, 156)
train = (1.0431352561330487, 1.0710767326418751)
scores = (0.41739223135845988, 0.51024888387818668)
score = 0.4638205576183233
holdout = (0.6366037277073133, 0.6538314825154096)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (278, 267)
train = (0.97632149374616195, 1.4939058860000156)
scores = (0.42188240773884172, 0.51345677853930782)
score = 0.46766959313907475
holdout = (0.6113839083434085, 0.7749340320452003)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (250, 237)
train = (1.0557980305875834, 1.6057386985288347)
scores = (0.41837352728281185, 0.52525345730393158)
score = 0.4718134922933717
holdout = (0.6368755461944745, 0.8022128563541301)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (277, 278)
train = (1.1947717053175679, 1.9548775781240306)
scores = (0.44673409031715233, 0.50588967982158539)
score = 0.47631188506936883
holdout = (0.644343552410472, 0.8307166292823247)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (413, 201)
train = (1.236871724789951, 1.2699804719077565)
scores = (0.4382256220266747, 0.51151778731532094)
score = 0.4748717046709978
holdout = (0.6991938760714012, 0.7087057997697613)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (277, 278)
train = (1.1947717053175679, 1.9548775781240306)
scores = (0.44673409031715233, 0.50588967982158539)
score = 0.47631188506936883
holdout = (0.644343552410472, 0.8307166292823247)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (192, 76)
train = (1.097106191476088, 1.2872926498169057)
scores = (0.4020558333591755, 0.51331961178763696)
score = 0.45768772257340623
holdout = (0.6448094293441758, 0.7247837143575726)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (364, 287)
train = (1.4333569638288015, 2.0658370692986296)
scores = (0.45477778262827723, 0.53098459421136013)
score = 0.49288118841981865
holdout = (0.6902797570611429, 0.8346724619698809)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (297, 220)
train = (1.2430045784035517, 1.3636286362413372)
scores = (0.43028382984049213, 0.52069188960079571)
score = 0.4754878597206439
holdout = (0.6961329659280301, 0.7374960603861049)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (364, 287)
train = (1.4333569638288015, 2.0658370692986296)
scores = (0.45477778262827723, 0.53098459421136013)
score = 0.49288118841981865
holdout = (0.6902797570611429, 0.8346724619698809)
>>> t = 800 ===================================================================================================
(pair) len(F.columns) = 119
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2015.25, 2012.5, 2009.0, 2013.25, 2014.5, 2009.75, 2010.0, 2011.0, 2012.25, 2013.5, 2014.0, 2015.0}), frozenset({2010.75, 2011.5, 2011.75, 2012.75, 2009.25, 2013.75, 2014.25, 2009.5, 2010.25, 2011.25, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (66, 74)
train = (0.88616234630387158, 0.90531946506563155)
scores = (0.45123467815380885, 0.57791409891324852)
score = 0.5145743885335287
holdout = (0.5759947742259349, 0.6330896688262525)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 2)
train = (0.69310303169791321, 0.65821060810295318)
scores = (0.42450633598122384, 0.4587330504045426)
score = 0.4416196931928832
holdout = (0.49915033535187364, 0.49995414241652747)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 91)
train = (0.88708311128731088, 1.0394628797816339)
scores = (0.40792632853599642, 0.60993018247952235)
score = 0.5089282555077594
holdout = (0.5531331607310296, 0.67533848501449)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (66, 74)
train = (0.88616234630387158, 0.90531946506563155)
scores = (0.45123467815380885, 0.57791409891324852)
score = 0.5145743885335287
holdout = (0.5759947742259349, 0.6330896688262525)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 77)
train = (0.868330069856734, 1.0638424598170326)
scores = (0.44760170495263146, 0.584326175729456)
score = 0.5159639403410438
holdout = (0.5608603200369103, 0.6856091246545889)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 2)
train = (0.89597785244268746, 0.92598323216807255)
scores = (0.43120687629002485, 0.46504854796926898)
score = 0.4481277121296469
holdout = (0.576920359701093, 0.6021576265580361)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (213, 75)
train = (1.0782864890142811, 1.0512565929520983)
scores = (0.41794561245526146, 0.61991450586614427)
score = 0.5189300591607029
holdout = (0.6179056770318078, 0.6841327248925803)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (213, 75)
train = (1.0782864890142811, 1.0512565929520983)
scores = (0.41794561245526146, 0.61991450586614427)
score = 0.5189300591607029
holdout = (0.6179056770318078, 0.6841327248925803)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 46)
train = (0.89080006238204068, 1.0879415745382417)
scores = (0.45312859900270991, 0.5786066595958278)
score = 0.5158676292992689
holdout = (0.5719220545551524, 0.6860368747778346)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 2)
train = (1.0472946243975225, 1.1006460996268423)
scores = (0.43567651445710526, 0.46631198589141643)
score = 0.45099425017426087
holdout = (0.6232072739279179, 0.6502584686703756)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (157, 91)
train = (1.0191798160291199, 1.1692799234578208)
scores = (0.41644277056492152, 0.61388356495005092)
score = 0.5151631677574862
holdout = (0.5983052598111358, 0.7192384733800973)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (24, 46)
train = (0.89080006238204068, 1.0879415745382417)
scores = (0.45312859900270991, 0.5786066595958278)
score = 0.5158676292992689
holdout = (0.5719220545551524, 0.6860368747778346)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (74, 77)
train = (1.1142297091994176, 1.2705086756482673)
scores = (0.46217694878338111, 0.59665986443641761)
score = 0.5294184066098994
holdout = (0.6509894468880658, 0.738968567682538)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 4)
train = (1.1969164218195887, 1.2191851489357346)
scores = (0.43498743257992489, 0.48316801032835927)
score = 0.45907772145414205
holdout = (0.6670843170080814, 0.6862830823752086)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (195, 105)
train = (1.0871056398879042, 1.222637782600779)
scores = (0.415969837327966, 0.62068005574790552)
score = 0.5183249465379358
holdout = (0.6152062638969458, 0.7410240509861369)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (74, 77)
train = (1.1142297091994176, 1.2705086756482673)
scores = (0.46217694878338111, 0.59665986443641761)
score = 0.5294184066098994
holdout = (0.6509894468880658, 0.738968567682538)
>>> t = 801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.75, 2011.0, 2011.25, 2012.0, 2009.75, 2013.25, 2009.25, 2010.25, 2011.5, 2009.5, 2013.0, 2014.0, 2015.0}), frozenset({2010.5, 2012.5, 2012.75, 2013.75, 2014.5, 2014.25, 2009.0, 2010.0, 2011.75, 2012.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 188)
train = (0.99699438219870862, 1.00517398531205)
scores = (0.59284477064638319, 0.43157733297339601)
score = 0.5122110518098896
holdout = (0.665178257037082, 0.6216468162684586)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 165)
train = (0.73396228319800716, 0.89120381072281674)
scores = (0.4419607723414134, 0.40476984075892614)
score = 0.4233653065501698
holdout = (0.5069967151313804, 0.5711404229774897)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 268)
train = (0.90814753131560433, 1.1060003996909809)
scores = (0.60233709453974749, 0.40693812099046023)
score = 0.5046376077651038
holdout = (0.6382508737446997, 0.6291997569316038)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (62, 188)
train = (0.99699438219870862, 1.00517398531205)
scores = (0.59284477064638319, 0.43157733297339601)
score = 0.5122110518098896
holdout = (0.665178257037082, 0.6216468162684586)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 174)
train = (1.0131281107270276, 1.1464288272255569)
scores = (0.59974630573157961, 0.43392012685803583)
score = 0.5168332162948077
holdout = (0.6637788978898262, 0.6659244799273576)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 157)
train = (0.92844093457370191, 1.0481450604458153)
scores = (0.45952383018041332, 0.416794538542821)
score = 0.43815918436161716
holdout = (0.5920214526677806, 0.6205386454716074)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 193)
train = (1.0372184930934156, 1.1220037915796299)
scores = (0.59717517328102676, 0.41876644409640945)
score = 0.5079708086887181
holdout = (0.6797016308496775, 0.6363656335830825)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (32, 174)
train = (1.0131281107270276, 1.1464288272255569)
scores = (0.59974630573157961, 0.43392012685803583)
score = 0.5168332162948077
holdout = (0.6637788978898262, 0.6659244799273576)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 154)
train = (1.1535784507304934, 1.2152191367857998)
scores = (0.60373205194174739, 0.44050766974080369)
score = 0.5221198608412756
holdout = (0.7034361377343151, 0.6848404857721601)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 17)
train = (1.148919605158554, 1.0227060620924924)
scores = (0.48622409910951692, 0.36402189546328811)
score = 0.4251229972864025
holdout = (0.6682888330039263, 0.6091642187556118)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 200)
train = (1.184850618496355, 1.1552383461795082)
scores = (0.60432452705464279, 0.41993483367726231)
score = 0.5121296803659525
holdout = (0.7220263729619699, 0.6446065024768081)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (35, 154)
train = (1.1535784507304934, 1.2152191367857998)
scores = (0.60373205194174739, 0.44050766974080369)
score = 0.5221198608412756
holdout = (0.7034361377343151, 0.6848404857721601)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 129)
train = (1.2566020633399428, 1.2649210629518504)
scores = (0.60676701326992144, 0.43404424948103376)
score = 0.5204056313754776
holdout = (0.7322285593308308, 0.6955846592928556)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 20)
train = (1.2832968118963781, 1.1665404512719877)
scores = (0.50277495794662086, 0.37350859462740987)
score = 0.43814177628701534
holdout = (0.7105763685142094, 0.6525322259508611)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 182)
train = (1.0634761982339107, 1.1394730935674309)
scores = (0.6059681571052925, 0.41610906054537483)
score = 0.5110386088253337
holdout = (0.6867082061729742, 0.6358054660311218)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (39, 129)
train = (1.2566020633399428, 1.2649210629518504)
scores = (0.60676701326992144, 0.43404424948103376)
score = 0.5204056313754776
holdout = (0.7322285593308308, 0.6955846592928556)
>>> t = 802 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2010.25, 2015.25, 2011.0, 2012.5, 2009.75, 2009.0, 2010.0, 2011.5, 2012.0, 2013.0, 2014.25, 2015.0}), frozenset({2011.75, 2012.75, 2009.25, 2013.5, 2013.75, 2014.5, 2014.0, 2009.5, 2010.75, 2011.25, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (34, 93)
train = (0.84572584506908655, 1.0233727383686604)
scores = (0.53841955150264464, 0.44147589256331649)
score = 0.48994772203298054
holdout = (0.6040104685164221, 0.6137646026762033)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 117)
train = (0.67465315890540656, 0.97579133178673971)
scores = (0.52483328756029146, 0.42179620329804396)
score = 0.47331474542916774
holdout = (0.4986660200734807, 0.6021807099028845)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 246)
train = (0.8069289676055249, 1.2257128792150216)
scores = (0.57822912017121109, 0.45209390625211382)
score = 0.5151615132116625
holdout = (0.5950975428884305, 0.6709900609170797)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (51, 246)
train = (0.8069289676055249, 1.2257128792150216)
scores = (0.57822912017121109, 0.45209390625211382)
score = 0.5151615132116625
holdout = (0.5950975428884305, 0.6709900609170797)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 113)
train = (0.91407626070362069, 1.217479934694353)
scores = (0.55451451527965678, 0.45618847885042835)
score = 0.5053514970650426
holdout = (0.6329893680252267, 0.6771333349252061)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 62)
train = (0.80143688269619795, 1.0466156719798994)
scores = (0.51084133530507958, 0.42127552495673815)
score = 0.46605843013090886
holdout = (0.536865479074797, 0.6296703683146504)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 266)
train = (1.0355392638263166, 1.3213334308202049)
scores = (0.58593291875147979, 0.4634133439771953)
score = 0.5246731313643376
holdout = (0.6690561546390817, 0.7006605780793691)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 266)
train = (1.0355392638263166, 1.3213334308202049)
scores = (0.58593291875147979, 0.4634133439771953)
score = 0.5246731313643376
holdout = (0.6690561546390817, 0.7006605780793691)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 71)
train = (0.96278385297635749, 1.1660112364205455)
scores = (0.55870968822679257, 0.45674972597259472)
score = 0.5077297070996937
holdout = (0.6475497095909298, 0.6610452906266487)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 57)
train = (0.99744347945677525, 1.2459298355606709)
scores = (0.51760241346550806, 0.43356846404457794)
score = 0.475585438755043
holdout = (0.5982881524051358, 0.6856709005830758)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 147)
train = (0.84377574695065005, 1.1158223968625496)
scores = (0.57800637737157767, 0.45221505685875518)
score = 0.5151107171151664
holdout = (0.6108033578803456, 0.638251331805264)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (52, 147)
train = (0.84377574695065005, 1.1158223968625496)
scores = (0.57800637737157767, 0.45221505685875518)
score = 0.5151107171151664
holdout = (0.6108033578803456, 0.638251331805264)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (27, 104)
train = (0.99694524722732181, 1.3794517819335554)
scores = (0.56421413533805598, 0.45964641994139183)
score = 0.5119302776397239
holdout = (0.660279500948464, 0.7129157603556515)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (44, 77)
train = (1.0769791494597942, 1.4280936444491201)
scores = (0.5147923672668191, 0.44027401917440007)
score = 0.4775331932206096
holdout = (0.6262047288396295, 0.7227937591934679)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 259)
train = (0.90777852572214557, 1.3313078176167725)
scores = (0.57881302830727976, 0.45442251126976552)
score = 0.5166177697885226
holdout = (0.6301926300935324, 0.6967067972074459)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (65, 259)
train = (0.90777852572214557, 1.3313078176167725)
scores = (0.57881302830727976, 0.45442251126976552)
score = 0.5166177697885226
holdout = (0.6301926300935324, 0.6967067972074459)
>>> t = 803 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 190
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[0,1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [3:,6:,12:,15:,15:12,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[5,10,20]} 
                | Since{Min & index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [60:] 
      }
    | 
        Time{ short}
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|doo|dcc|doc|daoc|vp1dd)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [12:9,9:3,18:12,21:15,12:3,18:9,21:12,15:3,18:6,21:9,21:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:])} 
            & (
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Drawup[1:,20:10] 
                | Since{Min&index[5]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2012.0, 2013.75, 2013.5, 2014.0, 2009.75, 2010.0, 2011.75, 2012.5, 2013.25, 2014.75, 2015.0}), frozenset({2010.75, 2011.25, 2012.75, 2009.0, 2009.25, 2014.25, 2009.5, 2010.5, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 11)
train = (1.2462241659106348, 0.75934364886043459)
scores = (0.42315254351429032, 0.57673589768795042)
score = 0.49994422060112037
holdout = (0.6480138369351001, 0.5792598820816952)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (114, 1)
train = (1.7118408058259111, 0.63982806876079146)
scores = (0.39773774260156541, 0.35940544592516382)
score = 0.3785715942633646
holdout = (0.745748656515354, 0.4552434024046258)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 35)
train = (0.61569945480549637, 0.78354292016387483)
scores = (0.34692806979795837, 0.54427466797248625)
score = 0.4456013688852223
holdout = (0.43076078084503105, 0.566556012913499)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (90, 11)
train = (1.2462241659106348, 0.75934364886043459)
scores = (0.42315254351429032, 0.57673589768795042)
score = 0.49994422060112037
holdout = (0.6480138369351001, 0.5792598820816952)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (113, 11)
train = (1.5388560592924425, 0.84231620053009826)
scores = (0.43885840304575974, 0.59837547777651479)
score = 0.5186169404111373
holdout = (0.725422965483903, 0.6198125103810025)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (78, 17)
train = (1.8438566844797548, 0.71986210913345516)
scores = (0.41662214233198136, 0.54040362140200893)
score = 0.47851288186699514
holdout = (0.7891155652364281, 0.4966590706052854)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 37)
train = (0.61569945480549615, 0.80696549159919884)
scores = (0.34692806979795843, 0.5429184683445053)
score = 0.44492326907123186
holdout = (0.430760780845031, 0.5767291403664371)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (113, 11)
train = (1.5388560592924425, 0.84231620053009826)
scores = (0.43885840304575974, 0.59837547777651479)
score = 0.5186169404111373
holdout = (0.725422965483903, 0.6198125103810025)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 11)
train = (1.6865422300125723, 0.87393656450401647)
scores = (0.44905712736979492, 0.60523831083542523)
score = 0.52714771910261
holdout = (0.753755809568899, 0.634557287216089)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (71, 15)
train = (1.9407242167777816, 0.83968714662063493)
scores = (0.40332647027796303, 0.55074130216527617)
score = 0.4770338862216196
holdout = (0.79330976601991, 0.5508058545250708)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 64)
train = (0.61569945480549637, 0.87592371557948878)
scores = (0.34692806979795837, 0.54835173708113261)
score = 0.4476399034395455
holdout = (0.430760780845031, 0.5987226435989189)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (115, 11)
train = (1.6865422300125723, 0.87393656450401647)
scores = (0.44905712736979492, 0.60523831083542523)
score = 0.52714771910261
holdout = (0.753755809568899, 0.634557287216089)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (109, 11)
train = (1.7147557953477719, 0.87703231531009207)
scores = (0.4427451705080897, 0.60456474636853863)
score = 0.5236549584383141
holdout = (0.7530060501340158, 0.6350471085992636)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 14)
train = (2.1205879302737496, 0.95676061471477014)
scores = (0.41839710653176337, 0.54288411019896732)
score = 0.4806406083653654
holdout = (0.8068045330851777, 0.5922573830795901)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 64)
train = (0.61569945480549615, 0.89407501606343665)
scores = (0.34692806979795837, 0.54981875001378844)
score = 0.4483734099058734
holdout = (0.4307607808450311, 0.6051591379951414)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (109, 11)
train = (1.7147557953477719, 0.87703231531009207)
scores = (0.4427451705080897, 0.60456474636853863)
score = 0.5236549584383141
holdout = (0.7530060501340158, 0.6350471085992636)
>>> t = 900 ===================================================================================================
(pair) len(F.columns) = 32
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 38
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd)
            & [3:,6:,9:,15:,6:3,12:6,            15:9,18:12,12:3,15:6,18:9,18:6] 
          }
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd)
            & [3:,15:,18:,18:12,12:3,15:6,18:9,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[10]} 
                | Drawup[20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.25, 2012.25, 2012.75, 2014.5, 2014.0, 2009.25, 2010.75, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}), frozenset({2010.5, 2011.75, 2009.0, 2009.75, 2013.25, 2013.5, 2009.5, 2010.0, 2011.5, 2012.5, 2013.0, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 5)
train = (0.4687160369669317, 0.39846684795267634)
scores = (0.26569942287544157, 0.20782173355437708)
score = 0.2367605782149093
holdout = (0.33503643048241377, 0.2677211302007707)
>>> t = 901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 38
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd)
            & [3:,6:,9:,15:,6:3,12:6,            15:9,18:12,12:3,15:6,18:9,18:6] 
          }
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd)
            & [3:,15:,18:,18:12,12:3,15:6,18:9,15:3,18:6,18:3,21:3] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[10]} 
                | Drawup[20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.5, 2012.25, 2009.25, 2009.0, 2013.0, 2013.75, 2009.5, 2010.25, 2011.75, 2012.75, 2013.25, 2014.75, 2015.0}), frozenset({2010.5, 2010.75, 2011.25, 2012.5, 2014.25, 2014.0, 2009.75, 2010.0, 2011.0, 2012.0, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 27)
train = (0.43311162742099013, 0.38976234945632432)
scores = (0.23234078834459163, 0.29671876570828193)
score = 0.26452977702643676
holdout = (0.29906316762509694, 0.31131320176517124)
>>> t = 1000 ===================================================================================================
(pair) len(F.columns) = 95
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.25, 2011.0, 2012.5, 2009.25, 2009.0, 2013.5, 2013.75, 2009.75, 2011.5, 2012.0, 2013.25, 2014.0, 2015.25}), frozenset({2010.25, 2010.5, 2010.75, 2012.75, 2014.5, 2014.25, 2009.5, 2010.0, 2011.75, 2012.25, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (27, 169)
train = (0.7869243321659759, 1.1411359821696676)
scores = (0.39591878395081487, 0.4941594475944826)
score = 0.44503911577264876
holdout = (0.54049176742174, 0.6421345540193787)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (338, 293)
train = (1.0117927528918347, 1.7224156982966545)
scores = (0.49191129544263834, 0.519575869089834)
score = 0.5057435822662362
holdout = (0.6081889855483038, 0.7986845824453823)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (387, 395)
train = (1.1074522006287311, 1.168365173897095)
scores = (0.47611132958919761, 0.47001426865793472)
score = 0.4730627991235662
holdout = (0.6868452847586993, 0.6471881657231738)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (338, 293)
train = (1.0117927528918347, 1.7224156982966545)
scores = (0.49191129544263834, 0.519575869089834)
score = 0.5057435822662362
holdout = (0.6081889855483038, 0.7986845824453823)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (133, 282)
train = (0.94579456587080968, 1.5078775938166062)
scores = (0.46108969201688438, 0.52091460773030995)
score = 0.49100214987359714
holdout = (0.6251819554270325, 0.7476872676296866)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (279, 669)
train = (1.1468117463825658, 2.2431765383620141)
scores = (0.50870839398295942, 0.54358298230299806)
score = 0.5261456881429787
holdout = (0.6465116467155971, 0.8571722538623562)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (335, 509)
train = (1.1900039432544967, 1.3881646042392337)
scores = (0.47516636099265852, 0.48789718159858719)
score = 0.48153177129562286
holdout = (0.7076856119042374, 0.7138369049347632)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (279, 669)
train = (1.1468117463825658, 2.2431765383620141)
scores = (0.50870839398295942, 0.54358298230299806)
score = 0.5261456881429787
holdout = (0.6465116467155971, 0.8571722538623562)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (229, 262)
train = (1.0943563576599677, 1.5790689348476137)
scores = (0.47115315592563739, 0.51975728445971658)
score = 0.49545522019267696
holdout = (0.6702751178096755, 0.7588315113320895)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (234, 382)
train = (1.2128534036205714, 2.2593079474156403)
scores = (0.51688383787559289, 0.53809519831700903)
score = 0.527489518096301
holdout = (0.6581494102217033, 0.8488265885343144)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (356, 265)
train = (1.2953311216453105, 1.139130984599692)
scores = (0.48454042403667469, 0.47872334102668307)
score = 0.4816318825316789
holdout = (0.7360956445405712, 0.6454048371803675)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (234, 382)
train = (1.2128534036205714, 2.2593079474156403)
scores = (0.51688383787559289, 0.53809519831700903)
score = 0.527489518096301
holdout = (0.6581494102217033, 0.8488265885343144)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 303)
train = (1.0696487811933053, 1.7281979153843574)
scores = (0.46001594734566148, 0.52493086386808985)
score = 0.4924734056068757
holdout = (0.66480291571159, 0.7873739970601981)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (300, 195)
train = (1.35974662542049, 2.1827641795306221)
scores = (0.52556368415325494, 0.52103552895957705)
score = 0.5232996065564159
holdout = (0.6888562317414619, 0.8461804262147338)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (338, 337)
train = (1.3136860913844775, 1.2564986693972628)
scores = (0.47417488398174978, 0.48024746711010341)
score = 0.4772111755459266
holdout = (0.7386536137603096, 0.6781748125186706)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (300, 195)
train = (1.35974662542049, 2.1827641795306221)
scores = (0.52556368415325494, 0.52103552895957705)
score = 0.5232996065564159
holdout = (0.6888562317414619, 0.8461804262147338)
>>> t = 1001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.0, 2011.5, 2011.75, 2012.0, 2009.25, 2014.75, 2009.5, 2015.25, 2011.25, 2012.5, 2013.5, 2014.0, 2015.0}), frozenset({2010.0, 2010.5, 2010.75, 2012.75, 2009.75, 2013.25, 2013.75, 2014.25, 2009.0, 2010.25, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (133, 223)
train = (1.0309147912632244, 0.91938382440773037)
scores = (0.48725267684900059, 0.49805851586915573)
score = 0.4926555963590782
holdout = (0.6300507940981996, 0.6278627192335977)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (130, 156)
train = (1.0179150419712371, 0.82038490012172416)
scores = (0.45069101419489849, 0.47629414830605665)
score = 0.46349258125047754
holdout = (0.6295602472569116, 0.5702497113613567)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (409, 295)
train = (1.2852852110665356, 0.93175450718137021)
scores = (0.50651360422729352, 0.48082892860314208)
score = 0.4936712664152178
holdout = (0.7187303649335587, 0.6143485718142548)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (409, 295)
train = (1.2852852110665356, 0.93175450718137021)
scores = (0.50651360422729352, 0.48082892860314208)
score = 0.4936712664152178
holdout = (0.7187303649335587, 0.6143485718142548)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (134, 168)
train = (1.1377376371903822, 0.97844821523537828)
scores = (0.49551161629985663, 0.49628595468495279)
score = 0.49589878549240474
holdout = (0.6657506053338801, 0.6457578382532901)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (140, 75)
train = (1.2190631576925473, 0.89676555659835455)
scores = (0.46082532164873186, 0.46722555907753599)
score = 0.4640254403631339
holdout = (0.6803778514407434, 0.5978851329916538)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (337, 257)
train = (1.3220214288911343, 0.97940759178148429)
scores = (0.50388975395438318, 0.47544841705341695)
score = 0.4896690855039001
holdout = (0.7239526172804348, 0.6277687797602648)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (134, 168)
train = (1.1377376371903822, 0.97844821523537828)
scores = (0.49551161629985663, 0.49628595468495279)
score = 0.49589878549240474
holdout = (0.6657506053338801, 0.6457578382532901)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (225, 190)
train = (1.3188460288562422, 1.0488566996228834)
scores = (0.5032914921095919, 0.49561898164140977)
score = 0.49945523687550086
holdout = (0.7166198479355754, 0.6714182438008713)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (154, 109)
train = (1.398030727343939, 1.0293473346098199)
scores = (0.46335617348605734, 0.47035490184665296)
score = 0.4668555376663551
holdout = (0.7128151920029346, 0.63388512116245)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (303, 347)
train = (1.3370390140565367, 1.1102876963051007)
scores = (0.50627365051339379, 0.47863959632142694)
score = 0.49245662341741037
holdout = (0.7265138006795372, 0.6699867207270483)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (225, 190)
train = (1.3188460288562422, 1.0488566996228834)
scores = (0.5032914921095919, 0.49561898164140977)
score = 0.49945523687550086
holdout = (0.7166198479355754, 0.6714182438008713)
>>> t = 1002 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2011.0, 2011.25, 2013.5, 2014.25, 2014.5, 2009.25, 2010.75, 2011.75, 2012.25, 2013.75, 2014.75}), frozenset({2015.0, 2012.5, 2012.75, 2009.0, 2009.75, 2013.25, 2009.5, 2010.25, 2011.5, 2012.0, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (292, 149)
train = (1.237840136202105, 0.89865321834910483)
scores = (0.47878331663732149, 0.52386087534776504)
score = 0.5013220959925433
holdout = (0.6920804774666554, 0.6135832820276249)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (226, 107)
train = (1.2075240511811824, 0.79889235312188722)
scores = (0.44325782619012338, 0.5083560301072465)
score = 0.47580692814868497
holdout = (0.6812098367817598, 0.5555574258414742)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (434, 226)
train = (1.2460149351700502, 0.93650876869284605)
scores = (0.45473034148233715, 0.48426068912477643)
score = 0.4694955153035568
holdout = (0.6831717831075138, 0.614201470150246)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (292, 149)
train = (1.237840136202105, 0.89865321834910483)
scores = (0.47878331663732149, 0.52386087534776504)
score = 0.5013220959925433
holdout = (0.6920804774666554, 0.6135832820276249)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (304, 131)
train = (1.3840303943722587, 0.95630661713116438)
scores = (0.47554095203298369, 0.51967056970278369)
score = 0.49760576086788366
holdout = (0.7305868353932481, 0.6325185231848207)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (188, 1)
train = (1.3640114987464071, 0.83051484737825587)
scores = (0.45982170623516189, 0.41069361182008191)
score = 0.4352576590276219
holdout = (0.7237959876249472, 0.5435242140590031)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (398, 172)
train = (1.3511848190245994, 0.96134212162697275)
scores = (0.45534305515239315, 0.48636304225876176)
score = 0.4708530487055774
holdout = (0.7063400014853258, 0.6224423185234956)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (304, 131)
train = (1.3840303943722587, 0.95630661713116438)
scores = (0.47554095203298369, 0.51967056970278369)
score = 0.49760576086788366
holdout = (0.7305868353932481, 0.6325185231848207)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (261, 136)
train = (1.4570188455382496, 1.0202214972547918)
scores = (0.48309522561168994, 0.52738668307154768)
score = 0.5052409543416188
holdout = (0.744305102279085, 0.6549573540221738)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (96, 1)
train = (1.3496379912296335, 0.9373350111869424)
scores = (0.46741607101161259, 0.39952996429595633)
score = 0.43347301765378443
holdout = (0.7237312444429511, 0.5770669857220365)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (370, 234)
train = (1.3711120235743373, 1.0823803675463739)
scores = (0.45245727817064563, 0.49145281209170882)
score = 0.47195504513117725
holdout = (0.7089344995374189, 0.663304350563193)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (261, 136)
train = (1.4570188455382496, 1.0202214972547918)
scores = (0.48309522561168994, 0.52738668307154768)
score = 0.5052409543416188
holdout = (0.744305102279085, 0.6549573540221738)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (243, 281)
train = (1.5060037123158279, 1.1749006202228343)
scores = (0.48047392307634706, 0.51888432206189528)
score = 0.49967912256912117
holdout = (0.7552784590793223, 0.6919915802937145)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 143)
train = (1.5287239592348973, 1.2017291120899536)
scores = (0.46835738933327936, 0.50298475708618939)
score = 0.48567107320973435
holdout = (0.7573553257065485, 0.66285169782055)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (605, 278)
train = (1.6174321103820497, 1.151808086152226)
scores = (0.46269069873503438, 0.50146393204015272)
score = 0.4820773153875936
holdout = (0.7744998507206177, 0.6905749637830069)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (243, 281)
train = (1.5060037123158279, 1.1749006202228343)
scores = (0.48047392307634706, 0.51888432206189528)
score = 0.49967912256912117
holdout = (0.7552784590793223, 0.6919915802937145)
>>> t = 1003 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [5:,15:,10:5,15:10,15:5,20:10] 
          }
        | ( 
            <>Return{(aoo[1:]|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,5,10,20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [10:,10:5,15:10,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2015.0, 2011.5, 2011.0, 2012.25, 2009.0, 2013.0, 2009.25, 2010.75, 2011.25, 2009.75, 2013.5, 2015.25}), frozenset({2010.5, 2012.5, 2012.75, 2013.75, 2014.5, 2014.25, 2014.0, 2009.5, 2010.25, 2011.75, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 312)
train = (0.79150740152921928, 1.3193891910327231)
scores = (0.42936646054618782, 0.48482051999443038)
score = 0.4570934902703091
holdout = (0.527202167428517, 0.7449202087722829)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 182)
train = (0.59244910297125453, 1.4176730742444339)
scores = (0.38056358235250271, 0.48922116238013802)
score = 0.4348923723663204
holdout = (0.43068826800017856, 0.7722818430904992)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 189)
train = (0.38917882306217383, 0.96132646226508434)
scores = (0.39432456016100448, 0.45428131100291047)
score = 0.4243029355819575
holdout = (0.37653183224065595, 0.6303462360097699)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (126, 312)
train = (0.79150740152921928, 1.3193891910327231)
scores = (0.42936646054618782, 0.48482051999443038)
score = 0.4570934902703091
holdout = (0.527202167428517, 0.7449202087722829)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (241, 427)
train = (0.92642556201232895, 1.5071408745651622)
scores = (0.45841434643694451, 0.50573198652567652)
score = 0.4820731664813105
holdout = (0.5818499028882973, 0.792971477929168)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 82)
train = (0.70743509540891536, 1.3785888584371413)
scores = (0.42679013311362646, 0.48200469260281981)
score = 0.4543974128582231
holdout = (0.4856530545528472, 0.7607642645508024)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 279)
train = (0.38917882306217388, 1.1574409621668855)
scores = (0.39432456016100442, 0.45933184836183227)
score = 0.4268282042614183
holdout = (0.37653183224065584, 0.6931407880743522)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (241, 427)
train = (0.92642556201232895, 1.5071408745651622)
scores = (0.45841434643694451, 0.50573198652567652)
score = 0.4820731664813105
holdout = (0.5818499028882973, 0.792971477929168)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 99)
train = (0.9021776277209026, 1.1664503526890464)
scores = (0.43466414615240695, 0.47878948821162975)
score = 0.45672681718201835
holdout = (0.5712292395441253, 0.7023095267517966)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 198)
train = (0.83980278599255742, 1.7072743485286361)
scores = (0.45105307721615706, 0.49571594594407942)
score = 0.47338451158011824
holdout = (0.5427827824789526, 0.8052204311050893)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 218)
train = (0.38917882306217388, 1.1042538225140277)
scores = (0.39432456016100448, 0.45341680680290397)
score = 0.4238706834819542
holdout = (0.37653183224065595, 0.6731977869560857)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 198)
train = (0.83980278599255742, 1.7072743485286361)
scores = (0.45105307721615706, 0.49571594594407942)
score = 0.47338451158011824
holdout = (0.5427827824789526, 0.8052204311050893)
>>> t = 1100 ===================================================================================================
(pair) len(F.columns) = 71
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 120
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,9:,15:,9:3,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP| Volatility)
        & [10:,60:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd|Volatility)
            & [6:,9:,12:,15:,18:,15:12,18:15,9:3,21:15,15:3,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:, 10:5,20:10] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.75, 2011.5, 2012.75, 2009.5, 2013.5, 2013.25, 2013.75, 2009.0, 2010.75, 2011.0, 2012.5, 2013.0, 2015.25}), frozenset({2010.0, 2010.5, 2012.25, 2009.75, 2014.5, 2014.25, 2014.0, 2009.25, 2010.25, 2011.25, 2012.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (96, 123)
train = (0.87895217046154905, 1.0232703640153433)
scores = (0.35137752646571324, 0.3743388820362209)
score = 0.36285820425096704
holdout = (0.5560734947569893, 0.596085020272437)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 134)
train = (0.66926181583956279, 0.99915866978149781)
scores = (0.26350810550485548, 0.31484139851709214)
score = 0.2891747520109738
holdout = (0.4041807167506005, 0.575121196120584)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 6)
train = (0.92193040087418232, 0.57570215905763067)
scores = (0.36499658392296036, 0.40237165575954598)
score = 0.38368411984125317
holdout = (0.5483868740662011, 0.41987868423511776)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (117, 6)
train = (0.92193040087418232, 0.57570215905763067)
scores = (0.36499658392296036, 0.40237165575954598)
score = 0.38368411984125317
holdout = (0.5483868740662011, 0.41987868423511776)
>>> t = 1101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 120
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,9:,15:,9:3,12:6,            15:9,21:15,12:3,18:9,21:12,15:3,18:6,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP| Volatility)
        & [10:,60:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd|vp5dd|Volatility)
            & [6:,9:,12:,15:,18:,15:12,18:15,9:3,21:15,15:3,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:, 10:5,20:10] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | 
        | FracRec[250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.25, 2012.5, 2012.25, 2009.25, 2013.75, 2013.25, 2009.0, 2010.0, 2011.5, 2012.75, 2013.5, 2014.5, 2015.25}), frozenset({2010.5, 2010.75, 2011.75, 2009.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 61)
train = (0.70592382448388247, 1.1635696323596847)
scores = (0.28979172464631614, 0.52466751059406413)
score = 0.40722961762019017
holdout = (0.46334288990405603, 0.6390642567129945)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 45)
train = (0.80498192010120495, 1.2602445973651981)
scores = (0.27349023406811135, 0.45755219726482049)
score = 0.3655212156664659
holdout = (0.49016173972306476, 0.6634230175439351)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 69)
train = (0.95657157776426571, 1.1185748353302809)
scores = (0.32485311587279919, 0.46360100379531088)
score = 0.39422705983405504
holdout = (0.5493411845653914, 0.5753787250427493)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (2, 61)
train = (0.70592382448388247, 1.1635696323596847)
scores = (0.28979172464631614, 0.52466751059406413)
score = 0.40722961762019017
holdout = (0.46334288990405603, 0.6390642567129945)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 81)
train = (0.73665327403798642, 1.3252222831413472)
scores = (0.29476429022859763, 0.52946223469445208)
score = 0.41211326246152485
holdout = (0.47663465690336404, 0.6976540393470088)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 42)
train = (0.80663801131254842, 1.4207612428774248)
scores = (0.28727128543448449, 0.45558003094187483)
score = 0.37142565818817963
holdout = (0.4933982890427938, 0.703901656454699)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (158, 99)
train = (0.98571933333659445, 1.2867227015714726)
scores = (0.31697391174275918, 0.47831843574091143)
score = 0.3976461737418353
holdout = (0.5526613507961792, 0.6367004221793782)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (2, 81)
train = (0.73665327403798642, 1.3252222831413472)
scores = (0.29476429022859763, 0.52946223469445208)
score = 0.41211326246152485
holdout = (0.47663465690336404, 0.6976540393470088)
>>> t = 1200 ===================================================================================================
(pair) len(F.columns) = 70
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.75, 2012.0, 2009.5, 2014.0, 2009.25, 2010.25, 2011.5, 2012.75, 2013.25, 2014.75, 2015.0}), frozenset({2010.75, 2012.5, 2009.75, 2013.5, 2013.75, 2014.25, 2009.0, 2010.0, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (133, 73)
train = (1.1096814625151186, 0.79150995948809366)
scores = (0.43361310896589583, 0.47618801659523252)
score = 0.4549005627805642
holdout = (0.6473651989376554, 0.5578486575350682)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 2)
train = (1.0238257060952309, 0.69248596241216898)
scores = (0.39699464627234082, 0.3193946058667399)
score = 0.35819462606954033
holdout = (0.6050327896574007, 0.4526902842416057)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (322, 533)
train = (1.2839470398929249, 1.1506056665518856)
scores = (0.46080630090798047, 0.53134530668829183)
score = 0.49607580379813615
holdout = (0.6889451840927203, 0.6969337518419627)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (322, 533)
train = (1.2839470398929249, 1.1506056665518856)
scores = (0.46080630090798047, 0.53134530668829183)
score = 0.49607580379813615
holdout = (0.6889451840927203, 0.6969337518419627)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (178, 380)
train = (1.2760213584003037, 1.1090472589381077)
scores = (0.45674296381157964, 0.53350549261520508)
score = 0.49512422821339236
holdout = (0.7015800075867131, 0.6722272319582275)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 41)
train = (1.1956777278468405, 0.76851636970393045)
scores = (0.41400263919347569, 0.43540830002074049)
score = 0.4247054696071081
holdout = (0.6551881411984852, 0.526729893735374)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (112, 518)
train = (1.0808531720941343, 1.2906689605755814)
scores = (0.43151268504921308, 0.53427911803065553)
score = 0.48289590153993434
holdout = (0.6117818912203425, 0.7336761077374226)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (178, 380)
train = (1.2760213584003037, 1.1090472589381077)
scores = (0.45674296381157964, 0.53350549261520508)
score = 0.49512422821339236
holdout = (0.7015800075867131, 0.6722272319582275)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (120, 59)
train = (1.3097042474665719, 1.0140377947109582)
scores = (0.4557395350326704, 0.50436791461994335)
score = 0.48005372482630687
holdout = (0.7038448030785099, 0.6467663773806529)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 5)
train = (1.3230464617043665, 0.89789308954110514)
scores = (0.41953509176271719, 0.40203475087863427)
score = 0.41078492132067573
holdout = (0.6784191835389473, 0.5737690522654633)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (757, 218)
train = (1.5939080776834749, 1.134479719141174)
scores = (0.49885563065738975, 0.49801892440181017)
score = 0.4984372775296
holdout = (0.7601421448601121, 0.67470735020817)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (757, 218)
train = (1.5939080776834749, 1.134479719141174)
scores = (0.49885563065738975, 0.49801892440181017)
score = 0.4984372775296
holdout = (0.7601421448601121, 0.67470735020817)
>>> t = 1201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.5, 2012.0, 2012.5, 2009.75, 2009.5, 2009.0, 2010.25, 2011.25, 2012.75, 2013.5, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2011.75, 2013.25, 2013.75, 2014.5, 2014.0, 2009.25, 2010.0, 2011.0, 2012.25, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (300, 100)
train = (1.0013661636277926, 1.1501022843881512)
scores = (0.42828769798274258, 0.52189989616946875)
score = 0.47509379707610566
holdout = (0.6078161943383892, 0.6787690635215852)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 11)
train = (0.76410882625356136, 0.68663350335494533)
scores = (0.39296320708486926, 0.44326822979154096)
score = 0.4181157184382051
holdout = (0.506740972977161, 0.5116796276421125)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 227)
train = (0.9704434935578331, 1.3186839796306362)
scores = (0.42213474733470829, 0.55022593536144515)
score = 0.48618034134807675
holdout = (0.5818324386835279, 0.7463145284978528)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (155, 227)
train = (0.9704434935578331, 1.3186839796306362)
scores = (0.42213474733470829, 0.55022593536144515)
score = 0.48618034134807675
holdout = (0.5818324386835279, 0.7463145284978528)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 96)
train = (0.78669935172236094, 1.3655040805146186)
scores = (0.39664348244382802, 0.53347968926612643)
score = 0.46506158585497726
holdout = (0.5265038812111805, 0.7420284539379363)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 45)
train = (0.81089763479605559, 1.0260556128034781)
scores = (0.41234335753125378, 0.43925609432445478)
score = 0.4257997259278543
holdout = (0.5335195027179134, 0.6279959200963736)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 170)
train = (0.95105849210687254, 1.3145543980256076)
scores = (0.42576273352135402, 0.54541990214565406)
score = 0.48559131783350407
holdout = (0.5760532665448821, 0.7447322848336367)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (104, 170)
train = (0.95105849210687254, 1.3145543980256076)
scores = (0.42576273352135402, 0.54541990214565406)
score = 0.48559131783350407
holdout = (0.5760532665448821, 0.7447322848336367)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (135, 62)
train = (1.1288195763791475, 1.3616154813614325)
scores = (0.41437019648725026, 0.53299435756430735)
score = 0.4736822770257788
holdout = (0.6383989407965046, 0.7481295088494867)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 33)
train = (0.8918949376000157, 1.1893399679850878)
scores = (0.42257205119678698, 0.42281240802111952)
score = 0.42269222960895325
holdout = (0.5599340343743323, 0.6727395059563306)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 256)
train = (0.96404167361722592, 1.5062294752469685)
scores = (0.42124964214414029, 0.56466288904275597)
score = 0.49295626559344813
holdout = (0.5771857346584464, 0.7985434203174081)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 256)
train = (0.96404167361722592, 1.5062294752469685)
scores = (0.42124964214414029, 0.56466288904275597)
score = 0.49295626559344813
holdout = (0.5771857346584464, 0.7985434203174081)
>>> t = 1202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 216
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [10:,15:,10:5,20:15,15:5,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0,5]} 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,10:] 
                | Since{Min & index[10,20]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2015.0, 2011.0, 2012.25, 2013.25, 2013.5, 2014.5, 2009.5, 2010.25, 2011.25, 2009.25, 2013.0, 2014.0, 2015.25}), frozenset({2010.0, 2010.75, 2011.75, 2012.5, 2012.75, 2009.75, 2014.25, 2009.0, 2010.5, 2011.5, 2012.0, 2013.75, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 162)
train = (0.90884327541646737, 1.0048306914246412)
scores = (0.38112456370287695, 0.47724421627122415)
score = 0.42918438998705055
holdout = (0.5435008974129063, 0.6316242115156505)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 5)
train = (0.63141927030203726, 0.70369817268948709)
scores = (0.38558432071945692, 0.37525224672142365)
score = 0.3804182837204403
holdout = (0.4712939217561276, 0.49682819415115986)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (427, 2)
train = (1.3015208420000719, 0.49707922703083035)
scores = (0.43928952446769137, 0.39687157404433754)
score = 0.41808054925601446
holdout = (0.6828614463228176, 0.411324416638867)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (83, 162)
train = (0.90884327541646737, 1.0048306914246412)
scores = (0.38112456370287695, 0.47724421627122415)
score = 0.42918438998705055
holdout = (0.5435008974129063, 0.6316242115156505)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 87)
train = (1.0227643268776159, 1.0726165143456889)
scores = (0.38919026069678686, 0.48762920322560721)
score = 0.43840973196119704
holdout = (0.5854013044080089, 0.6600707947904562)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 25)
train = (0.74330642383716761, 0.81126856566163108)
scores = (0.38597893347902645, 0.43646508995453681)
score = 0.41122201171678163
holdout = (0.5100655213732654, 0.5478876937173731)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (103, 262)
train = (0.97416098503891013, 1.1914364869051879)
scores = (0.3997592289917119, 0.50520235945267333)
score = 0.4524807942221926
holdout = (0.5570826775552141, 0.6986296215820474)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (103, 262)
train = (0.97416098503891013, 1.1914364869051879)
scores = (0.3997592289917119, 0.50520235945267333)
score = 0.4524807942221926
holdout = (0.5570826775552141, 0.6986296215820474)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 85)
train = (1.0508025886817398, 1.1330745885895215)
scores = (0.39231901568487093, 0.50532676833156842)
score = 0.4488228920082197
holdout = (0.5893905298867395, 0.6840576663415577)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 15)
train = (0.85780237140602411, 0.91494613215125098)
scores = (0.3755398088429579, 0.46794713116778958)
score = 0.4217434700053737
holdout = (0.5449519063386494, 0.5896120535926037)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (525, 249)
train = (1.5470839416159261, 1.2393599837103695)
scores = (0.46363126342761346, 0.51200067121468928)
score = 0.4878159673211514
holdout = (0.7496830764790671, 0.7178351678693095)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (525, 249)
train = (1.5470839416159261, 1.2393599837103695)
scores = (0.46363126342761346, 0.51200067121468928)
score = 0.4878159673211514
holdout = (0.7496830764790671, 0.7178351678693095)
>>> t = 1300 ===================================================================================================
(pair) len(F.columns) = 202
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2010.75, 2011.5, 2012.75, 2009.25, 2014.75, 2009.0, 2010.25, 2011.25, 2009.75, 2013.5, 2014.5, 2015.0}), frozenset({2011.75, 2012.25, 2012.5, 2013.25, 2013.75, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (209, 323)
train = (0.95097058600423079, 1.5255498726967915)
scores = (0.35689740213990317, 0.59558697843235298)
score = 0.4762421902861281
holdout = (0.5722339985374887, 0.8388595112579416)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (629, 231)
train = (1.1754809520510003, 1.4898458552716936)
scores = (0.42376889854432798, 0.54834055223176215)
score = 0.48605472538804506
holdout = (0.6268538947508948, 0.8017684015557257)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (248, 246)
train = (0.9870349292659073, 1.3997015933049917)
scores = (0.35592101246065555, 0.55861206171053368)
score = 0.4572665370855946
holdout = (0.5682023099989066, 0.7958742312489705)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (629, 231)
train = (1.1754809520510003, 1.4898458552716936)
scores = (0.42376889854432798, 0.54834055223176215)
score = 0.48605472538804506
holdout = (0.6268538947508948, 0.8017684015557257)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (743, 145)
train = (1.2285487882457338, 1.5196726085214241)
scores = (0.42845704582154887, 0.59080086968373402)
score = 0.5096289577526414
holdout = (0.6623362228325336, 0.841582464771005)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (570, 87)
train = (1.3591309593718666, 1.4843860887385099)
scores = (0.42836418706627571, 0.54225589696094878)
score = 0.4853100420136123
holdout = (0.667437906813249, 0.8052102586307529)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (773, 347)
train = (1.3053187111456397, 1.5769974047044681)
scores = (0.41839250396676342, 0.57334065770840226)
score = 0.49586658083758284
holdout = (0.6910516681715331, 0.8430391435185676)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (743, 145)
train = (1.2285487882457338, 1.5196726085214241)
scores = (0.42845704582154887, 0.59080086968373402)
score = 0.5096289577526414
holdout = (0.6623362228325336, 0.841582464771005)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (698, 221)
train = (1.2995412761288931, 1.6548405852231052)
scores = (0.41591476654421883, 0.57307178132631764)
score = 0.4944932739352682
holdout = (0.6772813021621605, 0.8545410771395977)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (380, 122)
train = (1.3919033109307277, 1.7072670174298419)
scores = (0.41947347056146644, 0.55036924325148961)
score = 0.48492135690647803
holdout = (0.6730262983238504, 0.8312314422221364)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (817, 324)
train = (1.4047532748169003, 1.5991620600868106)
scores = (0.43284635071347355, 0.57020086064622877)
score = 0.5015236056798511
holdout = (0.7173309465039955, 0.8427132912342398)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (817, 324)
train = (1.4047532748169003, 1.5991620600868106)
scores = (0.43284635071347355, 0.57020086064622877)
score = 0.5015236056798511
holdout = (0.7173309465039955, 0.8427132912342398)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (259, 135)
train = (1.1955874107615319, 1.6308866260317956)
scores = (0.38204739834546109, 0.57212499728532962)
score = 0.47708619781539535
holdout = (0.6538314630847264, 0.8536284568860575)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (636, 87)
train = (1.6856069239802864, 1.7667367543169357)
scores = (0.45587866254024406, 0.56113961735496132)
score = 0.5085091399476027
holdout = (0.724464746453974, 0.8431149361522553)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (913, 463)
train = (1.4709800756424978, 1.706936639265427)
scores = (0.44309254851751534, 0.59286586296635335)
score = 0.5179792057419343
holdout = (0.7307497853494771, 0.8680038308864559)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (913, 463)
train = (1.4709800756424978, 1.706936639265427)
scores = (0.44309254851751534, 0.59286586296635335)
score = 0.5179792057419343
holdout = (0.7307497853494771, 0.8680038308864559)
>>> t = 1301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2011.25, 2009.25, 2013.0, 2014.75, 2014.0, 2009.5, 2010.0, 2011.5, 2009.75, 2013.75, 2014.25, 2015.0}), frozenset({2010.25, 2011.75, 2012.25, 2012.5, 2012.75, 2013.5, 2009.0, 2010.75, 2011.0, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 134)
train = (1.2697158002193984, 0.93416479542908493)
scores = (0.54044256993315698, 0.40385108868873598)
score = 0.4721468293109465
holdout = (0.7363340601765296, 0.6006069185778026)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (119, 257)
train = (1.050526487744371, 0.97203238665186031)
scores = (0.5036140451658625, 0.40347877294105655)
score = 0.45354640905345955
holdout = (0.6634044052810892, 0.5896107049803399)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (327, 286)
train = (1.3817896823099358, 1.0795983704938661)
scores = (0.55556533822591081, 0.44031025648480548)
score = 0.49793779735535815
holdout = (0.7732370352603931, 0.6518682681453966)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (327, 286)
train = (1.3817896823099358, 1.0795983704938661)
scores = (0.55556533822591081, 0.44031025648480548)
score = 0.49793779735535815
holdout = (0.7732370352603931, 0.6518682681453966)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (195, 168)
train = (1.4303831218411096, 1.0599130599927176)
scores = (0.54446476007400713, 0.41577916166228429)
score = 0.48012196086814574
holdout = (0.7772722640002011, 0.6426959552179079)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 187)
train = (1.2787439091550252, 1.0745404174163906)
scores = (0.50726643587373743, 0.42400521539590919)
score = 0.4656358256348233
holdout = (0.7147146484316963, 0.6235316365725193)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (301, 287)
train = (1.4882759797315082, 1.1800519055638281)
scores = (0.55535334295051253, 0.43736715729716108)
score = 0.4963602501238368
holdout = (0.8026814803657253, 0.6805115405138882)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (301, 287)
train = (1.4882759797315082, 1.1800519055638281)
scores = (0.55535334295051253, 0.43736715729716108)
score = 0.4963602501238368
holdout = (0.8026814803657253, 0.6805115405138882)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (161, 168)
train = (1.4947984725652763, 1.1381452780859769)
scores = (0.55455020979167735, 0.4378674889003763)
score = 0.4962088493460268
holdout = (0.7925077316049135, 0.6746276840264883)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 77)
train = (1.4146385241811128, 1.0709452007212068)
scores = (0.52331771098233981, 0.40368313457742921)
score = 0.4635004227798845
holdout = (0.7475550747771739, 0.6274937277375224)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (388, 306)
train = (1.6039838220894993, 1.2801509986417194)
scores = (0.561038210806871, 0.43922174393233554)
score = 0.5001299773696033
holdout = (0.8238834332931241, 0.7096757274359706)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (388, 306)
train = (1.6039838220894993, 1.2801509986417194)
scores = (0.561038210806871, 0.43922174393233554)
score = 0.5001299773696033
holdout = (0.8238834332931241, 0.7096757274359706)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (173, 253)
train = (1.5875109015048969, 1.2686292811751896)
scores = (0.56989996006191679, 0.44819049007355949)
score = 0.5090452250677382
holdout = (0.8147238155305833, 0.7081098121215248)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 67)
train = (1.5833271232266581, 1.180649174482802)
scores = (0.53012395461930684, 0.40925046811891774)
score = 0.4696872113691123
holdout = (0.7736470722702125, 0.6602051352105601)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (279, 303)
train = (1.530502350476858, 1.3049485538288841)
scores = (0.554212558290891, 0.43920523372702169)
score = 0.49670889600895635
holdout = (0.8041337615283721, 0.7123412177941286)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (173, 253)
train = (1.5875109015048969, 1.2686292811751896)
scores = (0.56989996006191679, 0.44819049007355949)
score = 0.5090452250677382
holdout = (0.8147238155305833, 0.7081098121215248)
>>> t = 1302 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2011.0, 2009.25, 2014.25, 2014.75, 2014.5, 2009.75, 2010.0, 2011.25, 2012.5, 2013.5, 2014.0, 2015.0}), frozenset({2010.75, 2011.75, 2012.25, 2012.75, 2009.0, 2013.25, 2013.75, 2009.5, 2010.25, 2011.5, 2012.0, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (639, 94)
train = (1.3482706820895667, 0.87269052558968252)
scores = (0.52833745212326055, 0.48652474341529894)
score = 0.5074310977692797
holdout = (0.7550444110467489, 0.6135983577791443)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (260, 350)
train = (1.1710542164447864, 1.0604683334828366)
scores = (0.47735205719338897, 0.46452707652676245)
score = 0.4709395668600757
holdout = (0.6928002006563577, 0.6257249904103338)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (813, 302)
train = (1.4518132141964599, 1.1068799320777198)
scores = (0.55828378862703787, 0.5451665423373766)
score = 0.5517251654822073
holdout = (0.792507423849552, 0.709279312940117)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (813, 302)
train = (1.4518132141964599, 1.1068799320777198)
scores = (0.55828378862703787, 0.5451665423373766)
score = 0.5517251654822073
holdout = (0.792507423849552, 0.709279312940117)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (967, 265)
train = (1.6836075073285088, 1.1077536933595009)
scores = (0.56894474619395385, 0.50996813289689324)
score = 0.5394564395454235
holdout = (0.8264221147676403, 0.6826477764056217)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (462, 247)
train = (1.653286185181216, 1.188236756244436)
scores = (0.5178298554881029, 0.48223312412424019)
score = 0.5000314898061715
holdout = (0.7848493686649703, 0.6577101827930715)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (679, 286)
train = (1.5583747506794672, 1.1871779224423173)
scores = (0.55705007112092031, 0.56264221146334692)
score = 0.5598461412921336
holdout = (0.8135977118704646, 0.741718748313803)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (679, 286)
train = (1.5583747506794672, 1.1871779224423173)
scores = (0.55705007112092031, 0.56264221146334692)
score = 0.5598461412921336
holdout = (0.8135977118704646, 0.741718748313803)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (829, 153)
train = (1.7567689160635409, 1.1223230548906415)
scores = (0.55781847589695566, 0.51480775941980594)
score = 0.5363131176583809
holdout = (0.8357887372995437, 0.6966438605060405)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (366, 144)
train = (1.7728213620590543, 1.1950661006712329)
scores = (0.51474247505046045, 0.47870916765989674)
score = 0.4967258213551786
holdout = (0.800086853397978, 0.660871409059319)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (448, 302)
train = (1.4794714067439556, 1.2676511709249927)
scores = (0.55372326053475041, 0.56994673116538008)
score = 0.5618349958500652
holdout = (0.792875332656474, 0.7629959966973703)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (448, 302)
train = (1.4794714067439556, 1.2676511709249927)
scores = (0.55372326053475041, 0.56994673116538008)
score = 0.5618349958500652
holdout = (0.792875332656474, 0.7629959966973703)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (499, 142)
train = (1.7511304586367649, 1.1971873303278382)
scores = (0.55100933220712389, 0.52806359825980798)
score = 0.539536465233466
holdout = (0.8351811732718657, 0.7226578536012953)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (162, 191)
train = (1.6355312853636399, 1.3838337079598169)
scores = (0.49007242173759402, 0.50072718289172491)
score = 0.49539980231465947
holdout = (0.7847017255609595, 0.6987452225070407)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (683, 294)
train = (1.6422487803676353, 1.2908013057902532)
scores = (0.57567212432644099, 0.56592873821467138)
score = 0.5708004312705561
holdout = (0.8367182918246785, 0.7709568989322695)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (683, 294)
train = (1.6422487803676353, 1.2908013057902532)
scores = (0.57567212432644099, 0.56592873821467138)
score = 0.5708004312705561
holdout = (0.8367182918246785, 0.7709568989322695)
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (829, 153)
train = (1.7567689160635227, 1.1223230548906415)
scores = (0.55781847589699063, 0.51480775941980594)
score = 0.5363131176583983
holdout = (0.8357887372995543, 0.6966438605060409)
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (420, 193)
train = (1.6270846746295324, 1.09552880567233)
scores = (0.49159764438411785, 0.48332042630474836)
score = 0.48745903534443313
holdout = (0.7787324638133123, 0.6393513291140879)
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (448, 302)
train = (1.4794714067439554, 1.2676511709249927)
scores = (0.55372326053475029, 0.56994823573572528)
score = 0.5618357481352378
holdout = (0.7928753326564739, 0.7629965177781105)
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (448, 302)
train = (1.4794714067439554, 1.2676511709249927)
scores = (0.55372326053475029, 0.56994823573572528)
score = 0.5618357481352378
holdout = (0.7928753326564739, 0.7629965177781105)
>>> t = 1303 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2011.0, 2012.75, 2009.75, 2013.75, 2014.25, 2014.75, 2009.0, 2010.5, 2011.25, 2012.25, 2013.0, 2014.5}), frozenset({2010.75, 2015.0, 2011.75, 2012.5, 2009.25, 2013.5, 2009.5, 2010.25, 2011.5, 2012.0, 2013.25, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (531, 70)
train = (1.0855018082278278, 0.92073871489159231)
scores = (0.53776399876774483, 0.54262879810042863)
score = 0.5401963984340867
holdout = (0.6764466120660523, 0.630456491073021)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 48)
train = (0.78182757958388538, 0.86696337248957522)
scores = (0.43799241737653732, 0.5049420123396503)
score = 0.47146721485809384
holdout = (0.558587861066223, 0.6040009451309345)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (717, 228)
train = (1.2130836679558186, 1.1526932052458738)
scores = (0.54635133061280161, 0.5611747045621529)
score = 0.5537630175874773
holdout = (0.7315922651546953, 0.698450745496161)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (717, 228)
train = (1.2130836679558186, 1.1526932052458738)
scores = (0.54635133061280161, 0.5611747045621529)
score = 0.5537630175874773
holdout = (0.7315922651546953, 0.698450745496161)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (263, 62)
train = (1.0866912667429593, 1.0177109767624399)
scores = (0.52334666582300249, 0.5513295957195522)
score = 0.5373381307712773
holdout = (0.6843126789658533, 0.6659357121725299)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (200, 41)
train = (1.0783384187524194, 1.0085372520060663)
scores = (0.48286755905307738, 0.50618328855728378)
score = 0.4945254238051806
holdout = (0.6440756053922777, 0.6550067155938673)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (793, 205)
train = (1.3885264219488713, 1.2382942925149982)
scores = (0.5483225186527193, 0.57094977188562357)
score = 0.5596361452691714
holdout = (0.7778483161360293, 0.7247415205153122)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (793, 205)
train = (1.3885264219488713, 1.2382942925149982)
scores = (0.5483225186527193, 0.57094977188562357)
score = 0.5596361452691714
holdout = (0.7778483161360293, 0.7247415205153122)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (172, 89)
train = (1.0829284559853909, 1.1781002637576712)
scores = (0.52489075116966455, 0.56618283289364779)
score = 0.5455367920316562
holdout = (0.683667657138854, 0.720617639254415)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (706, 39)
train = (1.6677507075732561, 1.1795612084777531)
scores = (0.54524197130151919, 0.50903777079602808)
score = 0.5271398710487736
holdout = (0.7595259296021466, 0.7018876489658062)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (619, 239)
train = (1.4146572671771542, 1.3467708068682067)
scores = (0.5601686357122615, 0.58522519654021232)
score = 0.572696916126237
holdout = (0.787948340981532, 0.7604204142618176)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (619, 239)
train = (1.4146572671771542, 1.3467708068682067)
scores = (0.5601686357122615, 0.58522519654021232)
score = 0.572696916126237
holdout = (0.787948340981532, 0.7604204142618176)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (336, 136)
train = (1.2934887747056716, 1.3679180694796782)
scores = (0.56544606826864841, 0.56745817481911531)
score = 0.5664521215438818
holdout = (0.7459299046893738, 0.7718239542425402)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (304, 83)
train = (1.4767170357983979, 1.3459352916653329)
scores = (0.52443297579490844, 0.50788687805446053)
score = 0.5161599269246845
holdout = (0.732053915118537, 0.7239554493566618)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (640, 208)
train = (1.4611117889739771, 1.3307914122749278)
scores = (0.55177265713260215, 0.58469745473541146)
score = 0.5682350559340068
holdout = (0.7931167308788682, 0.7556625185109258)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (640, 208)
train = (1.4611117889739771, 1.3307914122749278)
scores = (0.55177265713260215, 0.58469745473541146)
score = 0.5682350559340068
holdout = (0.7931167308788682, 0.7556625185109258)
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (172, 89)
train = (1.0829284559853909, 1.178100263757671)
scores = (0.5248925673802054, 0.56618283289364768)
score = 0.5455377001369266
holdout = (0.6836680840604895, 0.720617639254415)
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (173, 41)
train = (1.0601189679821676, 0.96936185979156797)
scores = (0.48232055127988516, 0.51104999057489064)
score = 0.4966852709273879
holdout = (0.6435706253747051, 0.6412720679709095)
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (619, 239)
train = (1.4146572671771542, 1.3467708068682065)
scores = (0.56016744077612368, 0.58522519654021221)
score = 0.572696318658168
holdout = (0.7879479578847788, 0.7604204142618176)
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (619, 239)
train = (1.4146572671771542, 1.3467708068682065)
scores = (0.56016744077612368, 0.58522519654021221)
score = 0.572696318658168
holdout = (0.7879479578847788, 0.7604204142618176)
>>> t = 1304 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 300
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(doc|daoc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,15:,18:12,21:15,12:3,15:6,18:9,21:12,15:3,21:9,18:3,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:,20:10] 
                | Since{Max&index[0,10]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp5dd)
            & [5:,10:,15:,15:5,20:5] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Drawup[1:,10:,20:10] 
                | Since{Min & index[20]} 
              )
            & Since[21:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:,18:,12:9,18:15,9:3,12:6,            15:9,15:6,21:12,15:3,18:6,21:9,18:3] 
          }
      )
    | 
        Time{ short}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2011.25, 2012.25, 2009.25, 2009.5, 2013.25, 2009.0, 2010.75, 2011.0, 2012.75, 2013.5, 2014.75, 2015.25}), frozenset({2010.0, 2011.75, 2012.5, 2013.75, 2014.25, 2014.0, 2009.75, 2010.5, 2011.5, 2012.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (758, 164)
train = (1.1069189249695794, 1.3488965958351469)
scores = (0.46510089219214934, 0.53529750620041383)
score = 0.5001991991962815
holdout = (0.6374279762978238, 0.7728622050742817)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (127, 43)
train = (0.82137689671461023, 0.90222399899239847)
scores = (0.38598377123563055, 0.48302234838631336)
score = 0.4345030598109719
holdout = (0.5299450362432728, 0.6270084313234034)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (318, 197)
train = (1.011284397730392, 1.2881647536758851)
scores = (0.40740167344559741, 0.53496469244929112)
score = 0.47118318294744427
holdout = (0.6128546616258217, 0.7385628517642027)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (758, 164)
train = (1.1069189249695794, 1.3488965958351469)
scores = (0.46510089219214934, 0.53529750620041383)
score = 0.5001991991962815
holdout = (0.6374279762978238, 0.7728622050742817)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (960, 130)
train = (1.2577433355728231, 1.4327177349460725)
scores = (0.50523078243194586, 0.54141447212479799)
score = 0.523322627278372
holdout = (0.6784724748568168, 0.7957318876770217)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (503, 62)
train = (1.3024076180889206, 1.2718131162819115)
scores = (0.49719661998211667, 0.50571424924165831)
score = 0.5014554346118875
holdout = (0.6647932570484163, 0.7413890092579994)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (486, 280)
train = (1.2002238441111293, 1.5505719877937585)
scores = (0.43229881005690346, 0.54270796304682667)
score = 0.4875033865518651
holdout = (0.6795605236182186, 0.7998011085524503)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (960, 130)
train = (1.2577433355728231, 1.4327177349460725)
scores = (0.50523078243194586, 0.54141447212479799)
score = 0.523322627278372
holdout = (0.6784724748568168, 0.7957318876770217)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (385, 125)
train = (1.1776659434557253, 1.520883203519424)
scores = (0.45979249766734126, 0.54565109149037727)
score = 0.5027217945788592
holdout = (0.6659068451556605, 0.8179238157466363)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (636, 115)
train = (1.5685110947576977, 1.6658163128243935)
scores = (0.5166479700832346, 0.53697296580368936)
score = 0.526810467943462
holdout = (0.7160135342873701, 0.8128898865563297)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (767, 278)
train = (1.3875614140436168, 1.5765176232942903)
scores = (0.48529968545534308, 0.55096393487562689)
score = 0.518131810165485
holdout = (0.7323517220187059, 0.8108043642411011)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (636, 115)
train = (1.5685110947576977, 1.6658163128243935)
scores = (0.5166479700832346, 0.53697296580368936)
score = 0.526810467943462
holdout = (0.7160135342873701, 0.8128898865563297)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (461, 140)
train = (1.2747820601475279, 1.6284624800535392)
scores = (0.47617514544797407, 0.56577862492843756)
score = 0.5209768851882058
holdout = (0.6905601177772588, 0.8467398236340985)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 160)
train = (1.1243272036021341, 1.8964362548871174)
scores = (0.37502387837735007, 0.56729686115082856)
score = 0.4711603697640893
holdout = (0.6327517347957825, 0.8214928194003407)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (783, 265)
train = (1.4235049044783317, 1.5657721617295726)
scores = (0.47891260227756238, 0.55771496663574949)
score = 0.5183137844566559
holdout = (0.7385029725845305, 0.8152107185224324)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (461, 140)
train = (1.2747820601475279, 1.6284624800535392)
scores = (0.47617514544797407, 0.56577862492843756)
score = 0.5209768851882058
holdout = (0.6905601177772588, 0.8467398236340985)
>>> t = 1400 ===================================================================================================
(pair) len(F.columns) = 42
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 123
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.5, 2012.5, 2009.25, 2013.75, 2013.25, 2014.0, 2009.75, 2010.25, 2011.0, 2012.0, 2013.0, 2014.75, 2015.0}), frozenset({2010.75, 2011.5, 2011.75, 2012.75, 2009.0, 2014.25, 2009.5, 2010.0, 2011.25, 2012.25, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (134, 193)
train = (0.98829408251720186, 0.91757091171124106)
scores = (0.53420184034886209, 0.36902862707000289)
score = 0.45161523370943246
holdout = (0.6416379437360732, 0.5723384029170369)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (112, 79)
train = (1.0818951984599881, 0.81611782690852142)
scores = (0.52618762240697348, 0.36311641196465033)
score = 0.44465201718581193
holdout = (0.6800735148077918, 0.5492738636384502)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (344, 98)
train = (1.1260024833162772, 0.69015895200208144)
scores = (0.55426201469423209, 0.33770298935534587)
score = 0.44598250202478895
holdout = (0.6867388245377383, 0.47574593016434824)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (134, 193)
train = (0.98829408251720186, 0.91757091171124106)
scores = (0.53420184034886209, 0.36902862707000289)
score = 0.45161523370943246
holdout = (0.6416379437360732, 0.5723384029170369)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (153, 165)
train = (1.1773879157891489, 0.97439879943151186)
scores = (0.53537061322406865, 0.3677378474502519)
score = 0.45155423033716025
holdout = (0.6960829737573697, 0.5912849859778346)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (119, 93)
train = (1.2960151949967156, 0.93885369562851295)
scores = (0.52994444832110765, 0.36282954019924868)
score = 0.44638699426017814
holdout = (0.7376479383606271, 0.5897933064232473)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (257, 55)
train = (1.1268134305483544, 0.63919131338759927)
scores = (0.55126267932679585, 0.33251086020939158)
score = 0.4418867697680937
holdout = (0.6828079802453709, 0.45898982479384814)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (153, 165)
train = (1.1773879157891489, 0.97439879943151186)
scores = (0.53537061322406865, 0.3677378474502519)
score = 0.45155423033716025
holdout = (0.6960829737573697, 0.5912849859778346)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 213)
train = (1.1866391628264712, 1.0776984830725804)
scores = (0.54112472059238459, 0.36307373156241007)
score = 0.45209922607739733
holdout = (0.69881405618978, 0.6226249535104091)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (93, 164)
train = (1.417685285371181, 1.113704130078321)
scores = (0.5385118791541017, 0.37071262774469305)
score = 0.4546122534493974
holdout = (0.7712950815333115, 0.6378956034542885)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (283, 153)
train = (1.2135329961494075, 0.81242576342387274)
scores = (0.54946230790363126, 0.33767848293488745)
score = 0.44357039541925936
holdout = (0.705756859879572, 0.5190417465984571)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (93, 164)
train = (1.417685285371181, 1.113704130078321)
scores = (0.5385118791541017, 0.37071262774469305)
score = 0.4546122534493974
holdout = (0.7712950815333115, 0.6378956034542885)
>>> t = 1401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 123
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.75, 2011.25, 2012.5, 2009.25, 2013.75, 2014.25, 2009.5, 2010.0, 2011.75, 2012.0, 2013.5, 2014.75, 2015.0}), frozenset({2010.5, 2011.5, 2012.75, 2009.75, 2013.25, 2014.0, 2009.0, 2010.25, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (102, 107)
train = (0.98277180634483208, 0.80284525091518422)
scores = (0.51914910760423472, 0.3693332739156156)
score = 0.4442411907599252
holdout = (0.638091735075506, 0.515406263397451)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 52)
train = (0.96714065779830427, 0.74479386259189873)
scores = (0.50762086470596057, 0.3622816454163954)
score = 0.434951255061178
holdout = (0.6320279931283437, 0.5036640422131676)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (122, 82)
train = (0.86549328299049255, 0.63665563031600692)
scores = (0.53719858526068109, 0.34368726284727164)
score = 0.44044292405397634
holdout = (0.6111451999994472, 0.4467593820676692)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (102, 107)
train = (0.98277180634483208, 0.80284525091518422)
scores = (0.51914910760423472, 0.3693332739156156)
score = 0.4442411907599252
holdout = (0.638091735075506, 0.515406263397451)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 109)
train = (0.67884098087862366, 0.88425057853489231)
scores = (0.51193478329945397, 0.37436569848309087)
score = 0.4431502408912724
holdout = (0.54455475570026, 0.544384759216133)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 27)
train = (0.95163894398495774, 0.85616825700503685)
scores = (0.50769040415831923, 0.37246026620225509)
score = 0.4400753351802872
holdout = (0.6279109569088259, 0.5476741675362268)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 47)
train = (0.59060630914393364, 0.5913093534742917)
scores = (0.52463459086692532, 0.33937412463588468)
score = 0.432004357751405
holdout = (0.5220442519890034, 0.43241831373808726)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (9, 109)
train = (0.67884098087862366, 0.88425057853489231)
scores = (0.51193478329945397, 0.37436569848309087)
score = 0.4431502408912724
holdout = (0.54455475570026, 0.544384759216133)
>>> t = 1402 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 123
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd)
            & [9:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,12:3,21:12,18:6,21:6] 
          }
        | ( 
            <>Return{dd} & VP[1:, 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,10]} 
                | Drawup[10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        | Return{mix[1,5,6,7,8,11,12,13,16,18,19]}
        | Return{rr} 
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2011.5, 2011.25, 2012.5, 2009.75, 2013.75, 2014.0, 2014.75, 2009.25, 2011.75, 2012.75, 2013.0, 2014.5, 2015.0}), frozenset({2010.25, 2010.5, 2010.75, 2012.25, 2009.0, 2013.5, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (100, 98)
train = (0.85740702882051267, 0.87338585353366183)
scores = (0.44048853773185487, 0.41917592970256062)
score = 0.42983223371720775
holdout = (0.5588926946857117, 0.5728867836104677)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 54)
train = (0.72029549119849134, 0.8517358243195492)
scores = (0.44742350748044657, 0.43267909880823824)
score = 0.4400513031443424
holdout = (0.5288010504658861, 0.5846422910563934)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (45, 28)
train = (0.55727319634797934, 0.59793424214938684)
scores = (0.42888666099324946, 0.41550396053959254)
score = 0.42219531076642103
holdout = (0.4566060823338952, 0.4796576208571144)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 54)
train = (0.72029549119849134, 0.8517358243195492)
scores = (0.44742350748044657, 0.43267909880823824)
score = 0.4400513031443424
holdout = (0.5288010504658861, 0.5846422910563934)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (86, 70)
train = (0.93404377150105655, 0.89569324730754918)
scores = (0.44805609187892675, 0.41376645453867811)
score = 0.4309112732088024
holdout = (0.5862672278007096, 0.5780295363002484)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 4)
train = (1.0960092776889068, 0.87195727880024176)
scores = (0.46176616446134078, 0.44313450964315243)
score = 0.4524503370522466
holdout = (0.6578912579326835, 0.6060331405179332)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 28)
train = (0.56973710484182349, 0.60162371921390934)
scores = (0.43265062911616037, 0.41651582172793861)
score = 0.4245832254220495
holdout = (0.4624354028640657, 0.4818611865553409)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (56, 4)
train = (1.0960092776889068, 0.87195727880024176)
scores = (0.46176616446134078, 0.44313450964315243)
score = 0.4524503370522466
holdout = (0.6578912579326835, 0.6060331405179332)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 56)
train = (0.93358841178143104, 0.89673549312441092)
scores = (0.44382356699483783, 0.41689815192464685)
score = 0.43036085945974234
holdout = (0.5865610540557291, 0.5786472013771589)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (53, 48)
train = (1.3035897138837822, 1.0676012347020412)
scores = (0.47001936702477998, 0.44222780978365722)
score = 0.4561235884042186
holdout = (0.7200818224136223, 0.6629476202485476)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 28)
train = (0.57625162428271359, 0.60181702470953558)
scores = (0.43425592770155197, 0.41648685507485494)
score = 0.42537139138820346
holdout = (0.4655974425025875, 0.48189768908196123)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (53, 48)
train = (1.3035897138837822, 1.0676012347020412)
scores = (0.47001936702477998, 0.44222780978365722)
score = 0.4561235884042186
holdout = (0.7200818224136223, 0.6629476202485476)
>>> t = 1500 ===================================================================================================
(pair) len(F.columns) = 70
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 103
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc)
            & index[1,2, 0:1,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:] 
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP| Volatility)
        & [10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [9:,12:,18:,12:9,18:15,            15:9,21:15,12:3,21:12,15:3,21:9,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|aoo[10:])} 
            & (
                | Drawdown[1:,20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.75, 2009.0, 2013.5, 2014.75, 2009.5, 2010.5, 2011.0, 2012.5, 2013.25, 2014.5, 2015.25}), frozenset({2011.25, 2012.25, 2012.75, 2009.75, 2013.75, 2014.0, 2009.25, 2010.0, 2011.5, 2012.0, 2013.0, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.68255356496227382, 0.72153144532475766)
scores = (0.27092765072106129, 0.28419958011516472)
score = 0.27756361541811303
holdout = (0.4297864765794305, 0.4171564373205869)
>>> t = 1501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 103
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc)
            & index[1,2, 0:1,0:2] 
          }
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[ 5:] 
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[0,10]} 
              )
            & Since[ 125:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP| Volatility)
        & [10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [9:,12:,18:,12:9,18:15,            15:9,21:15,12:3,21:12,15:3,21:9,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|aoo[10:])} 
            & (
                | Drawdown[1:,20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.5, 2012.0, 2012.25, 2012.5, 2009.75, 2010.5, 2011.75, 2009.25, 2013.0, 2014.75, 2015.25}), frozenset({2011.25, 2009.0, 2013.5, 2013.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.75, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 5)
train = (1.0548435020585005, 0.75824602777168693)
scores = (0.37404119548100417, 0.17919926406380643)
score = 0.2766202297724053
holdout = (0.611932680170656, 0.4151856204886618)
>>> t = 1600 ===================================================================================================
(pair) len(F.columns) = 37
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 42
0
#<>#
    <>~Market & (
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Drawdown[ 10:5,20:10] 
                | Since{Max & index[0,10]} 
                | Drawup[10:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2012.75, 2009.25, 2009.5, 2013.75, 2013.0, 2009.0, 2010.5, 2011.25, 2012.0, 2013.25, 2014.0}), frozenset({2015.0, 2011.5, 2011.75, 2012.5, 2014.5, 2014.25, 2009.75, 2010.0, 2011.0, 2012.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.63919364489181496, 0.67593399562663625)
scores = (-0.043626327644950058, 0.087372214956145083)
score = 0.021872943655597513
holdout = (0.26472336816306824, 0.2553661133252462)
>>> t = 1601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 42
0
#<>#
    <>~Market & (
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Drawdown[ 10:5,20:10] 
                | Since{Max & index[0,10]} 
                | Drawup[10:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2012.75, 2012.25, 2013.25, 2013.0, 2014.0, 2009.25, 2010.5, 2011.25, 2009.0, 2013.75, 2014.75}), frozenset({2015.0, 2011.5, 2011.75, 2012.5, 2009.75, 2014.25, 2009.5, 2010.0, 2011.0, 2012.0, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.63637448336401425, 0.71881283379686856)
scores = (0.031610584228952902, 0.057496471056996963)
score = 0.04455352764297493
holdout = (0.299701130891585, 0.2574041591786738)
>>> t = 1700 ===================================================================================================
(pair) len(F.columns) = 43
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,10:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Drawup[1:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.5, 2011.25, 2011.75, 2012.0, 2012.75, 2014.25, 2014.5, 2014.0, 2010.75, 2011.0, 2012.25, 2013.75, 2014.75}), frozenset({2010.25, 2010.5, 2015.0, 2009.0, 2009.25, 2013.25, 2013.5, 2009.75, 2009.5, 2010.0, 2012.5, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (82, 28)
train = (0.93605457353247956, 0.67811798465455708)
scores = (0.44106297595035909, 0.28069463986653553)
score = 0.3608788079084473
holdout = (0.575297948971405, 0.43140466409078293)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (63, 420)
train = (1.421288772202687, 0.98627626449875383)
scores = (0.42288409348021894, 0.37036008953404176)
score = 0.39662209150713035
holdout = (0.6824288131281592, 0.5666972674108445)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 4)
train = (0.43131313135859939, 0.54887899764195069)
scores = (0.31724414479758933, 0.28747955004243975)
score = 0.30236184742001454
holdout = (0.3624521662101349, 0.3688467783918828)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (63, 420)
train = (1.421288772202687, 0.98627626449875383)
scores = (0.42288409348021894, 0.37036008953404176)
score = 0.39662209150713035
holdout = (0.6824288131281592, 0.5666972674108445)
>>> t = 1701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|acc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,10:,15:10,20:15,15:5,20:10] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Drawup[1:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.0, 2009.0, 2013.5, 2014.75, 2014.0, 2009.75, 2010.0, 2011.75, 2012.75, 2013.75, 2014.5, 2015.0}), frozenset({2010.5, 2010.75, 2011.5, 2012.25, 2012.5, 2009.25, 2013.25, 2009.5, 2010.25, 2011.25, 2012.0, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (288, 81)
train = (0.95492784563734878, 0.68732581453828645)
scores = (0.30815025936394863, 0.47967217660600164)
score = 0.39391121798497514
holdout = (0.547743580816009, 0.5140808776336228)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (912, 98)
train = (1.1747947594542096, 0.7230005100882515)
scores = (0.33776901138776577, 0.40731560825350455)
score = 0.3725423098206352
holdout = (0.6233278588263803, 0.4998429470825011)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (326, 45)
train = (0.90196040925057652, 0.61682347989822306)
scores = (0.30857587584648272, 0.50667216401952575)
score = 0.40762401993300423
holdout = (0.5165708817223585, 0.46436752097039075)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (326, 45)
train = (0.90196040925057652, 0.61682347989822306)
scores = (0.30857587584648272, 0.50667216401952575)
score = 0.40762401993300423
holdout = (0.5165708817223585, 0.46436752097039075)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (448, 69)
train = (1.1213947260541164, 0.77260857865872656)
scores = (0.3308700576675711, 0.48556277227026745)
score = 0.40821641496891925
holdout = (0.6119998447177093, 0.5462870102577607)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (919, 116)
train = (1.381782447391297, 0.92423923482599435)
scores = (0.35577939359153316, 0.40520324407092539)
score = 0.3804913188312293
holdout = (0.6720373966815498, 0.5758076750488836)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (274, 40)
train = (0.93874473182885876, 0.67745654006636469)
scores = (0.31370892942990791, 0.5198417404561525)
score = 0.4167753349430302
holdout = (0.5256053915191768, 0.4936102955063243)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (274, 40)
train = (0.93874473182885876, 0.67745654006636469)
scores = (0.31370892942990791, 0.5198417404561525)
score = 0.4167753349430302
holdout = (0.5256053915191768, 0.4936102955063243)
>>> t = 1800 ===================================================================================================
(pair) len(F.columns) = 29
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2015.0, 2011.25, 2012.75, 2009.75, 2013.5, 2009.0, 2010.75, 2011.75, 2012.5, 2013.0, 2014.5, 2015.25}), frozenset({2010.5, 2011.5, 2012.25, 2009.25, 2013.75, 2014.25, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 3)
train = (0.55399486221685512, 0.44660865357897145)
scores = (0.19834073184012579, 0.10162002585678387)
score = 0.14998037884845483
holdout = (0.3478647110134456, 0.25495298382848647)
>>> t = 1801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 86
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doc)
            & index[1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [10:,15:,15:10,20:10] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[1:, 5:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 125:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2012.0, 2012.5, 2009.25, 2014.25, 2014.5, 2009.5, 2010.0, 2011.25, 2012.75, 2014.75, 2015.25}), frozenset({2010.25, 2011.5, 2009.75, 2013.25, 2013.5, 2013.75, 2009.0, 2010.75, 2011.0, 2012.25, 2013.0, 2014.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (276, 11)
train = (1.0450461477374993, 0.64438358120057926)
scores = (0.19537296737253571, 0.27343016494541728)
score = 0.2344015661589765
holdout = (0.5511907073193478, 0.3965759585081145)
>>> t = 1900 ===================================================================================================
(pair) len(F.columns) = 43
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 88
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,9:,12:,18:,6:3,12:9,18:15,12:6,21:15,18:9,21:12,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2012.25, 2012.5, 2009.75, 2013.75, 2014.75, 2009.0, 2010.0, 2011.75, 2012.0, 2013.0, 2014.25, 2015.25}), frozenset({2010.75, 2010.5, 2011.5, 2009.25, 2013.5, 2014.0, 2009.5, 2010.25, 2011.25, 2012.75, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (90, 338)
train = (0.88480735765090712, 1.3219734781256105)
scores = (0.44615252104463216, 0.40098381041416531)
score = 0.4235681657293987
holdout = (0.6092878947909453, 0.6759247321488409)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (57, 9)
train = (0.71632448146648742, 0.79825210434356997)
scores = (0.46890476917462043, 0.36674104420042886)
score = 0.41782290668752464
holdout = (0.5103400089365644, 0.5194434613604494)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (189, 217)
train = (1.0764989556615343, 0.9702647158918144)
scores = (0.49050328317145381, 0.34421579083658882)
score = 0.4173595370040213
holdout = (0.6756717970062177, 0.5407237940118192)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (90, 338)
train = (0.88480735765090712, 1.3219734781256105)
scores = (0.44615252104463216, 0.40098381041416531)
score = 0.4235681657293987
holdout = (0.6092878947909453, 0.6759247321488409)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (82, 215)
train = (1.0047510097294992, 1.2982695511187963)
scores = (0.45515217611589304, 0.38896002364248478)
score = 0.4220560998791889
holdout = (0.6554139264061016, 0.662818544117934)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 10)
train = (1.0141801687439458, 0.97181200305609916)
scores = (0.47790261386796745, 0.39783524206202536)
score = 0.43786892796499643
holdout = (0.6045438031583786, 0.5975456687138305)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (161, 208)
train = (1.1734656804681405, 1.0337616335495443)
scores = (0.49562580186820226, 0.34660998447519836)
score = 0.42111789317170034
holdout = (0.7015775748265267, 0.5587056255570358)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (150, 10)
train = (1.0141801687439458, 0.97181200305609916)
scores = (0.47790261386796745, 0.39783524206202536)
score = 0.43786892796499643
holdout = (0.6045438031583786, 0.5975456687138305)
>>> t = 1901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 88
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,9:,12:,18:,6:3,12:9,18:15,12:6,21:15,18:9,21:12,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.25, 2009.5, 2013.0, 2013.25, 2014.0, 2009.25, 2010.25, 2011.0, 2012.0, 2013.5, 2014.25, 2015.25}), frozenset({2010.5, 2011.75, 2012.5, 2012.75, 2009.75, 2014.5, 2009.0, 2010.75, 2011.5, 2012.25, 2013.75, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (109, 98)
train = (1.1681430659245091, 0.81840371667777312)
scores = (0.4532139972491715, 0.32857461103321695)
score = 0.3908943041411942
holdout = (0.6846648420787028, 0.5181274096153694)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (91, 32)
train = (1.2182148798109029, 0.72305245497880644)
scores = (0.50305953325766239, 0.40890850093183645)
score = 0.45598401709474945
holdout = (0.723832631723542, 0.4960471159776897)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (215, 212)
train = (1.2559941361904321, 0.92511041931924676)
scores = (0.40326904777037731, 0.34671026304618074)
score = 0.374989655408279
holdout = (0.6679963309470822, 0.5494188308140008)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (91, 32)
train = (1.2182148798109029, 0.72305245497880644)
scores = (0.50305953325766239, 0.40890850093183645)
score = 0.45598401709474945
holdout = (0.723832631723542, 0.4960471159776897)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (236, 83)
train = (1.362612089339901, 0.90828126835190592)
scores = (0.4621961705017919, 0.35132120854951554)
score = 0.40675868952565375
holdout = (0.7512628800540015, 0.5581472574020687)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 14)
train = (1.3103219868615963, 0.80263192470230416)
scores = (0.47215797905027684, 0.44455247493413014)
score = 0.4583552269922035
holdout = (0.7307207847290769, 0.5429903157869482)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 177)
train = (1.2493560987720329, 1.0002246773679346)
scores = (0.39634361762465703, 0.3442312238354891)
score = 0.37028742073007304
holdout = (0.6600004290791891, 0.5697741080777612)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (76, 14)
train = (1.3103219868615963, 0.80263192470230416)
scores = (0.47215797905027684, 0.44455247493413014)
score = 0.4583552269922035
holdout = (0.7307207847290769, 0.5429903157869482)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (164, 26)
train = (1.4133079308221004, 0.85495174005225238)
scores = (0.47007970700602597, 0.34834046079403258)
score = 0.4092100839000293
holdout = (0.762433460779819, 0.5284124526831793)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 81)
train = (1.3228092439881591, 1.0562798377295219)
scores = (0.49362278275737509, 0.44620570250807323)
score = 0.4699142426327242
holdout = (0.732182927394458, 0.6134037306268841)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (79, 174)
train = (1.1247353404973623, 1.0792866205064966)
scores = (0.37948695393888043, 0.34493817872071625)
score = 0.36221256632979837
holdout = (0.6219297432027276, 0.5917434618325998)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (64, 81)
train = (1.3228092439881591, 1.0562798377295219)
scores = (0.49362278275737509, 0.44620570250807323)
score = 0.4699142426327242
holdout = (0.732182927394458, 0.6134037306268841)
>>> t = 1902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 88
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,9:,12:,18:,6:3,12:9,18:15,12:6,21:15,18:9,21:12,21:9,18:3,21:6] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:, 20:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2011.0, 2009.0, 2009.75, 2014.5, 2009.25, 2010.0, 2011.75, 2012.25, 2013.25, 2014.75, 2015.25}), frozenset({2010.75, 2011.5, 2012.5, 2012.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.25, 2011.25, 2012.0, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (245, 140)
train = (0.95507595993377703, 1.2711837063086311)
scores = (0.40287252170498922, 0.43419196028901558)
score = 0.41853224099700237
holdout = (0.5890686281280917, 0.6914625180250842)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 93)
train = (0.82402204102358534, 1.292606180103383)
scores = (0.41319089392320663, 0.43677832263369931)
score = 0.42498460827845297
holdout = (0.5293184595284232, 0.7142836086774015)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 151)
train = (0.84339665575188083, 1.0319387621333753)
scores = (0.35485879299216838, 0.42938402571464895)
score = 0.39212140935340867
holdout = (0.5390771050437666, 0.6040726395422944)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (60, 93)
train = (0.82402204102358534, 1.292606180103383)
scores = (0.41319089392320663, 0.43677832263369931)
score = 0.42498460827845297
holdout = (0.5293184595284232, 0.7142836086774015)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (125, 63)
train = (0.92074844270789191, 1.1395018288486092)
scores = (0.40390693797632443, 0.44624325568482348)
score = 0.425075096830574
holdout = (0.5760779279713261, 0.6629443964419073)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (136, 68)
train = (1.0187375895205406, 1.4163550440396486)
scores = (0.46169139975184004, 0.42728669484681481)
score = 0.4444890472993274
holdout = (0.5888299881158673, 0.7425718261538143)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 151)
train = (0.96134257767204234, 1.1520664332080333)
scores = (0.3832767333757322, 0.43035887659049227)
score = 0.40681780498311226
holdout = (0.5898972127849577, 0.6348141485795658)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (136, 68)
train = (1.0187375895205406, 1.4163550440396486)
scores = (0.46169139975184004, 0.42728669484681481)
score = 0.4444890472993274
holdout = (0.5888299881158673, 0.7425718261538143)
>>> t = 2000 ===================================================================================================
(pair) len(F.columns) = 7
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 17
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [12:,15:,18:,9:6,12:9,15:6,18:9,21:12,15:3,18:6] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2015.0, 2012.25, 2012.0, 2009.5, 2014.75, 2009.0, 2010.0, 2011.5, 2012.5, 2013.75, 2014.5, 2015.25}), frozenset({2010.5, 2011.25, 2011.75, 2009.75, 2013.25, 2013.5, 2014.0, 2009.25, 2010.75, 2011.0, 2012.75, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (279, 192)
train = (0.66513074798320049, 0.67399096400503045)
scores = (0.39612793777927519, 0.34600804789387285)
score = 0.371067992836574
holdout = (0.5134726569213715, 0.45913221870382853)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 56)
train = (0.62803816656156752, 0.72669269458783259)
scores = (0.38546402892404563, 0.32019346053363734)
score = 0.3528287447288415
holdout = (0.4852752462351132, 0.4561616536057496)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (339, 334)
train = (0.58587452272870078, 0.61381275065685725)
scores = (0.40189942930244954, 0.35333651702640539)
score = 0.37761797316442747
holdout = (0.4809397260119817, 0.4426356773279838)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (339, 334)
train = (0.58587452272870078, 0.61381275065685725)
scores = (0.40189942930244954, 0.35333651702640539)
score = 0.37761797316442747
holdout = (0.4809397260119817, 0.4426356773279838)
>>> t = 2001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 17
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [12:,15:,18:,9:6,12:9,15:6,18:9,21:12,15:3,18:6] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2011.75, 2011.5, 2011.25, 2013.5, 2014.5, 2014.75, 2009.0, 2010.5, 2011.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.75, 2012.25, 2012.5, 2012.75, 2009.25, 2009.75, 2013.75, 2009.5, 2010.25, 2012.0, 2013.25, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (282, 28)
train = (0.7272090037709793, 0.49394108712786811)
scores = (0.22867587262739492, 0.44426656860991171)
score = 0.3364712206186533
holdout = (0.4362709109042811, 0.45080475707812495)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 23)
train = (0.62562829921019714, 0.6542103776238225)
scores = (0.21207313142280995, 0.42099597597101346)
score = 0.3165345536969117
holdout = (0.3778094640194963, 0.5118578224536844)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 65)
train = (0.486840738488731, 0.42129101645046679)
scores = (0.16130370717730527, 0.44561036012619548)
score = 0.30345703365175036
holdout = (0.30326584389088, 0.4220290058733803)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (282, 28)
train = (0.7272090037709793, 0.49394108712786811)
scores = (0.22867587262739492, 0.44426656860991171)
score = 0.3364712206186533
holdout = (0.4362709109042811, 0.45080475707812495)
>>> t = 2100 ===================================================================================================
(pair) len(F.columns) = 98
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2012.0, 2012.25, 2009.75, 2013.5, 2014.5, 2009.25, 2010.75, 2011.5, 2009.0, 2013.25, 2014.0, 2015.0}), frozenset({2010.25, 2010.5, 2011.75, 2012.75, 2013.75, 2014.25, 2009.5, 2010.0, 2011.25, 2012.5, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 246)
train = (0.63133299018272193, 1.2725233394196893)
scores = (0.42734014351471178, 0.59094458813578543)
score = 0.5091423658252486
holdout = (0.4672084510500746, 0.7574417487809151)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 206)
train = (0.71976661765771055, 1.5027445130965249)
scores = (0.43645331921101954, 0.55957045472033085)
score = 0.4980118869656752
holdout = (0.5138526698669037, 0.7963683255573689)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (397, 544)
train = (1.0351399910691101, 1.3706872237838632)
scores = (0.5173474933689175, 0.51659362721978563)
score = 0.5169705602943515
holdout = (0.6487248985826042, 0.7384795067350739)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (397, 544)
train = (1.0351399910691101, 1.3706872237838632)
scores = (0.5173474933689175, 0.51659362721978563)
score = 0.5169705602943515
holdout = (0.6487248985826042, 0.7384795067350739)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 299)
train = (0.66132009722073826, 1.5566399039357248)
scores = (0.43884449129723857, 0.60124238522948958)
score = 0.5200434382633641
holdout = (0.4858399669910421, 0.8292888988305377)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 296)
train = (0.78362081639583048, 1.9010749618021778)
scores = (0.43858086954763253, 0.58960930176212889)
score = 0.5140950856548807
holdout = (0.5420449613747351, 0.8705596567792845)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (275, 323)
train = (1.0696793375310532, 1.2185484239407072)
scores = (0.51347110830957932, 0.51121450789239287)
score = 0.5123428081009861
holdout = (0.6537866615503133, 0.7002994373888736)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 299)
train = (0.66132009722073826, 1.5566399039357248)
scores = (0.43884449129723857, 0.60124238522948958)
score = 0.5200434382633641
holdout = (0.4858399669910421, 0.8292888988305377)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 259)
train = (0.69051279644541297, 1.5943188584637324)
scores = (0.44124769755713045, 0.6068208399902264)
score = 0.5240342687736784
holdout = (0.49475286305874216, 0.8405561328145196)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 195)
train = (0.8856700136261868, 2.0044548489779692)
scores = (0.45535621031093954, 0.58444969669863678)
score = 0.5199029535047881
holdout = (0.5942157026784912, 0.8806537506560961)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 407)
train = (1.0684122833969987, 1.3723271884505526)
scores = (0.51160890868018361, 0.52936591852320203)
score = 0.5204874136016928
holdout = (0.6493575125804596, 0.7469071071147704)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 259)
train = (0.69051279644541297, 1.5943188584637324)
scores = (0.44124769755713045, 0.6068208399902264)
score = 0.5240342687736784
holdout = (0.49475286305874216, 0.8405561328145196)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 257)
train = (0.69259310512982419, 1.6840450083330356)
scores = (0.44185663177566314, 0.61797671491696604)
score = 0.5299166733463145
holdout = (0.4967577475881563, 0.8602738405538023)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 313)
train = (0.94789365359306477, 2.3220590389678972)
scores = (0.44896752081443791, 0.5939550470634547)
score = 0.5214612839389463
holdout = (0.6097471756324063, 0.8908646218123234)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (173, 490)
train = (1.0168885016019922, 1.4978818258391482)
scores = (0.50171375471822965, 0.52724924190227285)
score = 0.5144814983102513
holdout = (0.6330375166846608, 0.7760709569207686)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 257)
train = (0.69259310512982419, 1.6840450083330356)
scores = (0.44185663177566314, 0.61797671491696604)
score = 0.5299166733463145
holdout = (0.4967577475881563, 0.8602738405538023)
>>> t = 2101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.0, 2011.25, 2009.25, 2013.5, 2014.0, 2009.0, 2010.25, 2011.75, 2012.0, 2013.25, 2014.5, 2015.0}), frozenset({2010.5, 2010.75, 2012.5, 2012.75, 2009.75, 2013.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.25, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (371, 251)
train = (0.94745953236805325, 1.3752855101373702)
scores = (0.41882591883812526, 0.55708590876638775)
score = 0.4879559138022565
holdout = (0.5818106445235256, 0.7791354985376039)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (263, 1)
train = (0.92204752183892735, 0.75410655350137601)
scores = (0.42735965587444763, 0.46581917072813112)
score = 0.4465894133012894
holdout = (0.561867968770578, 0.5282842389902584)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (306, 393)
train = (1.0325870997981592, 1.2841896826959158)
scores = (0.39501068712957327, 0.51162496582197248)
score = 0.4533178264757729
holdout = (0.5967869992928244, 0.7304691950568586)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (371, 251)
train = (0.94745953236805325, 1.3752855101373702)
scores = (0.41882591883812526, 0.55708590876638775)
score = 0.4879559138022565
holdout = (0.5818106445235256, 0.7791354985376039)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (124, 299)
train = (0.93729763105357877, 1.6741523537801166)
scores = (0.40153949733706462, 0.56234283248963723)
score = 0.48194116491335093
holdout = (0.5788465858767142, 0.8479690489046134)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 103)
train = (0.81236950870840663, 1.6193887412093624)
scores = (0.24629618719794694, 0.51945594046303478)
score = 0.3828760638304909
holdout = (0.4695839958104272, 0.8057588291321838)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (258, 360)
train = (1.0732475259525072, 1.3475491567429929)
scores = (0.39015866110406422, 0.51351348786115336)
score = 0.45183607448260876
holdout = (0.6052601370002465, 0.7501489601905297)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (124, 299)
train = (0.93729763105357877, 1.6741523537801166)
scores = (0.40153949733706462, 0.56234283248963723)
score = 0.48194116491335093
holdout = (0.5788465858767142, 0.8479690489046134)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (105, 324)
train = (0.98304917046784168, 1.8345914302560302)
scores = (0.41499960328551477, 0.57976064463841404)
score = 0.4973801239619644
holdout = (0.5992205188667361, 0.8797094585697012)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 142)
train = (1.0327698347349139, 1.9449606955962384)
scores = (0.42510445669544195, 0.53473644332307324)
score = 0.4799204500092576
holdout = (0.5991200780840458, 0.852487754701981)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (389, 344)
train = (1.2221503208298152, 1.4029605680172503)
scores = (0.39949842049646855, 0.51983714751216392)
score = 0.45966778400431624
holdout = (0.6502431416795705, 0.7694614244168342)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (105, 324)
train = (0.98304917046784168, 1.8345914302560302)
scores = (0.41499960328551477, 0.57976064463841404)
score = 0.4973801239619644
holdout = (0.5992205188667361, 0.8797094585697012)
>>> t = 2102 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2011.25, 2012.0, 2014.25, 2014.75, 2009.5, 2010.0, 2011.0, 2012.75, 2013.5, 2014.0, 2015.25}), frozenset({2011.5, 2012.5, 2009.25, 2009.75, 2013.25, 2013.75, 2009.0, 2010.5, 2011.75, 2012.25, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (209, 75)
train = (1.1799997079235516, 0.77551762677300873)
scores = (0.55184480395131208, 0.50257749697263887)
score = 0.5272111504619754
holdout = (0.7161383558827756, 0.5527554821582458)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (468, 199)
train = (1.5572894865226126, 0.79379450417122521)
scores = (0.55410227911278764, 0.54944764372533561)
score = 0.5517749614190617
holdout = (0.7918751149560184, 0.5294850489435673)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (326, 288)
train = (1.1238185849627, 0.89654590786254285)
scores = (0.54726571469666219, 0.52905762217368169)
score = 0.538161668435172
holdout = (0.6886739620827201, 0.6050179356668606)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (468, 199)
train = (1.5572894865226126, 0.79379450417122521)
scores = (0.55410227911278764, 0.54944764372533561)
score = 0.5517749614190617
holdout = (0.7918751149560184, 0.5294850489435673)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (228, 255)
train = (1.2686012743665471, 0.91798324957761102)
scores = (0.5544537748008137, 0.54149523732599758)
score = 0.5479745060634056
holdout = (0.74280394953704, 0.6167221773251533)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (400, 195)
train = (1.6760026417110596, 0.9455579574560915)
scores = (0.5413630898752726, 0.57027746217709052)
score = 0.5558202760261816
holdout = (0.8002739697305733, 0.5820537649264712)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (313, 310)
train = (1.1852410226324366, 1.0177833076745058)
scores = (0.55036666538316825, 0.54019989863358653)
score = 0.5452832820083774
holdout = (0.7107866942005432, 0.6510503882798402)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (400, 195)
train = (1.6760026417110596, 0.9455579574560915)
scores = (0.5413630898752726, 0.57027746217709052)
score = 0.5558202760261816
holdout = (0.8002739697305733, 0.5820537649264712)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (283, 173)
train = (1.3998878433013808, 0.94945154844589275)
scores = (0.57891629750684381, 0.55203644598617096)
score = 0.5654763717465074
holdout = (0.782421651166208, 0.6334294123130558)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (332, 62)
train = (1.7616290834893471, 0.9013578024597797)
scores = (0.53156471320644827, 0.56720651058565907)
score = 0.5493856118960536
holdout = (0.8024469484148581, 0.5796519050936446)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (272, 372)
train = (1.1765341664853592, 1.1247673376331031)
scores = (0.55427324076864415, 0.54618774066053621)
score = 0.5502304907145902
holdout = (0.7114253834460363, 0.6848318039141535)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (283, 173)
train = (1.3998878433013808, 0.94945154844589275)
scores = (0.57891629750684381, 0.55203644598617096)
score = 0.5654763717465074
holdout = (0.782421651166208, 0.6334294123130558)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 202)
train = (1.2746718959500989, 1.0435008988418732)
scores = (0.56228450316461542, 0.57359056228591176)
score = 0.5679375327252636
holdout = (0.745879235298966, 0.6703155901675119)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (408, 78)
train = (1.9527346304372517, 1.000283581069741)
scores = (0.56011277263850701, 0.56760440763942466)
score = 0.5638585901389659
holdout = (0.8241691013465302, 0.6064287313064602)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (307, 241)
train = (1.2217524209970583, 1.0384496569291888)
scores = (0.5488527546317582, 0.53401822032883783)
score = 0.541435487480298
holdout = (0.7254441913175484, 0.6524184426593752)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (147, 202)
train = (1.2746718959500989, 1.0435008988418732)
scores = (0.56228450316461542, 0.57359056228591176)
score = 0.5679375327252636
holdout = (0.745879235298966, 0.6703155901675119)
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (283, 173)
train = (1.3998878433013802, 0.94945154844589252)
scores = (0.57891629750684359, 0.55203644598617108)
score = 0.5654763717465073
holdout = (0.7824216511662079, 0.6334294123130559)
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (556, 281)
train = (1.7928619820429634, 1.0220148003582192)
scores = (0.5554331960889819, 0.59694619351158462)
score = 0.5761896948002833
holdout = (0.8164422534410006, 0.604832715009659)
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (272, 372)
train = (1.1765341664853595, 1.1247673376331031)
scores = (0.55427324076864415, 0.54617744316547889)
score = 0.5502253419670615
holdout = (0.7114253834460365, 0.6848285437886905)
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (556, 281)
train = (1.7928619820429634, 1.0220148003582192)
scores = (0.5554331960889819, 0.59694619351158462)
score = 0.5761896948002833
holdout = (0.8164422534410006, 0.604832715009659)
>>> t = 2103 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.0, 2012.75, 2013.5, 2014.5, 2014.0, 2009.25, 2010.5, 2011.5, 2012.25, 2013.25, 2014.75, 2015.0}), frozenset({2010.25, 2010.75, 2012.5, 2009.0, 2009.75, 2013.75, 2009.5, 2010.0, 2011.25, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (246, 161)
train = (1.0136056345575186, 0.91105453611218101)
scores = (0.34427427586150894, 0.57629225423957264)
score = 0.4602832650505408
holdout = (0.574743950140061, 0.6444415554645347)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (219, 74)
train = (1.0711697958632287, 0.7614691880234139)
scores = (0.31437510507863548, 0.57673813568052068)
score = 0.4455566203795781
holdout = (0.596773383457834, 0.5634827367908433)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (310, 196)
train = (0.98976333865817734, 1.0054554284658643)
scores = (0.32263878376674904, 0.59940065727071801)
score = 0.4610197205187335
holdout = (0.5530194694340728, 0.6788681574779132)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (310, 196)
train = (0.98976333865817734, 1.0054554284658643)
scores = (0.32263878376674904, 0.59940065727071801)
score = 0.4610197205187335
holdout = (0.5530194694340728, 0.6788681574779132)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 121)
train = (1.1704997278242235, 1.0084980303109674)
scores = (0.36310650220475604, 0.57511383564497243)
score = 0.46911016892486423
holdout = (0.626639733592442, 0.6807449201345712)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (183, 88)
train = (1.2459707554447048, 0.87465195540982266)
scores = (0.33560631332484131, 0.58005288076724448)
score = 0.45782959704604287
holdout = (0.6503837105863856, 0.5919354344100723)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (300, 116)
train = (1.0565956423220002, 1.0030626239429268)
scores = (0.32284011206763952, 0.59718429781735261)
score = 0.46001220494249606
holdout = (0.5731045400964392, 0.6674675091022604)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (271, 121)
train = (1.1704997278242235, 1.0084980303109674)
scores = (0.36310650220475604, 0.57511383564497243)
score = 0.46911016892486423
holdout = (0.626639733592442, 0.6807449201345712)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (211, 185)
train = (1.222050951932419, 1.1237600323171184)
scores = (0.36364332391743492, 0.57937091300593868)
score = 0.4715071184616868
holdout = (0.6401219405542489, 0.7109204271508169)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (358, 146)
train = (1.679311546223786, 1.0799424343121051)
scores = (0.33419708018203786, 0.57526166810031376)
score = 0.4547293741411758
holdout = (0.7328573303511843, 0.6449413971878806)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (295, 178)
train = (1.0899609524742837, 1.1253144912065178)
scores = (0.32242355034157716, 0.60496867334990023)
score = 0.46369611184573867
holdout = (0.5853750930918633, 0.7153725613849892)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (211, 185)
train = (1.222050951932419, 1.1237600323171184)
scores = (0.36364332391743492, 0.57937091300593868)
score = 0.4715071184616868
holdout = (0.6401219405542489, 0.7109204271508169)
>>> t = 2104 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|acc|doo)
            & index[0,1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [12:,18:,9:6,12:9,15:12,18:12,12:3,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [60:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|doo|vp5dd|Volatility)
            & [10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Drawup[20:10] 
                | Since{Min&index[0,10,20]} 
              )
            & Since[21:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[5,10]} 
                | Since{Min & index[10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.0, 2012.0, 2012.5, 2009.5, 2013.25, 2013.75, 2014.75, 2009.0, 2010.0, 2011.25, 2012.25, 2013.5, 2014.5}), frozenset({2010.25, 2010.75, 2015.0, 2011.75, 2009.75, 2014.0, 2009.25, 2010.5, 2011.5, 2012.75, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 62)
train = (0.75165042290613959, 0.77654338481668994)
scores = (0.38495982733225531, 0.52232965996573588)
score = 0.4536447436489956
holdout = (0.5154125964183204, 0.5507283202125187)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 68)
train = (0.83223107868437862, 0.7815588391564805)
scores = (0.39008457758665432, 0.46413758631510266)
score = 0.4271110819508785
holdout = (0.5393798446365864, 0.5513482208560949)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (156, 84)
train = (0.94688590960633123, 0.75944693004980524)
scores = (0.4200828005695873, 0.51617104593709728)
score = 0.46812692325334226
holdout = (0.5908714507555765, 0.5404808624037786)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (156, 84)
train = (0.94688590960633123, 0.75944693004980524)
scores = (0.4200828005695873, 0.51617104593709728)
score = 0.46812692325334226
holdout = (0.5908714507555765, 0.5404808624037786)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 68)
train = (0.77323196769457114, 0.91937502151160033)
scores = (0.38333019251144307, 0.53244772559551878)
score = 0.4578889590534809
holdout = (0.5209909359727034, 0.6103154066478857)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 64)
train = (0.97501446833628813, 0.92894169519077774)
scores = (0.36028667319701574, 0.45953206262214602)
score = 0.4099093679095809
holdout = (0.5886722341523908, 0.6022329730561594)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (285, 103)
train = (1.1748123363480725, 0.88039490243647467)
scores = (0.43081280310750247, 0.52390546444985564)
score = 0.47735913377867906
holdout = (0.6682912107035371, 0.5810069477647699)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (285, 103)
train = (1.1748123363480725, 0.88039490243647467)
scores = (0.43081280310750247, 0.52390546444985564)
score = 0.47735913377867906
holdout = (0.6682912107035371, 0.5810069477647699)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 54)
train = (0.77323196769457114, 0.95505513936108832)
scores = (0.38333019251144307, 0.54140135118474031)
score = 0.4623657718480917
holdout = (0.5209909359727034, 0.6305228434711673)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (168, 72)
train = (1.1831171737930044, 1.10128679881182)
scores = (0.42745140354692879, 0.42703230614984067)
score = 0.42724185484838473
holdout = (0.6546557247076957, 0.6475169830276549)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (163, 106)
train = (1.045195067903792, 0.91896612256673316)
scores = (0.42061012577399959, 0.53249472709841195)
score = 0.47655242643620577
holdout = (0.6190782694898405, 0.6006623962617343)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (163, 106)
train = (1.045195067903792, 0.91896612256673316)
scores = (0.42061012577399959, 0.53249472709841195)
score = 0.47655242643620577
holdout = (0.6190782694898405, 0.6006623962617343)
>>> t = 2200 ===================================================================================================
(pair) len(F.columns) = 70
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.5, 2012.5, 2009.75, 2013.5, 2014.25, 2009.25, 2015.25, 2011.75, 2012.25, 2013.0, 2014.75, 2015.0}), frozenset({2010.5, 2010.25, 2010.75, 2012.75, 2009.0, 2013.75, 2014.0, 2009.5, 2010.0, 2011.25, 2012.0, 2013.25, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 131)
train = (0.77215529236180969, 1.0252767722539389)
scores = (0.45031556019583552, 0.38486768663635518)
score = 0.41759162341609535
holdout = (0.542602440493235, 0.6375819894883356)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (13, 1)
train = (0.63167782344370305, 0.83512069619761486)
scores = (0.39282147334869466, 0.30167643715246178)
score = 0.3472489552505782
holdout = (0.47050128690288795, 0.5008702046761965)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (70, 154)
train = (0.93853945275924267, 1.021095090511162)
scores = (0.50896484219869698, 0.36875560448244571)
score = 0.43886022334057134
holdout = (0.6248147501631746, 0.6287670455318141)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (70, 154)
train = (0.93853945275924267, 1.021095090511162)
scores = (0.50896484219869698, 0.36875560448244571)
score = 0.43886022334057134
holdout = (0.6248147501631746, 0.6287670455318141)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (34, 90)
train = (0.95935513098661895, 1.0765293818465911)
scores = (0.48076823702500765, 0.39121870161194022)
score = 0.43599346931847394
holdout = (0.6194995526474256, 0.6588122965967391)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 1)
train = (0.97156985991382838, 0.91705983512230738)
scores = (0.34878854325209369, 0.30843111960928843)
score = 0.32860983143069106
holdout = (0.5579203914173502, 0.5479587484779097)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (139, 151)
train = (1.1513961895098579, 1.0407691407182085)
scores = (0.53621221900372151, 0.3736785202118626)
score = 0.4549453696077921
holdout = (0.6988116968796103, 0.6357752612086619)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (139, 151)
train = (1.1513961895098579, 1.0407691407182085)
scores = (0.53621221900372151, 0.3736785202118626)
score = 0.4549453696077921
holdout = (0.6988116968796103, 0.6357752612086619)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 122)
train = (1.0896399195201532, 1.1484252989592425)
scores = (0.48906857960694594, 0.40340378901548246)
score = 0.4462361843112142
holdout = (0.6615209513689907, 0.6826338390436096)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 1)
train = (1.2068742541252777, 1.0730792583697859)
scores = (0.35759877991947797, 0.28496196210946745)
score = 0.3212803710144727
holdout = (0.6312312522265803, 0.5776789173552853)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (230, 123)
train = (1.3034606832449405, 1.0063055933749401)
scores = (0.5609865605255846, 0.36660645787006019)
score = 0.4637965091978224
holdout = (0.7486028510434779, 0.6209984566670561)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (230, 123)
train = (1.3034606832449405, 1.0063055933749401)
scores = (0.5609865605255846, 0.36660645787006019)
score = 0.4637965091978224
holdout = (0.7486028510434779, 0.6209984566670561)
>>> t = 2201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.25, 2009.75, 2013.0, 2013.5, 2014.0, 2009.0, 2010.25, 2011.75, 2012.75, 2013.75, 2014.75, 2015.0}), frozenset({2010.5, 2010.75, 2011.5, 2012.25, 2012.5, 2009.25, 2014.25, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 191)
train = (0.78548071817479781, 1.0550958165256206)
scores = (0.3529090698259218, 0.46161308272033297)
score = 0.40726107627312735
holdout = (0.50513121336103, 0.6590054751236324)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 107)
train = (0.69828629338557546, 0.94848059096019643)
scores = (0.20250932178340256, 0.41959921526651167)
score = 0.3110542685249571
holdout = (0.41566353244276705, 0.6088746627474088)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 121)
train = (0.60354447444887027, 1.0682450427237582)
scores = (0.35591254807896011, 0.49187352511901267)
score = 0.42389303659898636
holdout = (0.45674530365027927, 0.6883588368813495)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (3, 121)
train = (0.60354447444887027, 1.0682450427237582)
scores = (0.35591254807896011, 0.49187352511901267)
score = 0.42389303659898636
holdout = (0.45674530365027927, 0.6883588368813495)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 16)
train = (0.88572053506430448, 0.92916594800861152)
scores = (0.36278593503892359, 0.449670194343471)
score = 0.4062280646911973
holdout = (0.5443660995920536, 0.6058794209878552)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (249, 47)
train = (1.0800679603002503, 0.90141179804913885)
scores = (0.38079180373080135, 0.43884952063519145)
score = 0.4098206621829964
holdout = (0.6036321651791409, 0.5803104681934967)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 121)
train = (0.61420025672196588, 1.0961967223346059)
scores = (0.35417385356166203, 0.490011602324881)
score = 0.4220927279432715
holdout = (0.4599584824134142, 0.6960062183994505)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (3, 121)
train = (0.61420025672196588, 1.0961967223346059)
scores = (0.35417385356166203, 0.490011602324881)
score = 0.4220927279432715
holdout = (0.4599584824134142, 0.6960062183994505)
>>> t = 2202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:,20:10] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,10:] 
                | Since{Max & index[5]} 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return)
        & [1:,5:,10:,20:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [6:,12:9,15:12,21:18,9:3,            15:9,21:15,15:6,18:9,15:3,18:6,21:3] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2011.0, 2011.25, 2012.25, 2012.5, 2009.25, 2009.0, 2010.75, 2011.5, 2009.5, 2013.25, 2014.25}), frozenset({2010.25, 2015.0, 2012.75, 2013.5, 2013.75, 2014.5, 2014.0, 2009.75, 2010.0, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (159, 29)
train = (0.81669010686783239, 0.92418187178069222)
scores = (0.47397603486556728, 0.46805072785293039)
score = 0.47101338135924886
holdout = (0.5580206038667619, 0.6041439895674692)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (240, 22)
train = (0.89288894204151981, 0.9319256915676154)
scores = (0.52964858878735233, 0.44421685275836836)
score = 0.4869327207728603
holdout = (0.5465845391043811, 0.6011638071091324)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 18)
train = (0.87267493208166136, 0.64142377502796544)
scores = (0.47559920428576763, 0.41441037382704349)
score = 0.44500478905640556
holdout = (0.6011963744289561, 0.48476146852809077)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (240, 22)
train = (0.89288894204151981, 0.9319256915676154)
scores = (0.52964858878735233, 0.44421685275836836)
score = 0.4869327207728603
holdout = (0.5465845391043811, 0.6011638071091324)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (237, 34)
train = (0.96848770567992837, 1.0818710132375067)
scores = (0.4924612627679944, 0.46971925517802099)
score = 0.4810902589730077
holdout = (0.6066608363713738, 0.6442541186414422)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 1)
train = (0.64157406138955875, 1.2646183074723663)
scores = (0.43697057335781075, 0.32343553773822514)
score = 0.3802030555480179
holdout = (0.4689419941565124, 0.6109693808478946)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 16)
train = (0.99080302543753707, 0.63962480078750561)
scores = (0.4898618780283982, 0.41472956550304452)
score = 0.45229572176572136
holdout = (0.6443281687066955, 0.48391086387504983)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (237, 34)
train = (0.96848770567992837, 1.0818710132375067)
scores = (0.4924612627679944, 0.46971925517802099)
score = 0.4810902589730077
holdout = (0.6066608363713738, 0.6442541186414422)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (112, 47)
train = (0.97498976364542622, 1.1983715035384293)
scores = (0.48809717860242713, 0.47320351101959129)
score = 0.4806503448110092
holdout = (0.6195344299533865, 0.676753262533782)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (80, 1)
train = (0.97561564772405296, 1.5674448622044113)
scores = (0.48558526747640934, 0.31025690818444018)
score = 0.3979210878304248
holdout = (0.5712701707812211, 0.6877533970630181)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (224, 16)
train = (1.0219773291061298, 0.63962480078750561)
scores = (0.48390839869238572, 0.41472956550304463)
score = 0.44931898209771515
holdout = (0.6544990974856371, 0.4839108638750497)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (112, 47)
train = (0.97498976364542622, 1.1983715035384293)
scores = (0.48809717860242713, 0.47320351101959129)
score = 0.4806503448110092
holdout = (0.6195344299533865, 0.676753262533782)
>>> t = 2300 ===================================================================================================
(pair) len(F.columns) = 98
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 107
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,2,1:2,0:2] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|daoc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,5]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.5, 2011.0, 2011.75, 2012.0, 2014.25, 2010.5, 2011.25, 2012.5, 2013.5, 2014.75, 2015.25}), frozenset({2012.75, 2009.0, 2009.25, 2013.25, 2013.75, 2009.75, 2014.0, 2009.5, 2010.0, 2012.25, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (219, 2)
train = (1.8405515366527849, 0.44887369534770732)
scores = (0.18068347822814318, 0.12518465241260546)
score = 0.15293406532037432
holdout = (0.7021285576403424, 0.27886899197254095)
>>> t = 2301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 107
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,2,1:2,0:2] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|daoc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,5]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.75, 2011.0, 2012.75, 2013.0, 2013.5, 2009.25, 2010.25, 2011.5, 2012.25, 2013.75, 2014.25}), frozenset({2010.75, 2015.0, 2012.5, 2009.0, 2009.75, 2014.5, 2014.0, 2009.5, 2010.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (86, 196)
train = (0.87518383165941571, 0.80798355056649984)
scores = (0.21171936066627284, 0.20834223610681793)
score = 0.21003079838654537
holdout = (0.4779107967158241, 0.4959274676223627)
>>> t = 2400 ===================================================================================================
(pair) len(F.columns) = 26
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2011.25, 2009.0, 2009.75, 2014.25, 2014.0, 2014.75, 2009.5, 2010.5, 2011.5, 2012.75, 2013.75, 2014.5, 2015.25}), frozenset({2010.0, 2010.75, 2011.75, 2012.25, 2012.5, 2013.25, 2013.5, 2009.25, 2010.25, 2011.0, 2012.0, 2013.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 77)
train = (0.68401285635722375, 0.78371568383850343)
scores = (0.40687246193574478, 0.55591939965956494)
score = 0.48139593079765486
holdout = (0.46361676654085904, 0.5577364385715212)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 59)
train = (0.59041755269052032, 0.80437185491995145)
scores = (0.42536899414101054, 0.46140676158522093)
score = 0.44338787786311573
holdout = (0.45320789994614713, 0.5588554880987523)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (307, 126)
train = (0.91568590891639112, 0.75245046504475777)
scores = (0.45308165931756944, 0.55783870085482135)
score = 0.5054601800861954
holdout = (0.5719165096274905, 0.544881115246237)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (307, 126)
train = (0.91568590891639112, 0.75245046504475777)
scores = (0.45308165931756944, 0.55783870085482135)
score = 0.5054601800861954
holdout = (0.5719165096274905, 0.544881115246237)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 61)
train = (0.73679904864936951, 0.86209009780549362)
scores = (0.39969971909680968, 0.56288149904543427)
score = 0.481290609071122
holdout = (0.47828816033528826, 0.5886561553384231)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 79)
train = (0.70864898085128203, 1.0182892783452253)
scores = (0.42547145871844161, 0.46861834961274929)
score = 0.44704490416559545
holdout = (0.48743254977626094, 0.6386861353796109)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (315, 164)
train = (0.98921706753209704, 0.88808489864392315)
scores = (0.46312976904921349, 0.55574662653701645)
score = 0.5094381977931149
holdout = (0.5974312729611795, 0.5954921615966873)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (315, 164)
train = (0.98921706753209704, 0.88808489864392315)
scores = (0.46312976904921349, 0.55574662653701645)
score = 0.5094381977931149
holdout = (0.5974312729611795, 0.5954921615966873)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 31)
train = (0.74222056952567861, 0.91716036898946818)
scores = (0.40072946750598287, 0.56444177525890016)
score = 0.48258562138244154
holdout = (0.4802119149789289, 0.5990295754507676)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 1)
train = (0.92099373701495169, 1.0790897482790176)
scores = (0.41174432084538864, 0.40639497436393296)
score = 0.4090696476046608
holdout = (0.5732482659697229, 0.5970320448485306)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (291, 158)
train = (0.99324604404186645, 0.92032768545883026)
scores = (0.45744601603003843, 0.55118461434256061)
score = 0.5043153151862996
holdout = (0.5966727380786193, 0.603940328970091)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (291, 158)
train = (0.99324604404186645, 0.92032768545883026)
scores = (0.45744601603003843, 0.55118461434256061)
score = 0.5043153151862996
holdout = (0.5966727380786193, 0.603940328970091)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (325, 62)
train = (1.1846645628362487, 1.0039031804185699)
scores = (0.47253806523441644, 0.56057973028141594)
score = 0.5165588977579162
holdout = (0.6664131810636, 0.6318658802022366)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 42)
train = (1.0170446789251775, 1.2495018862436289)
scores = (0.41334722209664782, 0.45560007286336784)
score = 0.43447364748000783
holdout = (0.5977316237503386, 0.6933490753742738)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (286, 159)
train = (0.99900960263920469, 0.93643867169712125)
scores = (0.46261374023261553, 0.55335294803169111)
score = 0.5079833441321533
holdout = (0.5998051397676696, 0.6061091799413822)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (325, 62)
train = (1.1846645628362487, 1.0039031804185699)
scores = (0.47253806523441644, 0.56057973028141594)
score = 0.5165588977579162
holdout = (0.6664131810636, 0.6318658802022366)
>>> t = 2401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.25, 2011.75, 2012.75, 2014.0, 2009.25, 2010.25, 2011.5, 2012.0, 2013.5, 2014.5, 2015.0}), frozenset({2012.5, 2009.0, 2009.75, 2013.25, 2013.75, 2014.25, 2009.5, 2010.5, 2011.0, 2012.25, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 52)
train = (0.69010009165430508, 0.72881708243097121)
scores = (0.45960945660360319, 0.45053991249747777)
score = 0.45507468455054045
holdout = (0.48330860620438637, 0.5209463631286929)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (171, 95)
train = (0.97970126337375019, 0.76974892071164169)
scores = (0.45896598217938317, 0.43822988917517625)
score = 0.4485979356772797
holdout = (0.6130639029471118, 0.5286481042462445)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 187)
train = (0.71950716996199926, 0.88319023086793336)
scores = (0.47894002187210827, 0.47498379960779702)
score = 0.47696191073995264
holdout = (0.4973754166120846, 0.5756701074100564)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (115, 187)
train = (0.71950716996199926, 0.88319023086793336)
scores = (0.47894002187210827, 0.47498379960779702)
score = 0.47696191073995264
holdout = (0.4973754166120846, 0.5756701074100564)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (119, 63)
train = (0.95681638104798661, 0.86148797869131166)
scores = (0.47962378629809421, 0.45450527595372797)
score = 0.46706453112591106
holdout = (0.5845415183732625, 0.571030560493471)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 25)
train = (1.0920463693046769, 0.77367961007483821)
scores = (0.46451308155682536, 0.45215434102366642)
score = 0.4583337112902459
holdout = (0.6485349743014747, 0.5306590422312192)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (319, 324)
train = (0.98783755153374031, 1.1099930920149934)
scores = (0.49891789450429125, 0.48913049030907285)
score = 0.49402419240668205
holdout = (0.5906460482010484, 0.6592691894594557)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (319, 324)
train = (0.98783755153374031, 1.1099930920149934)
scores = (0.49891789450429125, 0.48913049030907285)
score = 0.49402419240668205
holdout = (0.5906460482010484, 0.6592691894594557)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (107, 73)
train = (1.0298542043545444, 0.94725012711273704)
scores = (0.48401592286412454, 0.45451560345013664)
score = 0.4692657631571306
holdout = (0.6060576682785711, 0.6010712081738926)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 57)
train = (1.0902346367940241, 0.95381945181747096)
scores = (0.45549866173360543, 0.48060539011279368)
score = 0.46805202592319956
holdout = (0.6425259937790656, 0.601069506175722)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (153, 313)
train = (0.82542809198075651, 1.1182904701404439)
scores = (0.48813394347350297, 0.48453634388430739)
score = 0.4863351436789052
holdout = (0.5338912034637421, 0.6580137195804612)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (153, 313)
train = (0.82542809198075651, 1.1182904701404439)
scores = (0.48813394347350297, 0.48453634388430739)
score = 0.4863351436789052
holdout = (0.5338912034637421, 0.6580137195804612)
>>> t = 2402 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.5, 2010.25, 2015.25, 2012.75, 2012.5, 2013.0, 2013.5, 2014.25, 2010.75, 2012.25, 2013.25, 2014.75, 2015.0}), frozenset({2011.0, 2011.5, 2011.75, 2009.0, 2009.25, 2009.75, 2014.0, 2009.5, 2010.0, 2011.25, 2012.0, 2013.75, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (235, 5)
train = (1.0787162259484515, 0.64642791736120397)
scores = (0.38421766535685853, 0.47270612436162279)
score = 0.4284618948592407
holdout = (0.5477004874638106, 0.4630958867831901)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (230, 54)
train = (1.7088803584732319, 0.71627336251068241)
scores = (0.42524450205762615, 0.4461000129781284)
score = 0.4356722575178773
holdout = (0.699883044395223, 0.4880076453929757)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 83)
train = (0.71049448820613004, 0.7609951966260422)
scores = (0.37077125929826271, 0.52034560022718634)
score = 0.44555842976272453
holdout = (0.4505050232938191, 0.5283988942098812)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (144, 83)
train = (0.71049448820613004, 0.7609951966260422)
scores = (0.37077125929826271, 0.52034560022718634)
score = 0.44555842976272453
holdout = (0.4505050232938191, 0.5283988942098812)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (185, 69)
train = (1.1501920431154289, 0.86011885096667695)
scores = (0.39077796570201645, 0.48430842164527638)
score = 0.4375431936736464
holdout = (0.5707960473005019, 0.5654420836980149)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (141, 68)
train = (1.9098022322069363, 0.83165873256898759)
scores = (0.42122980529120907, 0.46250051071099513)
score = 0.4418651580011021
holdout = (0.7371976146119203, 0.5269382480398827)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 84)
train = (0.76950350395305234, 0.80323285286782664)
scores = (0.37114604811287738, 0.51399197522258866)
score = 0.442569011667733
holdout = (0.47044770468023744, 0.541888695073676)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (155, 84)
train = (0.76950350395305234, 0.80323285286782664)
scores = (0.37114604811287738, 0.51399197522258866)
score = 0.442569011667733
holdout = (0.47044770468023744, 0.541888695073676)
>>> t = 2403 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 30
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Max&index[20]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doc|vp1dd)
            & index[1, 0:1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [6:,12:,18:,6:3,15:12,21:18,12:6,            15:9,18:12,21:15,15:3,18:6,21:9,18:3,21:6] 
          }
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2015.0, 2011.75, 2011.25, 2012.0, 2009.75, 2010.75, 2011.0, 2012.5, 2013.0, 2014.5, 2015.25}), frozenset({2012.75, 2009.0, 2009.25, 2013.5, 2013.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.5, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (316, 323)
train = (1.46031365255165, 0.94581441291720836)
scores = (0.53187107612086171, 0.35349249339001393)
score = 0.44268178475543785
holdout = (0.7572908384646831, 0.5583689889268905)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 391)
train = (1.0160668099941332, 0.95239666515995391)
scores = (0.42919729033293808, 0.40187096492861124)
score = 0.4155341276307747
holdout = (0.5641715406090176, 0.5577211954241799)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (220, 203)
train = (0.93677354913624122, 0.87783282777313243)
scores = (0.51138935677907349, 0.34400436683626218)
score = 0.42769686180766786
holdout = (0.6036760082708609, 0.5003628080423812)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (316, 323)
train = (1.46031365255165, 0.94581441291720836)
scores = (0.53187107612086171, 0.35349249339001393)
score = 0.44268178475543785
holdout = (0.7572908384646831, 0.5583689889268905)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (176, 130)
train = (1.359968413119413, 0.93267240417715858)
scores = (0.52079546753182182, 0.34866292743705468)
score = 0.4347291974844383
holdout = (0.7329460653678409, 0.5423415658116498)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 672)
train = (1.2323397333831112, 1.1725402072962001)
scores = (0.46384554698845187, 0.43834935041193718)
score = 0.4510974487001945
holdout = (0.6510138372432979, 0.6105996175091188)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (151, 219)
train = (0.88711132449596886, 0.92131714716135704)
scores = (0.51567017703899487, 0.34852735606251078)
score = 0.43209876655075286
holdout = (0.5881696289999582, 0.5177970527336656)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (2, 672)
train = (1.2323397333831112, 1.1725402072962001)
scores = (0.46384554698845187, 0.43834935041193718)
score = 0.4510974487001945
holdout = (0.6510138372432979, 0.6105996175091188)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (166, 1)
train = (1.4757171591423042, 0.76043099036438577)
scores = (0.52954122776803458, 0.31376187898120333)
score = 0.42165155337461896
holdout = (0.7598224039927658, 0.4466134516957929)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 331)
train = (1.5663609575017001, 1.1432962909568942)
scores = (0.47563246687207061, 0.44318793512461829)
score = 0.45941020099834445
holdout = (0.7382740328444054, 0.6088159288444694)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 192)
train = (1.0266886913302329, 0.91014896285914182)
scores = (0.51597008986560045, 0.35018113728318456)
score = 0.4330756135743925
holdout = (0.6369621578458271, 0.5142494364497099)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 331)
train = (1.5663609575017001, 1.1432962909568942)
scores = (0.47563246687207061, 0.44318793512461829)
score = 0.45941020099834445
holdout = (0.7382740328444054, 0.6088159288444694)
>>> t = 2500 ===================================================================================================
(pair) len(F.columns) = 129
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.75, 2012.0, 2013.0, 2013.25, 2014.0, 2009.5, 2015.0, 2011.5, 2009.75, 2013.5, 2014.75, 2015.25}), frozenset({2010.0, 2010.75, 2011.25, 2012.5, 2012.75, 2009.25, 2014.25, 2009.0, 2010.5, 2011.0, 2012.25, 2013.75, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (225, 358)
train = (1.5109340531505089, 0.91407041588837779)
scores = (0.50176469118245048, 0.54894738574103519)
score = 0.5253560384617428
holdout = (0.7663448219122863, 0.5912771545730883)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (164, 260)
train = (1.6804437092109477, 0.920514876560239)
scores = (0.48620120256988053, 0.55187440826205481)
score = 0.5190378054159677
holdout = (0.7995326653983956, 0.5665069713635607)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (262, 180)
train = (1.3410847867783622, 0.92262626651596502)
scores = (0.49879633089548703, 0.53068706788972209)
score = 0.5147416993926046
holdout = (0.7192328604003202, 0.6225532878849535)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (225, 358)
train = (1.5109340531505089, 0.91407041588837779)
scores = (0.50176469118245048, 0.54894738574103519)
score = 0.5253560384617428
holdout = (0.7663448219122863, 0.5912771545730883)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (167, 58)
train = (1.5876074436257843, 0.8745038912828853)
scores = (0.50171124076356921, 0.49169417751224337)
score = 0.49670270913790626
holdout = (0.7802392950161001, 0.5836608691400066)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 169)
train = (1.7154983071380394, 0.98445303399039641)
scores = (0.49185582358256191, 0.57617754224792872)
score = 0.5340166829152453
holdout = (0.8043502512160904, 0.5919132661780196)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (242, 272)
train = (1.4178349431969763, 1.0606968278817628)
scores = (0.49655925630093434, 0.53608314041503458)
score = 0.5163211983579845
holdout = (0.7321198702069492, 0.6654306536867153)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (87, 169)
train = (1.7154983071380394, 0.98445303399039641)
scores = (0.49185582358256191, 0.57617754224792872)
score = 0.5340166829152453
holdout = (0.8043502512160904, 0.5919132661780196)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (192, 189)
train = (1.7160934671991692, 1.0224917464976107)
scores = (0.51018924204381311, 0.53043318326754485)
score = 0.520311212655679
holdout = (0.8057338045649628, 0.6330949681141672)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (254, 154)
train = (2.049308524216245, 1.0852664006234674)
scores = (0.51931938969579317, 0.54170721019006818)
score = 0.5305132999429307
holdout = (0.8174413984536062, 0.6141173931377222)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (295, 297)
train = (1.5953086715708873, 1.1375697535537534)
scores = (0.50333484310123411, 0.52820909232124291)
score = 0.5157719677112385
holdout = (0.7754299221900558, 0.6847264550251825)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (254, 154)
train = (2.049308524216245, 1.0852664006234674)
scores = (0.51931938969579317, 0.54170721019006818)
score = 0.5305132999429307
holdout = (0.8174413984536062, 0.6141173931377222)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (121, 243)
train = (1.6542020572365883, 1.1015333894509673)
scores = (0.49487155007686084, 0.54871178878111826)
score = 0.5217916694289896
holdout = (0.7856275135006285, 0.6568054852854259)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (145, 2)
train = (2.0077019448725619, 0.89141868886975217)
scores = (0.49612634695385599, 0.52788870025849755)
score = 0.5120075236061767
holdout = (0.8126713855178278, 0.589455084467655)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (231, 241)
train = (1.4636463025246786, 1.1114385829630244)
scores = (0.4990347278587236, 0.53012778368473179)
score = 0.5145812557717278
holdout = (0.7457456963542262, 0.6774439637709647)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (121, 243)
train = (1.6542020572365883, 1.1015333894509673)
scores = (0.49487155007686084, 0.54871178878111826)
score = 0.5217916694289896
holdout = (0.7856275135006285, 0.6568054852854259)
>>> t = 2501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2011.75, 2012.75, 2013.0, 2014.75, 2009.75, 2010.75, 2011.5, 2009.0, 2013.5, 2014.0, 2015.25}), frozenset({2011.25, 2012.25, 2012.5, 2009.25, 2013.75, 2014.25, 2009.5, 2010.5, 2011.0, 2012.0, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (551, 230)
train = (1.1266123926805056, 1.1104784829630592)
scores = (0.45432331589493774, 0.54739963226209765)
score = 0.5008614740785177
holdout = (0.6379554558338206, 0.7056395996352819)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (396, 56)
train = (1.1171228250477425, 0.84655805189329092)
scores = (0.42276809986684505, 0.49549682292933983)
score = 0.45913246139809244
holdout = (0.6140708837791407, 0.5914070380267298)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (793, 159)
train = (1.2872727261741168, 1.0075870194482941)
scores = (0.46018483008387495, 0.54103930698678993)
score = 0.5006120685353325
holdout = (0.6882109664202095, 0.6675941243761508)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (551, 230)
train = (1.1266123926805056, 1.1104784829630592)
scores = (0.45432331589493774, 0.54739963226209765)
score = 0.5008614740785177
holdout = (0.6379554558338206, 0.7056395996352819)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (296, 301)
train = (1.1401146434740261, 1.2525302771106415)
scores = (0.43735755155049277, 0.56270749621799365)
score = 0.5000325238842432
holdout = (0.6365966444306871, 0.7454380232730368)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (287, 12)
train = (1.2116237133114185, 0.82031774484714803)
scores = (0.42793370963652377, 0.50453766189869698)
score = 0.4662356857676104
holdout = (0.6361587948111611, 0.5791763078712365)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (632, 157)
train = (1.3761414333484139, 1.0859076856349525)
scores = (0.44894348570653653, 0.54735001625553059)
score = 0.49814675098103356
holdout = (0.7007720646652998, 0.6927777532833339)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (296, 301)
train = (1.1401146434740261, 1.2525302771106415)
scores = (0.43735755155049277, 0.56270749621799365)
score = 0.5000325238842432
holdout = (0.6365966444306871, 0.7454380232730368)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (266, 300)
train = (1.1944154471211621, 1.3232116553670421)
scores = (0.43336297076562563, 0.57044341304863311)
score = 0.5019031919071294
holdout = (0.6493679178132292, 0.762355659379411)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (429, 3)
train = (1.5084942266152863, 0.94934119443487441)
scores = (0.45638946394857349, 0.49468998327316921)
score = 0.4755397236108714
holdout = (0.6997766787234275, 0.6252027091195167)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (722, 110)
train = (1.4825826387364378, 1.0307378995636163)
scores = (0.46040189219372685, 0.54244635601575808)
score = 0.5014241241047425
holdout = (0.7280165622378428, 0.6684670834118139)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (266, 300)
train = (1.1944154471211621, 1.3232116553670421)
scores = (0.43336297076562563, 0.57044341304863311)
score = 0.5019031919071294
holdout = (0.6493679178132292, 0.762355659379411)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (384, 151)
train = (1.3380952983303553, 1.3195999512877334)
scores = (0.47291786892331417, 0.55785627180047082)
score = 0.5153870703618925
holdout = (0.6935445004477282, 0.7661038080854553)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 25)
train = (1.1478153031094298, 1.1551547551925028)
scores = (0.36005622472625132, 0.52598863653604244)
score = 0.4430224306311469
holdout = (0.6164870811330937, 0.6830036585526764)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (752, 96)
train = (1.5296712703161417, 0.99728920839672408)
scores = (0.47000788565654095, 0.54410652707081431)
score = 0.5070572063636776
holdout = (0.7416982708516285, 0.6560531558405065)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (384, 151)
train = (1.3380952983303553, 1.3195999512877334)
scores = (0.47291786892331417, 0.55785627180047082)
score = 0.5153870703618925
holdout = (0.6935445004477282, 0.7661038080854553)
>>> t = 2502 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2012.25, 2012.75, 2012.0, 2009.75, 2013.0, 2009.5, 2010.25, 2011.0, 2012.5, 2013.25, 2014.25, 2015.0}), frozenset({2010.0, 2010.75, 2011.5, 2013.75, 2014.5, 2014.0, 2009.0, 2010.5, 2011.25, 2009.25, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 152)
train = (0.99214942825684316, 0.94335017104606178)
scores = (0.55669652522241675, 0.4339055191712694)
score = 0.4953010221968431
holdout = (0.6319342650445504, 0.5947304073536159)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 298)
train = (0.93889627456365066, 1.0138764033021366)
scores = (0.51034074693027753, 0.45573042543054126)
score = 0.4830355861804094
holdout = (0.6171963794708605, 0.5932504572565415)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 544)
train = (0.73686046729197252, 1.1327197680887293)
scores = (0.5384915828919743, 0.45237840859926953)
score = 0.4954349957456219
holdout = (0.5482211357118817, 0.66070871968079)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (35, 544)
train = (0.73686046729197252, 1.1327197680887293)
scores = (0.5384915828919743, 0.45237840859926953)
score = 0.4954349957456219
holdout = (0.5482211357118817, 0.66070871968079)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 256)
train = (1.3463986819657672, 1.0573458682059897)
scores = (0.56275840853209147, 0.44581664771544871)
score = 0.5042875281237701
holdout = (0.7381999305604012, 0.6291282511498392)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 221)
train = (1.2594875627799651, 1.1179167093515261)
scores = (0.53645214050220291, 0.47195636778672817)
score = 0.5042042541444656
holdout = (0.7204884532387045, 0.6227473663548826)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 231)
train = (0.73316686263796749, 1.1150363540880905)
scores = (0.54253225680338268, 0.43905038427208426)
score = 0.49079132053773344
holdout = (0.5509824128026897, 0.6478530253209267)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (88, 256)
train = (1.3463986819657672, 1.0573458682059897)
scores = (0.56275840853209147, 0.44581664771544871)
score = 0.5042875281237701
holdout = (0.7381999305604012, 0.6291282511498392)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 485)
train = (1.2669916255417362, 1.1753131380416308)
scores = (0.56797550712723832, 0.48259733032596774)
score = 0.5252864187266031
holdout = (0.7160596211277935, 0.6579136665218273)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 2)
train = (1.4441011531321093, 0.8536351111963586)
scores = (0.52981329276521771, 0.41033578685173044)
score = 0.4700745398084741
holdout = (0.7750964232346532, 0.535350415485406)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 284)
train = (0.73635586062429093, 1.2111954451608593)
scores = (0.54153965288822159, 0.44087206031582338)
score = 0.4912058566020225
holdout = (0.554349691580399, 0.6751528393516321)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (51, 485)
train = (1.2669916255417362, 1.1753131380416308)
scores = (0.56797550712723832, 0.48259733032596774)
score = 0.5252864187266031
holdout = (0.7160596211277935, 0.6579136665218273)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 206)
train = (1.3956199651811612, 1.184938408159329)
scores = (0.56802363328894678, 0.45215915554515546)
score = 0.5100913944170511
holdout = (0.7473407276506893, 0.6642293475458496)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (26, 2)
train = (1.6129749377383902, 0.95473962704802284)
scores = (0.54443728770786637, 0.42576852645534757)
score = 0.48510290708160697
holdout = (0.8009579513696651, 0.5756721376176184)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 250)
train = (0.7363558606242907, 1.2017612633859629)
scores = (0.5415396528882217, 0.44240088357733581)
score = 0.4919702682327788
holdout = (0.5543496915803992, 0.6750185059036846)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (59, 206)
train = (1.3956199651811612, 1.184938408159329)
scores = (0.56802363328894678, 0.45215915554515546)
score = 0.5100913944170511
holdout = (0.7473407276506893, 0.6642293475458496)
>>> t = 2503 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 284
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|Volatility)
            & [10:,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[21:,62:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|vp1dd)
            & index[2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[5]} 
                | Drawup[10:,20:, 10:5,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,5:,20:] 
      }
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.0, 2011.5, 2009.0, 2014.75, 2014.25, 2009.75, 2010.75, 2011.75, 2009.5, 2013.0, 2014.0, 2015.25}), frozenset({2010.0, 2012.25, 2012.5, 2012.75, 2013.5, 2013.75, 2009.25, 2010.25, 2011.25, 2012.0, 2013.25, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 169)
train = (0.84019416568910832, 1.1118128024279084)
scores = (0.57019457121679773, 0.43567994566199203)
score = 0.5029372584393949
holdout = (0.5962572937561424, 0.6315181130185934)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (141, 180)
train = (0.80834674765544445, 1.1515879564008853)
scores = (0.51956537000748249, 0.40763914008942048)
score = 0.4636022550484515
holdout = (0.5444983307883817, 0.6473805308035708)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (222, 461)
train = (1.0127566150846141, 1.2801956271803276)
scores = (0.55922325801188244, 0.47152694802013517)
score = 0.5153751030160088
holdout = (0.6572190890314107, 0.6996686353840192)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (222, 461)
train = (1.0127566150846141, 1.2801956271803276)
scores = (0.55922325801188244, 0.47152694802013517)
score = 0.5153751030160088
holdout = (0.6572190890314107, 0.6996686353840192)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (171, 225)
train = (0.97423658903838384, 1.2913853595697369)
scores = (0.60454030516020274, 0.45813376947806517)
score = 0.531337037319134
holdout = (0.6512206550851876, 0.6993399485791109)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 72)
train = (0.80851196425693983, 1.150548256958811)
scores = (0.52962668514123423, 0.39299370414561985)
score = 0.46131019464342704
holdout = (0.5451565017047317, 0.642006211644123)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (253, 392)
train = (1.170884532943592, 1.3219005159577388)
scores = (0.59170978168773825, 0.47316063189016094)
score = 0.5324352067889496
holdout = (0.713179430467866, 0.7073545815660219)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (253, 392)
train = (1.170884532943592, 1.3219005159577388)
scores = (0.59170978168773825, 0.47316063189016094)
score = 0.5324352067889496
holdout = (0.713179430467866, 0.7073545815660219)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (233, 207)
train = (1.1197104989134827, 1.3503621403790664)
scores = (0.60537523542251293, 0.45208483456674353)
score = 0.5287300349946282
holdout = (0.6858293091116818, 0.7119887830588888)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 101)
train = (1.0266460240828321, 1.3513691876876492)
scores = (0.5341087575660215, 0.41741589997021833)
score = 0.4757623287681199
holdout = (0.6164173723429041, 0.6939724592495123)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (297, 490)
train = (1.2807726793048813, 1.4169501154887858)
scores = (0.59352315035326175, 0.47418634759558753)
score = 0.5338547489744246
holdout = (0.7481910997718108, 0.7330497638084834)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (297, 490)
train = (1.2807726793048813, 1.4169501154887858)
scores = (0.59352315035326175, 0.47418634759558753)
score = 0.5338547489744246
holdout = (0.7481910997718108, 0.7330497638084834)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 227)
train = (0.8536466804610604, 1.428300740706496)
scores = (0.5414305252413294, 0.45676375510843337)
score = 0.4990971401748814
holdout = (0.6037446766180056, 0.7306134704883988)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (217, 45)
train = (1.3833679543918971, 1.344319437444115)
scores = (0.57247494267700527, 0.41932826053059752)
score = 0.49590160160380137
holdout = (0.6975358846898614, 0.6974447387115297)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (305, 568)
train = (1.3225462276159619, 1.4713260168006668)
scores = (0.58313625403137703, 0.48304389701496042)
score = 0.5330900755231687
holdout = (0.7523091220368447, 0.7509881846524746)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (305, 568)
train = (1.3225462276159619, 1.4713260168006668)
scores = (0.58313625403137703, 0.48304389701496042)
score = 0.5330900755231687
holdout = (0.7523091220368447, 0.7509881846524746)
>>> t = 2600 ===================================================================================================
(pair) len(F.columns) = 167
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.75, 2012.0, 2012.75, 2013.25, 2013.75, 2014.25, 2010.0, 2011.5, 2012.25, 2013.0, 2014.0, 2015.25}), frozenset({2010.5, 2010.75, 2009.0, 2009.25, 2009.75, 2014.5, 2009.5, 2010.25, 2011.25, 2012.5, 2013.5, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (189, 676)
train = (1.4515720541814157, 1.0475702044776558)
scores = (0.52257478498936316, 0.41413746400080198)
score = 0.46835612449508257
holdout = (0.7400299818743148, 0.632652631187249)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (180, 33)
train = (1.7050652067098624, 0.70844005167802637)
scores = (0.52763007140199336, 0.32755866256628946)
score = 0.42759436698414144
holdout = (0.8207192219908929, 0.47349492842699015)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (645, 582)
train = (1.610812558869962, 1.0519656339034522)
scores = (0.50719680809622314, 0.40141488212746379)
score = 0.45430584511184346
holdout = (0.7733323850478633, 0.638465492684996)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (189, 676)
train = (1.4515720541814157, 1.0475702044776558)
scores = (0.52257478498936316, 0.41413746400080198)
score = 0.46835612449508257
holdout = (0.7400299818743148, 0.632652631187249)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (473, 41)
train = (1.8568675977528624, 0.7900572409298634)
scores = (0.57647494189983339, 0.34105619550150973)
score = 0.45876556870067153
holdout = (0.8621292973777538, 0.5039766740956765)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (163, 485)
train = (1.8256211011267094, 1.1399789929196174)
scores = (0.54508946845457207, 0.42132945388105003)
score = 0.48320946116781105
holdout = (0.8400747977335802, 0.6208473515102527)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (614, 768)
train = (1.6987978298904394, 1.1811194421269737)
scores = (0.50972388707706029, 0.42184804896396366)
score = 0.465785968020512
holdout = (0.7899620759320533, 0.6846627512313376)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (163, 485)
train = (1.8256211011267094, 1.1399789929196174)
scores = (0.54508946845457207, 0.42132945388105003)
score = 0.48320946116781105
holdout = (0.8400747977335802, 0.6208473515102527)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (427, 463)
train = (1.947421973810626, 1.2013186143422108)
scores = (0.57799089379552304, 0.4252873729162101)
score = 0.5016391333558665
holdout = (0.8742486834180029, 0.6809501055692725)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (195, 465)
train = (1.9674171023241116, 1.2783190701821534)
scores = (0.55357900357016154, 0.45161430663725838)
score = 0.50259665510371
holdout = (0.8353168974853767, 0.6524324931868413)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (326, 492)
train = (1.4243685948183571, 1.1198738382783897)
scores = (0.47109232906991566, 0.40836175564313565)
score = 0.43972704235652565
holdout = (0.701650089138859, 0.6597447418134582)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (195, 465)
train = (1.9674171023241116, 1.2783190701821534)
scores = (0.55357900357016154, 0.45161430663725838)
score = 0.50259665510371
holdout = (0.8353168974853767, 0.6524324931868413)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (320, 477)
train = (1.9307933614255914, 1.2781405605994103)
scores = (0.57649485577811299, 0.42768119542662364)
score = 0.5020880256023683
holdout = (0.8730167890008184, 0.7013063249660356)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (268, 439)
train = (2.1026064599319434, 1.3782900889245511)
scores = (0.56731016878790652, 0.4475990816167652)
score = 0.5074546252023359
holdout = (0.833341753814788, 0.6749382665186284)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (874, 628)
train = (1.8714726688225045, 1.1790241358703812)
scores = (0.52535182784912537, 0.42033855843720336)
score = 0.47284519314316437
holdout = (0.8356773242513426, 0.6822290402157457)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (268, 439)
train = (2.1026064599319434, 1.3782900889245511)
scores = (0.56731016878790652, 0.4475990816167652)
score = 0.5074546252023359
holdout = (0.833341753814788, 0.6749382665186284)
>>> t = 2601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.5, 2010.25, 2015.0, 2011.25, 2012.5, 2009.5, 2010.75, 2011.75, 2009.0, 2013.75, 2014.5, 2015.25}), frozenset({2011.0, 2012.25, 2012.75, 2009.75, 2013.25, 2013.5, 2014.25, 2014.0, 2009.25, 2011.5, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 99)
train = (0.73846877754806484, 0.94495877864197331)
scores = (0.33669528474767091, 0.52288914158785604)
score = 0.4297922131677635
holdout = (0.47627776836472646, 0.6233214888273859)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (65, 41)
train = (0.72895799186642474, 0.75243866301826712)
scores = (0.34173153214057816, 0.4265900757285736)
score = 0.38416080393457586
holdout = (0.4865755516455708, 0.521810771721184)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (38, 270)
train = (0.64796724048421284, 0.97174433844739561)
scores = (0.34549449833979073, 0.55358447323802684)
score = 0.4495394857889088
holdout = (0.4415104100540946, 0.6495828606297138)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (38, 270)
train = (0.64796724048421284, 0.97174433844739561)
scores = (0.34549449833979073, 0.55358447323802684)
score = 0.4495394857889088
holdout = (0.4415104100540946, 0.6495828606297138)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (27, 90)
train = (0.78946837842988882, 1.0698098619163996)
scores = (0.34428514189735393, 0.51963340774169609)
score = 0.431959274819525
holdout = (0.49853218132371213, 0.6555358525825896)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (54, 46)
train = (0.83375708792822412, 0.93136635723632355)
scores = (0.34857843634587482, 0.45879379502175816)
score = 0.4036861156838165
holdout = (0.5322650889092009, 0.6031763250814011)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 316)
train = (0.66974785885250521, 1.087414598917898)
scores = (0.34390900827349219, 0.57483534400681235)
score = 0.45937217614015224
holdout = (0.4483080277879406, 0.6981386040276985)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (40, 316)
train = (0.66974785885250521, 1.087414598917898)
scores = (0.34390900827349219, 0.57483534400681235)
score = 0.45937217614015224
holdout = (0.4483080277879406, 0.6981386040276985)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (316, 91)
train = (1.2834079408247432, 1.1468991063890368)
scores = (0.37038166949497353, 0.53348478235602403)
score = 0.4519332259254988
holdout = (0.6919610148348273, 0.6851113161545691)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (58, 17)
train = (0.99305174912654715, 0.98504507056121171)
scores = (0.35467157984543685, 0.45548893276843994)
score = 0.4050802563069384
holdout = (0.5907708109984771, 0.6174041320896068)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 322)
train = (0.66709383424069713, 1.1132628466031622)
scores = (0.34398240915185702, 0.56673069072578497)
score = 0.455356549938821
holdout = (0.4479075527187334, 0.7034448464694515)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (39, 322)
train = (0.66709383424069713, 1.1132628466031622)
scores = (0.34398240915185702, 0.56673069072578497)
score = 0.455356549938821
holdout = (0.4479075527187334, 0.7034448464694515)
>>> t = 2602 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2010.75, 2011.25, 2009.25, 2014.5, 2009.0, 2015.0, 2011.5, 2012.0, 2013.0, 2014.0, 2015.25}), frozenset({2011.75, 2012.5, 2012.75, 2009.75, 2013.5, 2013.75, 2014.25, 2009.5, 2010.5, 2011.0, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (452, 672)
train = (0.90672625016484609, 1.7085620589265802)
scores = (0.56889139860856464, 0.48362678506685719)
score = 0.5262590918377109
holdout = (0.595045121288273, 0.8133318684734919)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 472)
train = (0.59709746290617116, 1.9501229325249594)
scores = (0.52724072867668859, 0.48172017176500787)
score = 0.5044804502208482
holdout = (0.4483353111208055, 0.8515545318132443)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 679)
train = (0.55785059042761842, 1.3790559399822606)
scores = (0.52158018329686862, 0.45208440450914705)
score = 0.48683229390300786
holdout = (0.46833238882101946, 0.7089349651051869)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (452, 672)
train = (0.90672625016484609, 1.7085620589265802)
scores = (0.56889139860856464, 0.48362678506685719)
score = 0.5262590918377109
holdout = (0.595045121288273, 0.8133318684734919)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 735)
train = (0.65400451302847251, 2.0079125693228135)
scores = (0.53434568279129535, 0.49023800544346174)
score = 0.5122918441173785
holdout = (0.5051625467234394, 0.8691551480623569)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 443)
train = (0.69719555195385596, 2.2336986064982347)
scores = (0.52870706291804614, 0.49972998429479759)
score = 0.5142185236064218
holdout = (0.4890540746583435, 0.8826473039821283)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (171, 547)
train = (0.88865144657597694, 1.366879762885997)
scores = (0.5538269343590313, 0.44758559802736786)
score = 0.5007062661931996
holdout = (0.6009142834311937, 0.7041285829414514)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (39, 443)
train = (0.69719555195385596, 2.2336986064982347)
scores = (0.52870706291804614, 0.49972998429479759)
score = 0.5142185236064218
holdout = (0.4890540746583435, 0.8826473039821283)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 825)
train = (0.67784665518151632, 2.2344825910765689)
scores = (0.5476520742943547, 0.50893841106939663)
score = 0.5282952426818757
holdout = (0.5202988976153504, 0.9077006715300597)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (316, 267)
train = (1.1431558034889311, 2.3185345360967515)
scores = (0.59075607482779535, 0.49240653045611299)
score = 0.5415813026419541
holdout = (0.6227226495886273, 0.8843922572678709)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 702)
train = (0.57046945075940947, 1.5404330272761879)
scores = (0.52219216865833173, 0.46019870855486261)
score = 0.4911954386065972
holdout = (0.47373165961768265, 0.7517570693403757)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (316, 267)
train = (1.1431558034889311, 2.3185345360967515)
scores = (0.59075607482779535, 0.49240653045611299)
score = 0.5415813026419541
holdout = (0.6227226495886273, 0.8843922572678709)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 493)
train = (0.71005765536981424, 2.0708618729851307)
scores = (0.55679609332809799, 0.4920190568478755)
score = 0.5244075750879867
holdout = (0.5369158019285357, 0.8728773474597905)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (245, 313)
train = (1.1975245463012618, 2.5063661251427929)
scores = (0.59602151804206016, 0.50104101185090477)
score = 0.5485312649464824
holdout = (0.6378502276949113, 0.8954452941702868)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 520)
train = (0.57046945075940936, 1.3623163585185791)
scores = (0.52219216865833196, 0.44726397165645887)
score = 0.4847280701573954
holdout = (0.4737316596176827, 0.7001979116975883)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (245, 313)
train = (1.1975245463012618, 2.5063661251427929)
scores = (0.59602151804206016, 0.50104101185090477)
score = 0.5485312649464824
holdout = (0.6378502276949113, 0.8954452941702868)
>>> t = 2603 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 213
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc|doo|dcc|daoc)
            & index[1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd)
            & [5:,15:,20:10,20:5] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5]} 
                | Since{Min & index[0]} 
              )
            & Since[21:, 125:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [3:,6:,9:,12:,15:,9:6,12:9,18:15,9:3,12:6,15:6,15:3,21:9,18:3] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[5]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [5:,10:,15:10,20:15,15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:,20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <> Volatility[20:, 60:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 125:] 
          )
      )
    | 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.25, 2012.0, 2012.75, 2013.25, 2013.0, 2014.75, 2010.25, 2011.5, 2012.25, 2013.75, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2009.0, 2009.25, 2009.75, 2014.0, 2009.5, 2010.0, 2011.75, 2012.5, 2013.5, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (577, 33)
train = (1.6909300248825976, 0.71721192691409419)
scores = (0.49043533800344308, 0.42574756005430797)
score = 0.45809144902887555
holdout = (0.7978114346258608, 0.5111094335138404)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (272, 5)
train = (1.6437356233521137, 0.56617027696599265)
scores = (0.46408842211279655, 0.42651598157327958)
score = 0.44530220184303804
holdout = (0.7784079075273799, 0.43564412544264264)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (388, 46)
train = (1.2275517646360077, 0.67746903516843415)
scores = (0.41817502447158006, 0.39950099875249551)
score = 0.4088380116120378
holdout = (0.6444258182937793, 0.47512710201504216)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (577, 33)
train = (1.6909300248825976, 0.71721192691409419)
scores = (0.49043533800344308, 0.42574756005430797)
score = 0.45809144902887555
holdout = (0.7978114346258608, 0.5111094335138404)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (527, 15)
train = (1.820916961483434, 0.70911354194987442)
scores = (0.50729969469130032, 0.42626807972368191)
score = 0.4667838872074911
holdout = (0.8279887452144488, 0.5062445916372146)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (364, 7)
train = (1.8813888813644715, 0.6576814736821146)
scores = (0.48457036639436246, 0.43088358164941715)
score = 0.4577269740218898
holdout = (0.8139812539153265, 0.47305648632062264)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (513, 525)
train = (1.448452905817653, 1.1274774341992169)
scores = (0.44655902100831874, 0.46037625443538416)
score = 0.45346763772185145
holdout = (0.7182285349525496, 0.6720097164715991)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (527, 15)
train = (1.820916961483434, 0.70911354194987442)
scores = (0.50729969469130032, 0.42626807972368191)
score = 0.4667838872074911
holdout = (0.8279887452144488, 0.5062445916372146)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (356, 29)
train = (1.7777780162788421, 0.81129884549764886)
scores = (0.51294974810072913, 0.43381060252541126)
score = 0.4733801753130702
holdout = (0.8211204785042107, 0.5494348548445568)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (304, 6)
train = (1.9676026273976595, 0.76089942142495326)
scores = (0.50345386575776374, 0.43178145152361475)
score = 0.46761765864068927
holdout = (0.8210472471063149, 0.5201749199459139)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (705, 154)
train = (1.6483953316525233, 0.88652569780888324)
scores = (0.46672214366087322, 0.43071265938490488)
score = 0.4487174015228891
holdout = (0.7773506196005326, 0.5728075270209682)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (356, 29)
train = (1.7777780162788421, 0.81129884549764886)
scores = (0.51294974810072913, 0.43381060252541126)
score = 0.4733801753130702
holdout = (0.8211204785042107, 0.5494348548445568)
>>> t = 2700 ===================================================================================================
(pair) len(F.columns) = 14
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [3:,15:,18:,12:9,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:12,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[ 5:] 
                | Drawup[20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.25, 2011.5, 2012.0, 2009.5, 2014.25, 2009.0, 2010.0, 2011.0, 2012.25, 2014.75, 2015.0}), frozenset({2012.75, 2009.75, 2013.25, 2013.5, 2013.75, 2014.0, 2009.25, 2010.5, 2011.75, 2012.5, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 104)
train = (0.57175840274199519, 0.94298088791190848)
scores = (0.38723802814382802, 0.35556448142918262)
score = 0.3714012547865053
holdout = (0.4385882234218424, 0.5555918360866638)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 103)
train = (0.66566715906119422, 0.93609293315527831)
scores = (0.38664629108170945, 0.34293614873962824)
score = 0.3647912199106689
holdout = (0.4835652178542093, 0.5752008063243823)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 116)
train = (0.48393403816506825, 0.80391799240433093)
scores = (0.39400911479781209, 0.2987983471429857)
score = 0.3464037309703989
holdout = (0.4083373736651988, 0.47872471045199627)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 104)
train = (0.57175840274199519, 0.94298088791190848)
scores = (0.38723802814382802, 0.35556448142918262)
score = 0.3714012547865053
holdout = (0.4385882234218424, 0.5555918360866638)
>>> t = 2701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp5dd|Volatility)
            & [3:,15:,18:,12:9,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:12,18:6,21:9,21:6] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[ 5:] 
                | Drawup[20:10] 
                | Since{Min&index[10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.5, 2011.25, 2012.25, 2012.5, 2013.0, 2014.5, 2014.25, 2009.75, 2011.0, 2009.5, 2013.75, 2014.75, 2015.25}), frozenset({2010.0, 2010.75, 2010.5, 2012.75, 2009.25, 2013.5, 2009.0, 2010.25, 2011.75, 2012.0, 2013.25, 2014.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 11)
train = (1.079860928171761, 0.55870092696978024)
scores = (0.34546988759399283, 0.37831036992547296)
score = 0.3618901287597329
holdout = (0.5847669175904533, 0.4517351027166023)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 25)
train = (0.75466821658734573, 0.49727464828975065)
scores = (0.34371769114506484, 0.39591690274374647)
score = 0.3698172969444057
holdout = (0.49590951440487496, 0.3663622450223766)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 14)
train = (0.91822751211305642, 0.6000733660970391)
scores = (0.28768749110842456, 0.38834241051881485)
score = 0.3380149508136197
holdout = (0.49210220054387666, 0.44901808341067284)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 25)
train = (0.75466821658734573, 0.49727464828975065)
scores = (0.34371769114506484, 0.39591690274374647)
score = 0.3698172969444057
holdout = (0.49590951440487496, 0.3663622450223766)
>>> t = 2800 ===================================================================================================
(pair) len(F.columns) = 15
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 33
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [12:,6:3,18:15,21:12,15:3,18:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [20:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.75, 2011.0, 2012.5, 2009.25, 2014.75, 2009.75, 2010.5, 2011.25, 2012.75, 2013.0, 2014.0}), frozenset({2010.75, 2015.0, 2012.25, 2009.0, 2013.5, 2013.75, 2014.25, 2009.5, 2010.0, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 58)
train = (0.59844107333682373, 0.812725589557309)
scores = (0.25481764729902628, 0.41713561236629865)
score = 0.33597662983266247
holdout = (0.349181415396808, 0.533992533100708)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 41)
train = (0.60991028789184942, 0.81319865015324055)
scores = (0.28277147780401374, 0.38957685981185941)
score = 0.3361741688079366
holdout = (0.3993135675724131, 0.5394596061292802)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 61)
train = (0.76162279408499611, 0.54282959003612385)
scores = (0.28874206127627972, 0.39776163571598339)
score = 0.34325184849613155
holdout = (0.4286462293039343, 0.4212670040239415)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (271, 61)
train = (0.76162279408499611, 0.54282959003612385)
scores = (0.28874206127627972, 0.39776163571598339)
score = 0.34325184849613155
holdout = (0.4286462293039343, 0.4212670040239415)
>>> t = 2801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 33
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [12:,6:3,18:15,21:12,15:3,18:6] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [20:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.5, 2011.0, 2012.5, 2012.25, 2009.25, 2014.25, 2009.0, 2010.75, 2011.5, 2009.5, 2013.25, 2014.5}), frozenset({2015.0, 2011.75, 2012.75, 2013.5, 2013.75, 2014.0, 2009.75, 2010.25, 2011.25, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 592)
train = (0.51897866109867241, 1.338439860083124)
scores = (0.43707603882574214, 0.34541260325289425)
score = 0.39124432103931817
holdout = (0.4207092350016502, 0.6334154759984341)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.65416616807852013, 0.64293519804402544)
scores = (0.4337186207141544, 0.25095477051778348)
score = 0.3423366956159689
holdout = (0.4805837566348357, 0.38684331360203966)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 1)
train = (0.37956826586026027, 0.49309694683113708)
scores = (0.41386818368643641, 0.18855478874385329)
score = 0.3012114862151448
holdout = (0.3621666192696197, 0.30481902503468317)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 592)
train = (0.51897866109867241, 1.338439860083124)
scores = (0.43707603882574214, 0.34541260325289425)
score = 0.39124432103931817
holdout = (0.4207092350016502, 0.6334154759984341)
>>> t = 2900 ===================================================================================================
(pair) len(F.columns) = 60
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.0, 2012.0, 2012.25, 2013.75, 2013.5, 2013.0, 2009.75, 2010.75, 2011.25, 2012.75, 2013.25, 2014.25, 2015.0}), frozenset({2010.5, 2011.5, 2011.75, 2009.0, 2009.25, 2014.5, 2014.0, 2009.5, 2010.25, 2011.0, 2012.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 5)
train = (0.94517895998315116, 0.4830899093777184)
scores = (0.48145495521210191, 0.42365181053367806)
score = 0.45255338287289
holdout = (0.5951049349770561, 0.3709276456293494)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 11)
train = (1.1510998367620744, 0.4044401405030984)
scores = (0.48597739202722334, 0.48248411907614397)
score = 0.48423075555168366
holdout = (0.6786524652512438, 0.28907547186693855)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (196, 10)
train = (1.3073009075948814, 0.80487653833992334)
scores = (0.45203785491921761, 0.38934037984032338)
score = 0.4206891173797705
holdout = (0.6918270798424897, 0.5079426224415423)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (37, 11)
train = (1.1510998367620744, 0.4044401405030984)
scores = (0.48597739202722334, 0.48248411907614397)
score = 0.48423075555168366
holdout = (0.6786524652512438, 0.28907547186693855)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 19)
train = (1.018591165632974, 0.725763277665051)
scores = (0.49737180165230521, 0.47402254576408248)
score = 0.4856971737081939
holdout = (0.6297407048282603, 0.5311221742531337)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (203, 78)
train = (1.532979639898761, 0.78713641334884255)
scores = (0.55287331122165195, 0.53804054212707264)
score = 0.5454569266743623
holdout = (0.7678264543668754, 0.49539021558353313)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 34)
train = (1.113712763757841, 0.84828116597254899)
scores = (0.44830126584156732, 0.39433244338939782)
score = 0.42131685461548257
holdout = (0.6354397843763121, 0.5351281753520452)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (203, 78)
train = (1.532979639898761, 0.78713641334884255)
scores = (0.55287331122165195, 0.53804054212707264)
score = 0.5454569266743623
holdout = (0.7678264543668754, 0.49539021558353313)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 47)
train = (1.0051688132998597, 0.83172159045178895)
scores = (0.49057212456581734, 0.46998103190781482)
score = 0.4802765782368161
holdout = (0.6208700632302017, 0.5762427126861054)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 113)
train = (1.3074827524997599, 1.0474283179562276)
scores = (0.51659658065421821, 0.56063599456618685)
score = 0.5386162876102025
holdout = (0.7327439531642054, 0.5871064487135501)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (120, 32)
train = (1.218287738611652, 0.90970964080010119)
scores = (0.45683683436548006, 0.40567609162286883)
score = 0.4312564629941744
holdout = (0.6662778058319131, 0.5518297433075289)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (32, 113)
train = (1.3074827524997599, 1.0474283179562276)
scores = (0.51659658065421821, 0.56063599456618685)
score = 0.5386162876102025
holdout = (0.7327439531642054, 0.5871064487135501)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (24, 12)
train = (1.1878621963366947, 0.97090444617696625)
scores = (0.51008894724847487, 0.44301666566329784)
score = 0.4765528064558864
holdout = (0.6814248972612071, 0.6174842350755382)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (191, 4)
train = (1.7552272977654644, 0.67313987987271795)
scores = (0.58411595154811524, 0.51331582453534241)
score = 0.5487158880417289
holdout = (0.7817217052264424, 0.4579792672650506)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (169, 33)
train = (1.3783004552475786, 0.91330874182463417)
scores = (0.45986628711611732, 0.40342141885516802)
score = 0.4316438529856427
holdout = (0.7074045428658864, 0.5524842139475603)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (191, 4)
train = (1.7552272977654644, 0.67313987987271795)
scores = (0.58411595154811524, 0.51331582453534241)
score = 0.5487158880417289
holdout = (0.7817217052264424, 0.4579792672650506)
>>> t = 2901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2012.25, 2012.0, 2009.25, 2013.75, 2009.75, 2015.0, 2011.0, 2012.75, 2013.25, 2014.25, 2015.25}), frozenset({2010.75, 2011.5, 2011.75, 2009.0, 2013.5, 2014.5, 2014.0, 2009.5, 2010.5, 2011.25, 2012.5, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 6)
train = (0.59497837558501565, 1.0253904990243712)
scores = (0.5628938850754478, 0.28907089389044754)
score = 0.42598238948294764
holdout = (0.49234291524458906, 0.537406991760126)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 9)
train = (0.68284561954641887, 0.88596661133319987)
scores = (0.35233838440773008, 0.34383303640789564)
score = 0.3480857104078129
holdout = (0.44861569008539, 0.5290459811605047)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 488)
train = (0.79491610617838426, 1.3029815786154679)
scores = (0.52519038002686369, 0.39365962230044516)
score = 0.4594250011636544
holdout = (0.5395949334425443, 0.6755545778150154)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (37, 488)
train = (0.79491610617838426, 1.3029815786154679)
scores = (0.52519038002686369, 0.39365962230044516)
score = 0.4594250011636544
holdout = (0.5395949334425443, 0.6755545778150154)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 5)
train = (0.75403282065046495, 1.112393284513725)
scores = (0.59714440757794884, 0.2988500074014479)
score = 0.4479972074896984
holdout = (0.5707072993922357, 0.5695248220345008)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (45, 4)
train = (0.82105136553596336, 1.0069525581210219)
scores = (0.38908865951603683, 0.36038969976303664)
score = 0.37473917963953673
holdout = (0.5176565275217622, 0.5807934682625207)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (196, 453)
train = (1.2714841303220767, 1.4558534706862707)
scores = (0.54715885781922613, 0.41866224562631499)
score = 0.48291055172277053
holdout = (0.7157539929094153, 0.7214431272080342)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (196, 453)
train = (1.2714841303220767, 1.4558534706862707)
scores = (0.54715885781922613, 0.41866224562631499)
score = 0.48291055172277053
holdout = (0.7157539929094153, 0.7214431272080342)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 5)
train = (0.83674746459704552, 1.1766000503662846)
scores = (0.60687278881119666, 0.29810484446363478)
score = 0.4524888166374157
holdout = (0.614996482867096, 0.5837448522045654)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (33, 6)
train = (0.8735213464934759, 1.1528962309984123)
scores = (0.37731935353323964, 0.37365847409232023)
score = 0.37548891381277993
holdout = (0.5380545539797641, 0.6211403161457739)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (31, 400)
train = (0.83313512448742544, 1.5277805497974912)
scores = (0.5120807547434062, 0.42667040205883727)
score = 0.46937557840112176
holdout = (0.5538622020321479, 0.7385506952851884)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (31, 400)
train = (0.83313512448742544, 1.5277805497974912)
scores = (0.5120807547434062, 0.42667040205883727)
score = 0.46937557840112176
holdout = (0.5538622020321479, 0.7385506952851884)
>>> t = 2902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2012.5, 2012.0, 2009.25, 2013.0, 2013.5, 2014.0, 2009.75, 2010.25, 2011.5, 2012.25, 2013.75, 2014.5, 2015.25}), frozenset({2010.5, 2010.75, 2011.25, 2011.75, 2009.0, 2014.25, 2009.5, 2010.0, 2011.0, 2012.75, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 270)
train = (0.96839341208698781, 1.0383482773694126)
scores = (0.51536373545000758, 0.34033184222751434)
score = 0.42784778883876096
holdout = (0.6277620130704052, 0.5904498366720011)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (37, 8)
train = (0.86285912956222022, 0.73156522125327694)
scores = (0.36621435896812354, 0.1473542267152044)
score = 0.256784292841664
holdout = (0.5560459642443392, 0.4186553220459229)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 33)
train = (0.62315099496889725, 0.78040994680161579)
scores = (0.46051404850615568, 0.32843489402477649)
score = 0.3944744712654661
holdout = (0.4612306660084156, 0.4802426621366611)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (64, 270)
train = (0.96839341208698781, 1.0383482773694126)
scores = (0.51536373545000758, 0.34033184222751434)
score = 0.42784778883876096
holdout = (0.6277620130704052, 0.5904498366720011)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (57, 202)
train = (1.154558679271982, 1.1098776906795775)
scores = (0.50813814639727339, 0.36211232330060911)
score = 0.4351252348489413
holdout = (0.6789274161483645, 0.6197359609227554)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (122, 80)
train = (1.1379312272739206, 0.95919389406546718)
scores = (0.37546845439136667, 0.31050146789800132)
score = 0.342984961144684
holdout = (0.6282450706068562, 0.5524345768922044)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (169, 24)
train = (1.385136987542666, 0.78252605885456661)
scores = (0.53140439250482996, 0.32856709510065368)
score = 0.4299857438027418
holdout = (0.7467564420754139, 0.47302669342095105)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (57, 202)
train = (1.154558679271982, 1.1098776906795775)
scores = (0.50813814639727339, 0.36211232330060911)
score = 0.4351252348489413
holdout = (0.6789274161483645, 0.6197359609227554)
>>> t = 2903 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 124
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                | Since{Max & index[0,10]} 
                | Since{Min & index[0]} 
              )
            & Since[ 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.25, 2012.75, 2012.0, 2012.25, 2009.0, 2009.75, 2010.5, 2011.5, 2012.5, 2013.25, 2014.25, 2015.25}), frozenset({2010.25, 2010.75, 2013.5, 2013.75, 2014.5, 2014.0, 2009.5, 2010.0, 2011.0, 2009.25, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (80, 43)
train = (0.78255408989332387, 0.95544935402970332)
scores = (0.45873506598482183, 0.50334095337324924)
score = 0.48103800967903554
holdout = (0.5500801894681547, 0.613500680572252)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 65)
train = (0.69931951461397879, 0.90346931346684622)
scores = (0.25329691771046248, 0.46566379086609899)
score = 0.35948035428828073
holdout = (0.38347962264023105, 0.5912135173061902)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (214, 75)
train = (1.0468940351954774, 0.88214804392745649)
scores = (0.52727024862943805, 0.48261945781092219)
score = 0.5049448532201801
holdout = (0.669030454779235, 0.5734932125050777)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (214, 75)
train = (1.0468940351954774, 0.88214804392745649)
scores = (0.52727024862943805, 0.48261945781092219)
score = 0.5049448532201801
holdout = (0.669030454779235, 0.5734932125050777)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 49)
train = (0.96777796626430845, 1.070631056734604)
scores = (0.46954008283483412, 0.52563884062822852)
score = 0.4975894617315313
holdout = (0.6120510997700718, 0.6542982174596584)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 47)
train = (0.76927391659617228, 1.0171336314743245)
scores = (0.31189493399356699, 0.46406245689292286)
score = 0.3879786954432449
holdout = (0.45522429357820315, 0.6255399588041459)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (170, 78)
train = (1.1339085591793676, 0.98471067832083314)
scores = (0.53375901381798452, 0.48501386946113045)
score = 0.5093864416395575
holdout = (0.6966161835029256, 0.6048373614686773)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (170, 78)
train = (1.1339085591793676, 0.98471067832083314)
scores = (0.53375901381798452, 0.48501386946113045)
score = 0.5093864416395575
holdout = (0.6966161835029256, 0.6048373614686773)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (85, 58)
train = (1.0064731981001063, 1.1949149683980318)
scores = (0.51098082964289282, 0.52668627019256087)
score = 0.5188335499177268
holdout = (0.6408016944694377, 0.6882338091084563)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 41)
train = (0.80460499352231574, 1.1579500925856911)
scores = (0.40088817612406702, 0.47055901268339428)
score = 0.43572359440373065
holdout = (0.4983500447501139, 0.6679815772435892)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (149, 457)
train = (1.2021230892390167, 1.7077230345530521)
scores = (0.54423098252344648, 0.55520460096863011)
score = 0.5497177917460383
holdout = (0.7129998996900655, 0.8172063297179015)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (149, 457)
train = (1.2021230892390167, 1.7077230345530521)
scores = (0.54423098252344648, 0.55520460096863011)
score = 0.5497177917460383
holdout = (0.7129998996900655, 0.8172063297179015)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (151, 76)
train = (1.1444664476844717, 1.3428208180464976)
scores = (0.50700358222257025, 0.52323821724552211)
score = 0.5151208997340462
holdout = (0.6746631866029591, 0.7272370537623695)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 32)
train = (0.90755856802364732, 1.2714905839548347)
scores = (0.45772867368613618, 0.48531191357024112)
score = 0.47152029362818865
holdout = (0.5504587783993149, 0.6978189979346245)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 91)
train = (1.1923651306534111, 1.095250073219078)
scores = (0.5363907420501034, 0.48793173419122449)
score = 0.5121612381206639
holdout = (0.7133501545439731, 0.6406793082126061)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (151, 76)
train = (1.1444664476844717, 1.3428208180464976)
scores = (0.50700358222257025, 0.52323821724552211)
score = 0.5151208997340462
holdout = (0.6746631866029591, 0.7272370537623695)
>>> t = 3000 ===================================================================================================
(pair) len(F.columns) = 31
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 49
    <>~Market & (
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,11,12,13,14,15]}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|daoc)
            & index[0,1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [5:,10:5,15:10,20:15,15:5,20:10,20:5] 
          }
      )
    | 
        | FracRec[21:,62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2012.75, 2009.0, 2009.75, 2013.5, 2014.75, 2014.5, 2009.25, 2010.0, 2011.5, 2012.0, 2013.25, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2011.25, 2011.75, 2012.5, 2013.75, 2009.5, 2010.25, 2011.0, 2012.25, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 145)
train = (0.57606868912970111, 1.050340428150589)
scores = (0.32534855864294598, 0.41133720760001541)
score = 0.36834288312148067
holdout = (0.4136811865800934, 0.5941670221205604)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 26)
train = (0.51317756357459543, 0.83644131431379032)
scores = (0.31974306989734758, 0.37238937497190383)
score = 0.3460662224346257
holdout = (0.38033940512248093, 0.4910852789886256)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 4)
train = (0.50011161732234188, 0.40286533108610506)
scores = (0.32423919264528256, 0.40771416173598463)
score = 0.3659766771906336
holdout = (0.38484564497429546, 0.3655388858166603)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (3, 145)
train = (0.57606868912970111, 1.050340428150589)
scores = (0.32534855864294598, 0.41133720760001541)
score = 0.36834288312148067
holdout = (0.4136811865800934, 0.5941670221205604)
>>> t = 3001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 49
    <>~Market & (
      )
    | Market{.& 
        <>( Weight)
        & ( VP| Volatility)
        & [60:] 
      }
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,11,12,13,14,15]}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|daoc)
            & index[0,1,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd)
            & [5:,10:5,15:10,20:15,15:5,20:10,20:5] 
          }
      )
    | 
        | FracRec[21:,62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.0, 2011.5, 2009.5, 2013.25, 2014.75, 2014.5, 2009.75, 2010.25, 2011.0, 2012.0, 2013.5, 2014.25, 2015.0}), frozenset({2010.5, 2011.75, 2012.5, 2012.75, 2009.25, 2013.75, 2009.0, 2010.75, 2011.25, 2012.25, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (36, 115)
train = (0.72296430580822424, 0.64212666208522906)
scores = (0.32936376029246117, 0.39700792551977676)
score = 0.363185842906119
holdout = (0.4468410333131089, 0.4557786059724715)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (23, 187)
train = (0.94304177815437507, 0.65179511351984165)
scores = (0.29803198810134957, 0.43474784920846338)
score = 0.36638991865490644
holdout = (0.49994924500141125, 0.42902392383606425)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 21)
train = (0.81618939979113891, 0.46712027156070585)
scores = (0.3459631873342362, 0.3910295648451505)
score = 0.3684963760896933
holdout = (0.480715138881476, 0.4052151342665327)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (152, 21)
train = (0.81618939979113891, 0.46712027156070585)
scores = (0.3459631873342362, 0.3910295648451505)
score = 0.3684963760896933
holdout = (0.480715138881476, 0.4052151342665327)
>>> t = 3100 ===================================================================================================
(pair) len(F.columns) = 7
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 6
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,6:,9:,12:,15:,18:,9:6,12:9,12:6,18:12,18:9,21:12,18:6,21:9,21:3] 
          }
      )
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.25, 2011.75, 2012.75, 2013.75, 2013.0, 2010.5, 2011.5, 2012.0, 2013.25, 2014.75, 2015.25}), frozenset({2012.5, 2009.0, 2009.25, 2009.75, 2014.25, 2014.0, 2009.5, 2010.25, 2011.0, 2012.25, 2013.5, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 95)
train = (0.34641400332840977, 0.39382487191612825)
scores = (0.28929509547912008, 0.26857555092904661)
score = 0.2789353232040833
holdout = (0.2946834380539409, 0.3048981790827629)
>>> t = 3101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 6
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,6:,9:,12:,15:,18:,9:6,12:9,12:6,18:12,18:9,21:12,18:6,21:9,21:3] 
          }
      )
#<>#
0
#<>#
    <>0
len(samps) = 2
(frozenset({2010.75, 2015.0, 2011.0, 2011.5, 2012.75, 2014.0, 2014.5, 2010.25, 2011.25, 2012.5, 2013.75, 2014.75, 2015.25}), frozenset({2010.5, 2012.25, 2009.0, 2009.25, 2013.25, 2013.5, 2009.75, 2009.5, 2010.0, 2011.75, 2012.0, 2013.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (274, 25)
train = (0.5539522062483514, 0.27986951947488803)
scores = (0.18195605231733117, 0.37068349339077511)
score = 0.2763197728540531
holdout = (0.2999475400366136, 0.2886833122622919)
>>> t = 3200 ===================================================================================================
(pair) len(F.columns) = 69
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2015.25, 2011.0, 2012.75, 2012.0, 2009.75, 2013.5, 2009.25, 2010.75, 2011.25, 2012.25, 2013.0, 2014.0, 2015.0}), frozenset({2010.25, 2010.5, 2011.75, 2009.0, 2013.75, 2014.5, 2014.25, 2009.5, 2010.0, 2011.5, 2012.5, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (199, 308)
train = (1.2436899948043236, 1.0363061633989081)
scores = (0.52138556781959822, 0.44078290031511308)
score = 0.4810842340673557
holdout = (0.7166864440779751, 0.6304638759844032)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (268, 269)
train = (1.3043705576865052, 0.95636846649847118)
scores = (0.48266846624800042, 0.46470405137936793)
score = 0.4736862588136842
holdout = (0.7088024914860085, 0.5914779883565392)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 406)
train = (1.156599639608995, 1.0889812959289187)
scores = (0.55701252593549799, 0.42323785675983916)
score = 0.4901251913476686
holdout = (0.6869418345591641, 0.6458135078951047)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (186, 406)
train = (1.156599639608995, 1.0889812959289187)
scores = (0.55701252593549799, 0.42323785675983916)
score = 0.4901251913476686
holdout = (0.6869418345591641, 0.6458135078951047)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 383)
train = (1.3187982239876694, 1.1790929477663834)
scores = (0.51861234586665184, 0.47942399465995139)
score = 0.49901817026330164
holdout = (0.7303505188631856, 0.6792184197361141)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (256, 364)
train = (1.4552335763336295, 1.2446732588540159)
scores = (0.50563037728049509, 0.50326324602159167)
score = 0.5044468116510434
holdout = (0.7408555590895485, 0.6706057402678313)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (234, 486)
train = (1.3473058076986058, 1.2648508879380576)
scores = (0.59228129442624222, 0.45598356329482764)
score = 0.5241324288605349
holdout = (0.7562644127479664, 0.7051733337225392)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (234, 486)
train = (1.3473058076986058, 1.2648508879380576)
scores = (0.59228129442624222, 0.45598356329482764)
score = 0.5241324288605349
holdout = (0.7562644127479664, 0.7051733337225392)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (160, 457)
train = (1.4188664802895086, 1.311379684127058)
scores = (0.52978489956880659, 0.51551775633316166)
score = 0.5226513279509841
holdout = (0.756613806561369, 0.7192687740766895)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (206, 300)
train = (1.5734510484819808, 1.3336505051977821)
scores = (0.50701930427389086, 0.52239743257851567)
score = 0.5147083684262033
holdout = (0.7556892678756125, 0.6950486545552292)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (232, 251)
train = (1.3953370360332258, 1.1276564807646106)
scores = (0.58841592689496358, 0.41895096045990315)
score = 0.5036834436774333
holdout = (0.7701480530349618, 0.6500038909056413)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (160, 457)
train = (1.4188664802895086, 1.311379684127058)
scores = (0.52978489956880659, 0.51551775633316166)
score = 0.5226513279509841
holdout = (0.756613806561369, 0.7192687740766895)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (123, 277)
train = (1.425003742968816, 1.3043164288588436)
scores = (0.52262402079244108, 0.49940409075729958)
score = 0.5110140557748704
holdout = (0.7541708713303799, 0.7205602501191637)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (152, 372)
train = (1.6033306647714172, 1.4985725357706772)
scores = (0.51370455793339453, 0.53299386163149487)
score = 0.5233492097824447
holdout = (0.7612618054193961, 0.7231143373776541)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (214, 906)
train = (1.356304359102394, 1.5795109765501867)
scores = (0.57991821627828366, 0.47989041965401924)
score = 0.5299043179661515
holdout = (0.7585186903121774, 0.7742975804677772)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (214, 906)
train = (1.356304359102394, 1.5795109765501867)
scores = (0.57991821627828366, 0.47989041965401924)
score = 0.5299043179661515
holdout = (0.7585186903121774, 0.7742975804677772)
>>> t = 3201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.75, 2011.0, 2012.75, 2009.25, 2009.0, 2014.5, 2009.5, 2010.5, 2011.25, 2012.25, 2013.5, 2014.75}), frozenset({2015.0, 2011.75, 2012.5, 2013.25, 2013.75, 2014.0, 2009.75, 2010.0, 2011.5, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (849, 178)
train = (1.1140591273191682, 1.6005210104865053)
scores = (0.42055606092676834, 0.57475200046067332)
score = 0.49765403069372083
holdout = (0.631667705894568, 0.8006159710840496)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (719, 276)
train = (1.2174292001144609, 1.973432248161749)
scores = (0.46956357051803566, 0.58141286883018595)
score = 0.5254882196741109
holdout = (0.6515616302902962, 0.8807673243228766)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 196)
train = (0.69925337886973071, 1.3989482041165184)
scores = (0.33803572796396947, 0.58019699042950812)
score = 0.45911635919673877
holdout = (0.45910359062464434, 0.7613513677687935)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (719, 276)
train = (1.2174292001144609, 1.973432248161749)
scores = (0.46956357051803566, 0.58141286883018595)
score = 0.5254882196741109
holdout = (0.6515616302902962, 0.8807673243228766)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 147)
train = (0.98056897224478989, 1.6565620953213835)
scores = (0.38313697058131169, 0.5663205745643729)
score = 0.4747287725728423
holdout = (0.5922480575246813, 0.8167464271639121)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (527, 89)
train = (1.315235590269622, 1.8596103895838965)
scores = (0.52378624833206899, 0.58635988807991712)
score = 0.555073068205993
holdout = (0.6768376870738356, 0.8848563341699175)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 155)
train = (0.69925337886973071, 1.3739140430200387)
scores = (0.33803572796396947, 0.58554812502062403)
score = 0.4617919264922967
holdout = (0.45910359062464434, 0.7602062047313186)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (527, 89)
train = (1.315235590269622, 1.8596103895838965)
scores = (0.52378624833206899, 0.58635988807991712)
score = 0.555073068205993
holdout = (0.6768376870738356, 0.8848563341699175)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (515, 166)
train = (1.2229069184913162, 1.8060028520252072)
scores = (0.43243754744318591, 0.59185855287334732)
score = 0.5121480501582666
holdout = (0.6633954485980711, 0.8542474692317555)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (818, 157)
train = (1.602575967362837, 2.1098074310661499)
scores = (0.53744409069219001, 0.60537292186194336)
score = 0.5714085062770666
holdout = (0.7252603821793262, 0.8742328620985101)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 183)
train = (0.69925337886973071, 1.5128374460892706)
scores = (0.33803572796396947, 0.58267247239190501)
score = 0.4603541001779372
holdout = (0.45910359062464434, 0.7833470732521801)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (818, 157)
train = (1.602575967362837, 2.1098074310661499)
scores = (0.53744409069219001, 0.60537292186194336)
score = 0.5714085062770666
holdout = (0.7252603821793262, 0.8742328620985101)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (523, 192)
train = (1.3246961287321903, 1.8681366172589389)
scores = (0.47286028938400054, 0.61038698277060854)
score = 0.5416236360773046
holdout = (0.7015680433222018, 0.8722278030897394)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (44, 88)
train = (1.1619365188258823, 2.0595292884112157)
scores = (0.40648375276490573, 0.6022605002934498)
score = 0.5043721265291777
holdout = (0.6461445131445589, 0.8784007095146465)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 212)
train = (0.69925337886973071, 1.5792347568047671)
scores = (0.33803572796396947, 0.59083601137346764)
score = 0.4644358696687185
holdout = (0.45910359062464434, 0.8054114871229414)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (523, 192)
train = (1.3246961287321903, 1.8681366172589389)
scores = (0.47286028938400054, 0.61038698277060854)
score = 0.5416236360773046
holdout = (0.7015680433222018, 0.8722278030897394)
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (515, 166)
train = (1.2229069184913162, 1.8060028520252074)
scores = (0.43243754744318574, 0.59185855287334721)
score = 0.5121480501582665
holdout = (0.6633954485980711, 0.8542474692317553)
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (875, 83)
train = (1.5083057056349796, 1.7722741835449478)
scores = (0.53295967971225067, 0.59858507107567127)
score = 0.565772375393961
holdout = (0.7111629314983332, 0.8689325123478919)
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 183)
train = (0.69925337886973071, 1.5128374460892706)
scores = (0.33803572796396947, 0.58267247239190512)
score = 0.4603541001779373
holdout = (0.45910359062464434, 0.7833470732521801)
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (875, 83)
train = (1.5083057056349796, 1.7722741835449478)
scores = (0.53295967971225067, 0.59858507107567127)
score = 0.565772375393961
holdout = (0.7111629314983332, 0.8689325123478919)
>>> t = 3202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.5, 2012.0, 2012.5, 2009.5, 2013.75, 2014.75, 2014.25, 2009.25, 2010.0, 2011.75, 2012.75, 2013.25, 2014.5}), frozenset({2010.25, 2015.0, 2011.25, 2011.5, 2009.75, 2013.5, 2009.0, 2010.75, 2011.0, 2012.25, 2013.0, 2014.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (107, 393)
train = (1.0552546421888414, 1.0590747108987537)
scores = (0.55999787792003108, 0.47662352124104729)
score = 0.5183106995805392
holdout = (0.7000330160162042, 0.6338111376691031)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (74, 469)
train = (0.93454904144526318, 1.1182293443515476)
scores = (0.51480873695113194, 0.5190416074113251)
score = 0.5169251721812285
holdout = (0.6335451999941563, 0.6461127763455881)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (193, 663)
train = (1.1140589347076937, 1.2943913352759804)
scores = (0.59706292990096299, 0.48783884697688462)
score = 0.5424508884389239
holdout = (0.7305635758211743, 0.7075573145034493)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (193, 663)
train = (1.1140589347076937, 1.2943913352759804)
scores = (0.59706292990096299, 0.48783884697688462)
score = 0.5424508884389239
holdout = (0.7305635758211743, 0.7075573145034493)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (108, 330)
train = (1.1597458898941764, 1.148479428579875)
scores = (0.57492487812403847, 0.50169251361514489)
score = 0.5383086958695917
holdout = (0.7346029095266706, 0.6721767748417663)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 431)
train = (1.1730645630854428, 1.3043976784653009)
scores = (0.51754549825060514, 0.52894626734257932)
score = 0.5232458827965922
holdout = (0.7020102342728259, 0.6878202749080381)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (205, 556)
train = (1.2194365389391575, 1.4081908714067581)
scores = (0.60754702520215109, 0.50441903691068113)
score = 0.5559830310564161
holdout = (0.7645914026491546, 0.7394474437296528)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (205, 556)
train = (1.2194365389391575, 1.4081908714067581)
scores = (0.60754702520215109, 0.50441903691068113)
score = 0.5559830310564161
holdout = (0.7645914026491546, 0.7394474437296528)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 368)
train = (1.270408824335487, 1.3217488764668988)
scores = (0.5881225468774155, 0.54098957021611371)
score = 0.5645560585467646
holdout = (0.7681925692116264, 0.722517525895566)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (107, 291)
train = (1.3472236897027636, 1.3629184123650522)
scores = (0.52742897822397472, 0.55177479186475509)
score = 0.5396018850443649
holdout = (0.733687338869064, 0.7016777452865184)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (180, 553)
train = (1.2082681422187675, 1.4903880238837142)
scores = (0.60289492748699625, 0.49911055006980753)
score = 0.5510027387784019
holdout = (0.7546471059213449, 0.752040040796888)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (117, 368)
train = (1.270408824335487, 1.3217488764668988)
scores = (0.5881225468774155, 0.54098957021611371)
score = 0.5645560585467646
holdout = (0.7681925692116264, 0.722517525895566)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (97, 273)
train = (1.2937167862950891, 1.3626996105764986)
scores = (0.60360547765844197, 0.51620641586960814)
score = 0.559905946764025
holdout = (0.7754240092536311, 0.7269050116408309)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 25)
train = (1.523083200150108, 1.1678895525746704)
scores = (0.54615426539208312, 0.43339939449524323)
score = 0.4897768299436632
holdout = (0.7611711229192938, 0.6478393268667252)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 486)
train = (1.146209786951645, 1.4660004300249672)
scores = (0.59852225100081302, 0.49659152145958246)
score = 0.5475568862301977
holdout = (0.7331129713805767, 0.7461874321271665)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (97, 273)
train = (1.2937167862950891, 1.3626996105764986)
scores = (0.60360547765844197, 0.51620641586960814)
score = 0.559905946764025
holdout = (0.7754240092536311, 0.7269050116408309)
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 368)
train = (1.2704088243354872, 1.3217488764668988)
scores = (0.5881225468774155, 0.54098957021611371)
score = 0.5645560585467646
holdout = (0.7681925692116262, 0.722517525895566)
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (72, 332)
train = (1.1031584230340112, 1.2664891241415022)
scores = (0.51994560343961593, 0.53349722346884454)
score = 0.5267214134542302
holdout = (0.6896262731776378, 0.6798287581600638)
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (180, 553)
train = (1.2082681422187675, 1.4903880238837144)
scores = (0.60289492748699636, 0.49911055006980742)
score = 0.5510027387784019
holdout = (0.754647105921345, 0.7520400407968879)
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (117, 368)
train = (1.2704088243354872, 1.3217488764668988)
scores = (0.5881225468774155, 0.54098957021611371)
score = 0.5645560585467646
holdout = (0.7681925692116262, 0.722517525895566)
>>> t = 3203 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.0, 2013.5, 2013.75, 2014.0, 2014.25, 2010.5, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}), frozenset({2011.5, 2012.5, 2012.75, 2009.0, 2009.25, 2009.75, 2009.5, 2010.0, 2011.25, 2012.25, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (348, 81)
train = (1.5311390674339083, 0.83751038285208235)
scores = (0.55645360793450072, 0.35503230220726839)
score = 0.4557429550708846
holdout = (0.7865903638750941, 0.532486166924523)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (205, 505)
train = (1.5793204397266896, 1.0922057418894262)
scores = (0.47604600573786116, 0.42372903599526829)
score = 0.4498875208665647
holdout = (0.7688509741098214, 0.6215709726789084)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 355)
train = (0.50393964289156945, 1.0947737950078189)
scores = (0.40096460222619695, 0.40792241137751806)
score = 0.4044435068018575
holdout = (0.40182892578375956, 0.6481135965258379)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (348, 81)
train = (1.5311390674339083, 0.83751038285208235)
scores = (0.55645360793450072, 0.35503230220726839)
score = 0.4557429550708846
holdout = (0.7865903638750941, 0.532486166924523)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (348, 356)
train = (1.6529714402414133, 1.1064932291301575)
scores = (0.57694410171357191, 0.39928210340715292)
score = 0.48811310256036244
holdout = (0.8111044569561764, 0.6381934640399057)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 396)
train = (1.1017614843492007, 1.2054659555371856)
scores = (0.14095331203046613, 0.43172442907302838)
score = 0.2863388705517472
holdout = (0.40216657798299565, 0.6489329439637364)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 376)
train = (0.50393964289156945, 1.2012566079481146)
scores = (0.4009646022261969, 0.41485416273943776)
score = 0.40790938248281733
holdout = (0.4018289257837596, 0.6764971825905712)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (348, 356)
train = (1.6529714402414133, 1.1064932291301575)
scores = (0.57694410171357191, 0.39928210340715292)
score = 0.48811310256036244
holdout = (0.8111044569561764, 0.6381934640399057)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (177, 82)
train = (1.5343821838951937, 1.0248650262867198)
scores = (0.56415385519430516, 0.39034095762265658)
score = 0.47724740640848085
holdout = (0.7802796234624845, 0.6113508349969965)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 270)
train = (1.3457238204729614, 1.2537371995968476)
scores = (0.17498929258734788, 0.43501856801771321)
score = 0.30500393030253053
holdout = (0.48627554244768834, 0.6632192782818412)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 316)
train = (0.50393964289156934, 1.2029143771296418)
scores = (0.4009646022261969, 0.40453611459620181)
score = 0.4027503584111993
holdout = (0.4018289257837596, 0.674457986750803)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (177, 82)
train = (1.5343821838951937, 1.0248650262867198)
scores = (0.56415385519430516, 0.39034095762265658)
score = 0.47724740640848085
holdout = (0.7802796234624845, 0.6113508349969965)
>>> t = 3204 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 186
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|doo|dcc)
            & index[0,1,2] 
          }
      )
    | 
        | FracRec[21:,62:,125:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|dcc)
            & index[1, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,10:,15:,10:5,15:10,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[10:]
            & (
                <>Drawdown[1:] 
                | Since{Max & index[0,10]} 
                | Drawup[10:, 10:5] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & (Return| Volatility)
        & [60:] 
      }
    | 
        <>Return{pure&~dd} & VP[10:] 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2009.25, 2009.0, 2014.0, 2014.25, 2009.75, 2010.0, 2011.0, 2012.5, 2013.0, 2014.75, 2015.0}), frozenset({2010.75, 2011.5, 2012.25, 2012.75, 2013.5, 2013.75, 2009.5, 2010.25, 2011.25, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.56307974272857286, 0.69541554782098125)
scores = (0.43543213295320699, 0.36773676020623453)
score = 0.40158444657972076
holdout = (0.425185152563215, 0.47775423285204155)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 323)
train = (0.56834497007715112, 1.5750726220324329)
scores = (0.41760365283087947, 0.52722647774529297)
score = 0.4724150652880862
holdout = (0.42955739023728645, 0.7990006212551407)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (250, 1)
train = (1.0223849122944977, 0.52255239114901841)
scores = (0.47385689281182442, 0.32795242454038342)
score = 0.4009046586761039
holdout = (0.6223353687037677, 0.3883330827972871)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 323)
train = (0.56834497007715112, 1.5750726220324329)
scores = (0.41760365283087947, 0.52722647774529297)
score = 0.4724150652880862
holdout = (0.42955739023728645, 0.7990006212551407)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 353)
train = (0.63517417397864229, 1.4561191089425465)
scores = (0.47029569167952295, 0.54293183110273835)
score = 0.5066137613911307
holdout = (0.4654058370660244, 0.7812009951868514)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 309)
train = (0.71901288493209115, 1.7058621052127412)
scores = (0.45928536176179874, 0.53136697143452216)
score = 0.4953261665981604
holdout = (0.4952484862829559, 0.8150132297001981)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (114, 1)
train = (0.97539339075092035, 0.52255239114901841)
scores = (0.4654052491368364, 0.32795242454038342)
score = 0.39667883683860994
holdout = (0.5883057257852105, 0.3883330827972871)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 353)
train = (0.63517417397864229, 1.4561191089425465)
scores = (0.47029569167952295, 0.54293183110273835)
score = 0.5066137613911307
holdout = (0.4654058370660244, 0.7812009951868514)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 261)
train = (0.6975063700370463, 1.4600196938628622)
scores = (0.48909104147864257, 0.53786467823924222)
score = 0.5134778598589425
holdout = (0.48912058810931497, 0.778458104317138)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 291)
train = (0.85354713054901288, 1.8564655660298026)
scores = (0.47887474920905371, 0.54597146988414724)
score = 0.5124231095466005
holdout = (0.5477039122187383, 0.8274813048976609)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (106, 1)
train = (0.98021895997909347, 0.52255239114901841)
scores = (0.46682582688821855, 0.32795242454038342)
score = 0.39738912571430096
holdout = (0.5928555002126223, 0.3883330827972871)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 261)
train = (0.6975063700370463, 1.4600196938628622)
scores = (0.48909104147864257, 0.53786467823924222)
score = 0.5134778598589425
holdout = (0.48912058810931497, 0.778458104317138)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 404)
train = (0.6975063700370463, 1.6408458329154261)
scores = (0.48909104147864257, 0.55924043846196858)
score = 0.5241657399703056
holdout = (0.48912058810931497, 0.822595969770002)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 208)
train = (0.96371904924494378, 1.859042690123621)
scores = (0.46571208142969639, 0.52704011822542696)
score = 0.4963760998275617
holdout = (0.586783639475298, 0.8245186803105571)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (326, 1)
train = (1.3092010052147358, 0.52255239114901841)
scores = (0.4988329646919451, 0.32795242454038342)
score = 0.41339269461616424
holdout = (0.7097506547109605, 0.3883330827972871)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 404)
train = (0.6975063700370463, 1.6408458329154261)
scores = (0.48909104147864257, 0.55924043846196858)
score = 0.5241657399703056
holdout = (0.48912058810931497, 0.822595969770002)
>>> t = 3300 ===================================================================================================
(pair) len(F.columns) = 69
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 72
0
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|aoo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:10] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[0,5]} 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,6,9,11,12,14,16,17]}
        | Return{ af| it} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.75, 2010.5, 2015.25, 2011.25, 2013.75, 2014.75, 2009.25, 2010.25, 2011.0, 2012.0, 2013.5, 2014.25, 2015.0}), frozenset({2011.75, 2012.5, 2012.75, 2009.0, 2009.75, 2013.25, 2014.0, 2009.5, 2010.0, 2011.5, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.41837866160432519, 0.52198564898852695)
scores = (0.45360592554410772, 0.33901525118417342)
score = 0.39631058836414057
holdout = (0.397230295613714, 0.391553566030769)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 32)
train = (0.48043840241500085, 0.76178446963793767)
scores = (0.45837296112182946, 0.34387399924813705)
score = 0.4011234801849832
holdout = (0.42325450317624946, 0.4793229746725458)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 10)
train = (0.59062216977722726, 0.48404783807826096)
scores = (0.45865195838339551, 0.32986488484928167)
score = 0.3942584216163386
holdout = (0.4668895065949431, 0.37772794122237546)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 32)
train = (0.48043840241500085, 0.76178446963793767)
scores = (0.45837296112182946, 0.34387399924813705)
score = 0.4011234801849832
holdout = (0.42325450317624946, 0.4793229746725458)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.42983194458864865, 0.52803403123350423)
scores = (0.45106085834726029, 0.33972856757703762)
score = 0.39539471296214895
holdout = (0.39837093054136363, 0.39396257401699264)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 20)
train = (0.73341462008419978, 0.93865047313504713)
scores = (0.43842378865021608, 0.34749012126717443)
score = 0.39295695495869526
holdout = (0.49951412870825196, 0.5384182752005475)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (13, 10)
train = (0.36927963196055436, 0.48404783807826085)
scores = (0.45081071452954458, 0.32986488484928178)
score = 0.3903377996894132
holdout = (0.3805162446139197, 0.3777279412223754)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 1)
train = (0.42983194458864865, 0.52803403123350423)
scores = (0.45106085834726029, 0.33972856757703762)
score = 0.39539471296214895
holdout = (0.39837093054136363, 0.39396257401699264)
>>> t = 3301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 72
0
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|aoo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:10] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[0,5]} 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>FaceValue{Volume| Open| Close} 
        | Return{mix[1,3,4,5,6,9,11,12,14,16,17]}
        | Return{ af| it} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.75, 2015.0, 2012.75, 2012.5, 2009.5, 2013.0, 2009.75, 2010.25, 2012.0, 2013.5, 2014.0, 2015.25}), frozenset({2011.25, 2011.5, 2011.75, 2009.25, 2013.75, 2014.5, 2014.25, 2009.0, 2010.5, 2011.0, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (125, 1)
train = (1.1322689084355664, 0.48822520621967458)
scores = (0.46924397919156008, 0.30768149837330677)
score = 0.3884627387824334
holdout = (0.6322386753076479, 0.3686497509094845)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (77, 125)
train = (1.2283162351222729, 1.0725228896493502)
scores = (0.49721083600248228, 0.32646621513150265)
score = 0.41183852556699246
holdout = (0.6716075784249139, 0.5924757980604641)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 144)
train = (0.69231011898764938, 0.70719763450802231)
scores = (0.46256977736128169, 0.31283427899568067)
score = 0.3877020281784812
holdout = (0.5040845997682202, 0.4503201673486899)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (77, 125)
train = (1.2283162351222729, 1.0725228896493502)
scores = (0.49721083600248228, 0.32646621513150265)
score = 0.41183852556699246
holdout = (0.6716075784249139, 0.5924757980604641)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 1)
train = (1.2437105917438394, 0.49811890237593598)
scores = (0.4649266120410831, 0.30659709057414131)
score = 0.3857618513076122
holdout = (0.6624921212443372, 0.3722948412085345)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 89)
train = (1.5726952965460825, 1.2190507204475756)
scores = (0.48593381735606439, 0.31661291427150923)
score = 0.4012733658137868
holdout = (0.7514116402829096, 0.6340264942254845)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 134)
train = (0.63213004634432646, 0.69637046291824312)
scores = (0.46304516896911718, 0.31007317377442656)
score = 0.38655917137177187
holdout = (0.486837701510964, 0.44508806409863266)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (48, 89)
train = (1.5726952965460825, 1.2190507204475756)
scores = (0.48593381735606439, 0.31661291427150923)
score = 0.4012733658137868
holdout = (0.7514116402829096, 0.6340264942254845)
>>> t = 3400 ===================================================================================================
(pair) len(F.columns) = 51
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [3:,9:,12:,15:,18:,6:3,18:15,21:18,            15:9,18:6,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[10,20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[10:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[10,20]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|dcc|daoc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,9:,18:,12:6,            15:9,18:12,12:3,18:9,18:6,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2015.0, 2011.5, 2012.5, 2009.75, 2013.5, 2013.0, 2009.25, 2010.75, 2011.25, 2009.0, 2013.25, 2015.25}), frozenset({2010.5, 2011.75, 2012.25, 2012.75, 2014.5, 2014.25, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.75, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (158, 2)
train = (0.94120261676041861, 0.654436823996423)
scores = (0.45832194019833616, 0.33851111674053946)
score = 0.3984165284694378
holdout = (0.6109248393396766, 0.4543784115774271)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (78, 2)
train = (0.77933072817047633, 0.76525074489871647)
scores = (0.41620473738969743, 0.33818205762022913)
score = 0.3771933975049633
holdout = (0.531724778289009, 0.5031085887585359)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (239, 194)
train = (1.0341764823417039, 1.0936328836762261)
scores = (0.47150692287288132, 0.39782611807328677)
score = 0.4346665204730841
holdout = (0.6393819230751189, 0.6706432020021024)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (239, 194)
train = (1.0341764823417039, 1.0936328836762261)
scores = (0.47150692287288132, 0.39782611807328677)
score = 0.4346665204730841
holdout = (0.6393819230751189, 0.6706432020021024)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (134, 245)
train = (1.0296153834566242, 1.348883529157993)
scores = (0.46984223743592352, 0.40869726452579802)
score = 0.43926975098086074
holdout = (0.6448416825428107, 0.7370000285855407)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (81, 1)
train = (0.91734344589961048, 1.1034244894651069)
scores = (0.40731864877080126, 0.31890925064762415)
score = 0.36311394970921274
holdout = (0.5712554846934702, 0.5507727835744138)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 191)
train = (0.72978804890590787, 1.1340148672463914)
scores = (0.45822781118042349, 0.40339621759752525)
score = 0.4308120143889744
holdout = (0.5303550688626292, 0.684117698375578)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (134, 245)
train = (1.0296153834566242, 1.348883529157993)
scores = (0.46984223743592352, 0.40869726452579802)
score = 0.43926975098086074
holdout = (0.6448416825428107, 0.7370000285855407)
>>> t = 3401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|vp1dd)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(Volatility)
            & [3:,9:,12:,15:,18:,6:3,18:15,21:18,            15:9,18:6,18:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[20:10] 
                | Since{Max & index[10,20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 250:] 
          )
        | ( 
            | Volatility[10:]
            & (
                | Since{Max & index[5]} 
                | Since{Min & index[10,20]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| VP| Volatility)
        & [20:,60:] 
      }
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|dcc|daoc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|Volatility)
            & [3:,9:,18:,12:6,            15:9,18:12,12:3,18:9,18:6,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[20]} 
                | Drawup[20:] 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2012.5, 2012.0, 2012.75, 2009.75, 2013.5, 2009.5, 2010.0, 2011.75, 2012.25, 2013.0, 2014.0}), frozenset({2010.75, 2015.0, 2011.25, 2013.75, 2014.5, 2014.25, 2009.0, 2010.5, 2011.0, 2009.25, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (86, 596)
train = (0.99760763321998736, 1.1547955415146305)
scores = (0.40077669325548831, 0.48209927444378653)
score = 0.4414379838496374
holdout = (0.6169067854981812, 0.6512427779860248)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 304)
train = (0.8544248669083, 1.0311356972094838)
scores = (0.2085135766766327, 0.44637002591251246)
score = 0.32744180129457257
holdout = (0.4282529113409605, 0.6053317848174581)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (137, 304)
train = (1.0110445248642701, 1.055459554251688)
scores = (0.39548993656673992, 0.46337239640650052)
score = 0.4294311664866202
holdout = (0.6139610511235243, 0.6457242528249924)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (86, 596)
train = (0.99760763321998736, 1.1547955415146305)
scores = (0.40077669325548831, 0.48209927444378653)
score = 0.4414379838496374
holdout = (0.6169067854981812, 0.6512427779860248)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (74, 381)
train = (1.0335333274238465, 1.1573086333242499)
scores = (0.39209695867809979, 0.48498215499339897)
score = 0.4385395568357494
holdout = (0.6248755471322989, 0.657403052653813)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 123)
train = (1.054726143548415, 1.0266440510646455)
scores = (0.20349255369058797, 0.43602571836341747)
score = 0.31975913602700273
holdout = (0.49326779155784994, 0.6040864967275813)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 308)
train = (1.0416252631401579, 1.1780669158312267)
scores = (0.39265481793537316, 0.46918292508844228)
score = 0.4309188715119077
holdout = (0.6165571052282188, 0.6806948184017608)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (74, 381)
train = (1.0335333274238465, 1.1573086333242499)
scores = (0.39209695867809979, 0.48498215499339897)
score = 0.4385395568357494
holdout = (0.6248755471322989, 0.657403052653813)
>>> t = 3500 ===================================================================================================
(pair) len(F.columns) = 66
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1,2,1:2] 
          }
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| Volatility)
        & [20:] 
      }
    | 
        <>Return{pure&~dd} & VP[5:] 
    | 
        | Return{mix[5,9,12,13,14,15,18,19]}
        | Return{ it} 
    | 
        Time{long| short}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|doo|doc)
            & index[1,2] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,20]} 
                | Drawup[ 5:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[1:, 10:5] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.75, 2011.25, 2012.75, 2009.25, 2013.5, 2014.5, 2009.0, 2015.25, 2011.5, 2012.0, 2013.75, 2014.0, 2015.0}), frozenset({2010.25, 2010.5, 2010.75, 2012.5, 2009.75, 2013.25, 2014.25, 2009.5, 2010.0, 2011.0, 2012.25, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 116)
train = (0.42624912121779229, 1.6066388731932337)
scores = (0.41097022007404149, 0.42914268219865709)
score = 0.42005645113634926
holdout = (0.31363741184664945, 0.743532665435299)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (10, 56)
train = (0.39638584173325159, 1.6461947608293566)
scores = (0.37390609148888421, 0.4082338717002354)
score = 0.3910699815945598
holdout = (0.26691993769896344, 0.7623759730399854)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 19)
train = (0.59398227998392938, 0.83710591130892054)
scores = (0.45193744459849139, 0.38241980509690043)
score = 0.4171786248476959
holdout = (0.43966187715532395, 0.501478006367112)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (15, 116)
train = (0.42624912121779229, 1.6066388731932337)
scores = (0.41097022007404149, 0.42914268219865709)
score = 0.42005645113634926
holdout = (0.31363741184664945, 0.743532665435299)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 59)
train = (0.49039498397615672, 1.5422905992536506)
scores = (0.42396147388404626, 0.42974156476971109)
score = 0.4268515193268787
holdout = (0.35559532421287493, 0.7279066365590885)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (9, 58)
train = (0.44441030180072083, 1.9470829128465637)
scores = (0.33097931766716193, 0.4279704771345425)
score = 0.3794748974008522
holdout = (0.2908176740915234, 0.8120099305947133)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 17)
train = (0.66254463517548112, 0.82001163528102017)
scores = (0.44257183295388269, 0.38539462795096896)
score = 0.4139832304524258
holdout = (0.46636957684430114, 0.4952780736992006)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (12, 59)
train = (0.49039498397615672, 1.5422905992536506)
scores = (0.42396147388404626, 0.42974156476971109)
score = 0.4268515193268787
holdout = (0.35559532421287493, 0.7279066365590885)
>>> t = 3501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 94
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1,2,1:2] 
          }
      )
    | Market{.& 
        <>(~Weight| Weight)
        & (Return| Volatility)
        & [20:] 
      }
    | 
        <>Return{pure&~dd} & VP[5:] 
    | 
        | Return{mix[5,9,12,13,14,15,18,19]}
        | Return{ it} 
    | 
        Time{long| short}
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|acc|doo|doc)
            & index[1,2] 
          }
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,20]} 
                | Drawup[ 5:] 
                | Since{Min & index[0,10]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[1:, 10:5] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5,10]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2012.5, 2012.75, 2009.75, 2014.25, 2014.75, 2009.25, 2010.5, 2011.25, 2012.25, 2014.0, 2015.25}), frozenset({2011.5, 2011.75, 2009.0, 2013.25, 2013.5, 2013.75, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 186)
train = (1.0565977480497639, 0.94595369771385962)
scores = (0.34123500340555407, 0.33036109975284739)
score = 0.33579805157920073
holdout = (0.5584155417213861, 0.5572008325748987)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (85, 1)
train = (0.79299622526503788, 0.61570008433344658)
scores = (0.31982484754298168, 0.22964943729862131)
score = 0.2747371424208015
holdout = (0.49308226045929177, 0.3784517405833033)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 157)
train = (0.98493634753230075, 0.85864445053547189)
scores = (0.32434291637649909, 0.32343126898565522)
score = 0.3238870926810772
holdout = (0.5223571259954711, 0.5203444346868167)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (16, 186)
train = (1.0565977480497639, 0.94595369771385962)
scores = (0.34123500340555407, 0.33036109975284739)
score = 0.33579805157920073
holdout = (0.5584155417213861, 0.5572008325748987)
>>> t = 3600 ===================================================================================================
(pair) len(F.columns) = 85
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 254
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.75, 2012.5, 2012.0, 2009.5, 2013.0, 2009.0, 2010.25, 2011.5, 2012.25, 2013.5, 2014.25, 2015.25}), frozenset({2010.0, 2011.25, 2009.75, 2013.75, 2014.5, 2014.0, 2009.25, 2010.75, 2011.0, 2012.75, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 8)
train = (0.68022057548368331, 0.75620345890305696)
scores = (0.11180842836247537, 0.1870952185171571)
score = 0.14945182343981622
holdout = (0.31684645562688424, 0.40095212025954374)
>>> t = 3601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 254
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[20]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
    | 
        Time{long}
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2011.0, 2012.0, 2012.75, 2009.75, 2014.0, 2009.0, 2010.0, 2011.25, 2012.5, 2013.75, 2014.75}), frozenset({2010.75, 2015.0, 2009.25, 2013.25, 2013.5, 2014.25, 2009.5, 2010.25, 2011.75, 2012.25, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 4)
train = (0.84151169542427884, 1.0143252169021999)
scores = (-0.016484236646424181, -0.14650460212560851)
score = -0.08149441938601634
holdout = (0.4142596960093939, 0.3246700081284255)
>>> t = 3700 ===================================================================================================
(pair) len(F.columns) = 11
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 13
0
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,12:,18:,18:15,9:3,12:6,            15:9,21:15,15:6,15:3,21:9,21:3] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2011.75, 2012.75, 2014.25, 2014.0, 2009.75, 2010.75, 2011.25, 2012.25, 2013.25, 2014.5, 2015.25}), frozenset({2010.25, 2011.5, 2012.5, 2009.0, 2009.25, 2013.5, 2013.75, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.36201641195899059, 0.26177398880219283)
scores = (0.23997249296131784, 0.34828532690629543)
score = 0.29412890993380664
holdout = (0.27033828269914995, 0.277443502322145)
>>> t = 3701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 13
0
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo)
            & [3:,12:,18:,18:15,9:3,12:6,            15:9,21:15,15:6,15:3,21:9,21:3] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & (Return| VP)
        & [1:,60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2012.75, 2012.5, 2009.25, 2013.5, 2009.75, 2010.25, 2011.0, 2012.25, 2013.0, 2014.5, 2015.25}), frozenset({2010.75, 2011.75, 2009.0, 2013.75, 2014.25, 2014.0, 2009.5, 2010.0, 2011.25, 2012.0, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 8)
train = (0.39440604592210887, 0.31802613901974447)
scores = (0.24334909055092646, 0.37850716524602324)
score = 0.31092812789847485
holdout = (0.285126568289112, 0.32193819497602)
>>> t = 3800 ===================================================================================================
(pair) len(F.columns) = 11
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 15
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|daoc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.25, 2012.75, 2009.25, 2014.0, 2009.75, 2010.0, 2011.0, 2009.5, 2013.25, 2014.5, 2015.25}), frozenset({2010.5, 2012.25, 2012.5, 2013.5, 2013.75, 2014.25, 2009.0, 2010.75, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (79, 105)
train = (0.60972823359923412, 0.59333550516364775)
scores = (0.20727371678917761, 0.27527359425290365)
score = 0.24127365552104063
holdout = (0.36722578197213696, 0.4005899903968372)
>>> t = 3801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 15
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|acc|daoc|vp1dd)
            & index[1,2, 0:1,1:2,0:2] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2011.0, 2012.75, 2013.5, 2014.0, 2014.75, 2009.75, 2010.25, 2011.5, 2012.5, 2013.0, 2014.5, 2015.0}), frozenset({2010.75, 2011.75, 2012.25, 2009.0, 2009.25, 2013.75, 2009.5, 2010.5, 2011.25, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (15, 94)
train = (0.55219582222492647, 0.627088197579176)
scores = (0.23412867270359003, 0.33253908354715528)
score = 0.28333387812537264
holdout = (0.33871658797165416, 0.4473381718952245)
>>> t = 3900 ===================================================================================================
(pair) len(F.columns) = 29
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5,10]} 
                | Drawup[1,10:,20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP)
        & [5:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:,15:,15:10,20:15,15:5,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2012.75, 2009.75, 2009.0, 2013.0, 2013.25, 2009.25, 2010.75, 2011.75, 2012.5, 2013.75, 2015.25}), frozenset({2010.25, 2011.25, 2011.5, 2012.25, 2014.5, 2014.25, 2014.0, 2009.5, 2010.0, 2011.0, 2012.0, 2013.5, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 55)
train = (0.40293531755804324, 0.58665508696141777)
scores = (0.26493648067944864, 0.20284914886367414)
score = 0.23389281477156137
holdout = (0.29805329762712385, 0.31469959547362514)
>>> t = 3901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 52
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Since{Max & index[0,5,10]} 
                | Drawup[1,10:,20:] 
                | Since{Min & index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( VP)
        & [5:] 
      }
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:,15:,15:10,20:15,15:5,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2010.25, 2010.75, 2013.5, 2013.0, 2013.25, 2009.75, 2010.0, 2011.75, 2012.0, 2013.75, 2014.75, 2015.0}), frozenset({2011.25, 2011.5, 2012.5, 2012.75, 2009.0, 2009.25, 2014.25, 2014.0, 2009.5, 2011.0, 2012.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (16, 22)
train = (0.45063170960731697, 0.52900253409064291)
scores = (0.22203865472075143, 0.24866430216482957)
score = 0.2353514784427905
holdout = (0.27228891935868843, 0.3422711027451322)
>>> t = 4000 ===================================================================================================
(pair) len(F.columns) = 88
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 159
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doc|daoc)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,20:,20:10] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2012.25, 2012.5, 2013.0, 2013.25, 2013.75, 2014.5, 2009.5, 2015.25, 2011.75, 2012.75, 2013.5, 2014.75, 2015.0}), frozenset({2010.0, 2010.5, 2010.75, 2011.25, 2011.5, 2009.25, 2009.75, 2014.0, 2009.0, 2010.25, 2011.0, 2012.0, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (183, 66)
train = (1.5495178484919445, 0.76333849527989406)
scores = (0.34182625928268301, 0.47302772227495615)
score = 0.4074269907788196
holdout = (0.6446809725125658, 0.515053796886497)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (174, 117)
train = (1.763167435892159, 0.70510787724272828)
scores = (0.34184769025987882, 0.4100143750062662)
score = 0.3759310326330725
holdout = (0.7128112167480515, 0.4450856220534343)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (418, 179)
train = (1.5958521951423772, 0.97637076864476835)
scores = (0.36141603183039994, 0.45151914221321476)
score = 0.40646758702180735
holdout = (0.6475854003739758, 0.6034487275110627)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (183, 66)
train = (1.5495178484919445, 0.76333849527989406)
scores = (0.34182625928268301, 0.47302772227495615)
score = 0.4074269907788196
holdout = (0.6446809725125658, 0.515053796886497)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 108)
train = (1.7172358997458652, 0.93112064371862169)
scores = (0.33915038137675158, 0.45781694525838268)
score = 0.3984836633175671
holdout = (0.680737621610947, 0.577493626307512)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (73, 91)
train = (1.8235876080790017, 0.79811307493522043)
scores = (0.35440080259883677, 0.40873964050780376)
score = 0.38157022155332027
holdout = (0.743925438140728, 0.4815580457385614)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (588, 58)
train = (1.8996029000247474, 0.86702589145509812)
scores = (0.37454926836565772, 0.41840258233790945)
score = 0.39647592535178355
holdout = (0.7162346820572575, 0.5547048151959401)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (155, 108)
train = (1.7172358997458652, 0.93112064371862169)
scores = (0.33915038137675158, 0.45781694525838268)
score = 0.3984836633175671
holdout = (0.680737621610947, 0.577493626307512)
>>> t = 4001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 159
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:] 
                | Since{Max&index[0,5]} 
                | Drawup[20:10] 
                | Since{Min&index[20]} 
              )
            & Since[ 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doc|daoc)
            & index[1,2, 0:1,1:2,0:2] 
          }
        | ( 
            <>Return{(oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,10:,20:, 10:5] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[ 62:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Drawdown[1:,20:,20:10] 
                | Since{Max & index[20]} 
                | Since{Min & index[0,5]} 
              )
            & Since[ 62:, 125:, 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.25, 2011.5, 2012.5, 2009.5, 2013.5, 2014.0, 2014.25, 2009.25, 2010.25, 2011.0, 2012.0, 2013.0, 2014.5}), frozenset({2010.0, 2010.75, 2015.0, 2012.75, 2009.75, 2013.75, 2009.0, 2010.5, 2011.75, 2012.25, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 14)
train = (0.93975868963872922, 0.82902336075203786)
scores = (0.35245718240878471, 0.33750283052206193)
score = 0.3449800064654233
holdout = (0.5042454786788626, 0.5026228534051672)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 16)
train = (0.60778686769665513, 0.73680778822378135)
scores = (0.36585259876620246, 0.26691165667396061)
score = 0.31638212772008156
holdout = (0.43509336465441756, 0.4617360124088698)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (331, 20)
train = (1.3145546206696863, 0.73135922735134096)
scores = (0.47148445503560082, 0.33193345628414922)
score = 0.401708955659875
holdout = (0.6988318228309633, 0.4601785542581021)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (331, 20)
train = (1.3145546206696863, 0.73135922735134096)
scores = (0.47148445503560082, 0.33193345628414922)
score = 0.401708955659875
holdout = (0.6988318228309633, 0.4601785542581021)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 3)
train = (1.0966590304882895, 0.87392366721420667)
scores = (0.34202539401060367, 0.3427962421447765)
score = 0.3424108180776901
holdout = (0.5567750174593803, 0.5202782666083707)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (494, 154)
train = (1.356567410731796, 1.0359238724084341)
scores = (0.43556579210222651, 0.32151591095577636)
score = 0.3785408515290014
holdout = (0.668710047367041, 0.5676505205924659)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (254, 20)
train = (1.3617580306097103, 0.74043656039935657)
scores = (0.46632093771330108, 0.33098084782101755)
score = 0.3986508927671593
holdout = (0.7078002815673394, 0.4623689061679873)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (254, 20)
train = (1.3617580306097103, 0.74043656039935657)
scores = (0.46632093771330108, 0.33098084782101755)
score = 0.3986508927671593
holdout = (0.7078002815673394, 0.4623689061679873)
>>> t = 4100 ===================================================================================================
(pair) len(F.columns) = 140
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 156
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,20:] 
                | Since{Min & index[0,20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP)
        & [1:] 
      }
#<>#
    <>~Market & (
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                | Drawdown[10:, 10:5] 
                | Since{Max&index[0]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,1, 0:1] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2015.0, 2012.5, 2013.75, 2013.25, 2014.5, 2009.25, 2010.5, 2011.0, 2012.25, 2013.0, 2014.0, 2015.25}), frozenset({2010.25, 2011.5, 2011.75, 2012.75, 2009.0, 2009.75, 2014.25, 2009.5, 2010.0, 2011.25, 2012.0, 2013.5, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (54, 2)
train = (0.90770891369924001, 0.72094682551360922)
scores = (0.50517139786515897, 0.37499815709830986)
score = 0.4400847774817344
holdout = (0.593680949927975, 0.4953194386037028)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 15)
train = (0.86685992457947492, 0.79752559647953281)
scores = (0.48155152208620494, 0.36627675733498744)
score = 0.4239141397105962
holdout = (0.5812309760389304, 0.520441623440343)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (51, 10)
train = (0.79033983980306688, 0.64834116454007595)
scores = (0.56223513387220037, 0.34072499482680152)
score = 0.45148006434950094
holdout = (0.5769838684136649, 0.44561423629799835)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (51, 10)
train = (0.79033983980306688, 0.64834116454007595)
scores = (0.56223513387220037, 0.34072499482680152)
score = 0.45148006434950094
holdout = (0.5769838684136649, 0.44561423629799835)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 2)
train = (0.90359074252071625, 0.77452926669211608)
scores = (0.51757209786859104, 0.37506436455457609)
score = 0.44631823121158354
holdout = (0.5858831208692173, 0.5159143283769106)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (61, 19)
train = (1.1157912630651472, 0.92315719177672428)
scores = (0.47932058056708532, 0.38638003409304672)
score = 0.432850307330066
holdout = (0.6596600071850296, 0.5693794375571443)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 10)
train = (0.67226026761577162, 0.64834116454007618)
scores = (0.5511479096395463, 0.34072499482680146)
score = 0.4459364522331739
holdout = (0.5260281350617345, 0.44561423629799846)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (4, 2)
train = (0.90359074252071625, 0.77452926669211608)
scores = (0.51757209786859104, 0.37506436455457609)
score = 0.44631823121158354
holdout = (0.5858831208692173, 0.5159143283769106)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 2)
train = (0.95061204908013786, 0.78524120726750846)
scores = (0.53406602857000196, 0.37551861053507768)
score = 0.45479231955253985
holdout = (0.6112271949111713, 0.520778508587577)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (46, 4)
train = (1.2558868445406088, 0.93671873788696014)
scores = (0.46679736045713083, 0.39288163935784598)
score = 0.4298394999074884
holdout = (0.6948613677579881, 0.5676651243352268)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 10)
train = (0.67226026761577184, 0.64834116454007606)
scores = (0.5511479096395463, 0.34072499482680152)
score = 0.4459364522331739
holdout = (0.5260281350617347, 0.44561423629799873)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (4, 2)
train = (0.95061204908013786, 0.78524120726750846)
scores = (0.53406602857000196, 0.37551861053507768)
score = 0.45479231955253985
holdout = (0.6112271949111713, 0.520778508587577)
>>> t = 4101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 156
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,20:] 
                | Since{Min & index[0,20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP)
        & [1:] 
      }
#<>#
    <>~Market & (
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                | Drawdown[10:, 10:5] 
                | Since{Max&index[0]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,1, 0:1] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.5, 2010.0, 2011.5, 2012.75, 2013.25, 2013.0, 2009.0, 2010.25, 2011.75, 2009.75, 2013.5, 2014.5}), frozenset({2011.25, 2012.25, 2012.5, 2009.25, 2014.25, 2014.0, 2009.5, 2015.0, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 56)
train = (0.6426345116332135, 0.99552956563751438)
scores = (0.34352927029384533, 0.56296923455215819)
score = 0.45324925242300174
holdout = (0.44401437259258036, 0.6577977814103082)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 40)
train = (0.67981118744245372, 0.88213147001301317)
scores = (0.355271942945733, 0.48748332430306041)
score = 0.42137763362439673
holdout = (0.4637820460992052, 0.5900632287056234)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 84)
train = (0.65640858214427489, 0.94500497486783697)
scores = (0.30087850919517828, 0.58500531831881142)
score = 0.4429419137569949
holdout = (0.42341975928017234, 0.64680596057431)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (3, 56)
train = (0.6426345116332135, 0.99552956563751438)
scores = (0.34352927029384533, 0.56296923455215819)
score = 0.45324925242300174
holdout = (0.44401437259258036, 0.6577977814103082)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 56)
train = (0.69005193117959596, 1.1173941910110634)
scores = (0.34635942904339134, 0.55601358402048007)
score = 0.4511865065319357
holdout = (0.46317910754111574, 0.6942158614773083)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (27, 49)
train = (0.87175410671985321, 1.0911032609997493)
scores = (0.36846311076207383, 0.49664118105999794)
score = 0.43255214591103586
holdout = (0.54491157427418, 0.6640008105311153)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (396, 100)
train = (1.1689227177164065, 1.0426355462284682)
scores = (0.35061394907621835, 0.58394340828705049)
score = 0.4672786786816344
holdout = (0.6093883858433867, 0.6798757507661279)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (396, 100)
train = (1.1689227177164065, 1.0426355462284682)
scores = (0.35061394907621835, 0.58394340828705049)
score = 0.4672786786816344
holdout = (0.6093883858433867, 0.6798757507661279)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 40)
train = (0.68086447468635936, 1.1292606028668088)
scores = (0.34869475066937544, 0.5623292116835642)
score = 0.45551198117646985
holdout = (0.4612273005527474, 0.6938138110776374)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 41)
train = (0.99086312147072775, 1.2124047374738494)
scores = (0.37354404927311591, 0.50206484407028162)
score = 0.43780444667169877
holdout = (0.5845677207622193, 0.6962132480237769)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (378, 98)
train = (1.1916308201990724, 1.0632583051961406)
scores = (0.34214427433342598, 0.58987035781452335)
score = 0.46600731607397466
holdout = (0.6122099771452644, 0.6869655835370776)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (378, 98)
train = (1.1916308201990724, 1.0632583051961406)
scores = (0.34214427433342598, 0.58987035781452335)
score = 0.46600731607397466
holdout = (0.6122099771452644, 0.6869655835370776)
>>> t = 4102 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 156
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 10:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:] 
                | Since{Max & index[20]} 
                | Drawup[ 5:,20:] 
                | Since{Min & index[0,20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( VP)
        & [1:] 
      }
#<>#
    <>~Market & (
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                | Drawdown[10:, 10:5] 
                | Since{Max&index[0]} 
                | Drawup[20:10] 
                | Since{Min&index[0,5]} 
              )
            & Since[21:, 250:] 
          )
      )
    | 
        | FracRec[21:,250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc)
            & index[0,1, 0:1] 
          }
        | ( 
            <>Return{(doo[10:])} 
            & (
                | Drawdown[20:,20:10] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[20]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2011.0, 2012.75, 2012.25, 2009.0, 2009.75, 2014.25, 2009.25, 2010.5, 2011.25, 2012.0, 2013.75, 2014.75}), frozenset({2010.25, 2015.0, 2011.75, 2013.25, 2013.5, 2014.0, 2009.5, 2010.0, 2011.5, 2012.5, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 12)
train = (0.70124775680848517, 0.67525333141709154)
scores = (0.58423510497888687, 0.38335290594120636)
score = 0.4837940054600466
holdout = (0.5475242138652158, 0.4568639351912474)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 9)
train = (0.69078502407669196, 0.82944529842035886)
scores = (0.56950723636350908, 0.36645835503310525)
score = 0.46798279569830714
holdout = (0.5010936359785831, 0.49815047766560944)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 162)
train = (0.65994932201322776, 0.87137286430856564)
scores = (0.58029061261080861, 0.3614615947224929)
score = 0.4708761036666508
holdout = (0.537028618770442, 0.49309933701727937)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (17, 12)
train = (0.70124775680848517, 0.67525333141709154)
scores = (0.58423510497888687, 0.38335290594120636)
score = 0.4837940054600466
holdout = (0.5475242138652158, 0.4568639351912474)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 12)
train = (0.79178693638571673, 0.71549399677623371)
scores = (0.58129344777580516, 0.38087356734196248)
score = 0.48108350755888385
holdout = (0.5885537546421642, 0.46863471975448706)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 12)
train = (0.75273459131547227, 1.0944249502670333)
scores = (0.55385880488177319, 0.37090017919334367)
score = 0.46237949203755846
holdout = (0.5212415447997116, 0.5837080253556058)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 191)
train = (0.66392335999841656, 0.99107228965821204)
scores = (0.58118424124520796, 0.36152160462254568)
score = 0.4713529229338768
holdout = (0.5411477239078841, 0.5261959712049892)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (14, 12)
train = (0.79178693638571673, 0.71549399677623371)
scores = (0.58129344777580516, 0.38087356734196248)
score = 0.48108350755888385
holdout = (0.5885537546421642, 0.46863471975448706)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (17, 14)
train = (0.85860676892667731, 0.74309211287966748)
scores = (0.58087705862491834, 0.38198220639841429)
score = 0.4814296325116663
holdout = (0.6143082556839615, 0.4804622992762357)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (23, 17)
train = (0.87390872871290459, 1.363978943194057)
scores = (0.56057533374447677, 0.37765234759743382)
score = 0.4691138406709553
holdout = (0.5690486378087012, 0.6566171979260764)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 147)
train = (0.67205723305903742, 0.91037867895449454)
scores = (0.58169212796041025, 0.36046724209408293)
score = 0.4710796850272466
holdout = (0.5459315840325216, 0.5043226699048913)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (17, 14)
train = (0.85860676892667731, 0.74309211287966748)
scores = (0.58087705862491834, 0.38198220639841429)
score = 0.4814296325116663
holdout = (0.6143082556839615, 0.4804622992762357)
>>> t = 4200 ===================================================================================================
(pair) len(F.columns) = 135
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.0, 2015.25, 2013.0, 2014.0, 2014.5, 2014.75, 2009.0, 2010.5, 2011.25, 2012.5, 2013.5, 2014.25, 2015.0}), frozenset({2010.75, 2011.5, 2011.75, 2012.25, 2012.75, 2009.25, 2009.75, 2013.75, 2009.5, 2010.25, 2011.0, 2012.0, 2013.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (3, 14)
train = (0.71302641479564843, 0.84758672665412926)
scores = (0.43463804882063845, 0.38035438799614701)
score = 0.40749621840839273
holdout = (0.5395462857786775, 0.5622732420804043)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 10)
train = (0.61341141350783546, 0.75755106528928562)
scores = (0.22599082173685964, 0.30058382739205708)
score = 0.26328732456445836
holdout = (0.40038150792265154, 0.49696132204202187)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 21)
train = (0.6512244596976684, 0.80722592604720411)
scores = (0.44090013929939731, 0.40485926839111541)
score = 0.42287970384525636
holdout = (0.5111780714616266, 0.5387064466181475)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (18, 21)
train = (0.6512244596976684, 0.80722592604720411)
scores = (0.44090013929939731, 0.40485926839111541)
score = 0.42287970384525636
holdout = (0.5111780714616266, 0.5387064466181475)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 11)
train = (0.77528561168232912, 0.95789058909887659)
scores = (0.43973826632384044, 0.38697351908867783)
score = 0.41335589270625916
holdout = (0.5683414075636591, 0.5991222095041759)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 7)
train = (0.74673198838795241, 0.98433238657752953)
scores = (0.24088416452666056, 0.30272471046043303)
score = 0.27180443749354677
holdout = (0.45954267015835265, 0.5747245380595224)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 21)
train = (0.65122445969766862, 0.8100478024938661)
scores = (0.44090013929939698, 0.40447999828320313)
score = 0.42269006879130006
holdout = (0.5111780714616266, 0.5399847153730998)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (18, 21)
train = (0.65122445969766862, 0.8100478024938661)
scores = (0.44090013929939698, 0.40447999828320313)
score = 0.42269006879130006
holdout = (0.5111780714616266, 0.5399847153730998)
>>> t = 4201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.75, 2011.75, 2011.25, 2009.0, 2009.75, 2013.5, 2014.0, 2009.25, 2010.25, 2011.5, 2012.25, 2013.0, 2014.25}), frozenset({2010.5, 2015.0, 2012.5, 2012.75, 2013.75, 2014.5, 2009.5, 2010.0, 2011.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 24)
train = (0.7501973057434439, 1.2675843310384709)
scores = (0.30826260708064557, 0.47512669198224405)
score = 0.39169464953144484
holdout = (0.48240796105311806, 0.7080267947901911)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 18)
train = (0.71253254676132916, 1.1549654033194736)
scores = (0.38167997534023401, 0.37609676028737343)
score = 0.37888836781380375
holdout = (0.43853475270510994, 0.6108856260129037)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (77, 41)
train = (0.86846929547260188, 1.234027460187622)
scores = (0.47571845108239741, 0.4928853063092713)
score = 0.48430187869583435
holdout = (0.5916230815721686, 0.6970430061805609)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (77, 41)
train = (0.86846929547260188, 1.234027460187622)
scores = (0.47571845108239741, 0.4928853063092713)
score = 0.48430187869583435
holdout = (0.5916230815721686, 0.6970430061805609)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 18)
train = (0.88621246536890808, 1.4072859115184075)
scores = (0.31889391235153219, 0.49090543106444884)
score = 0.4048996717079905
holdout = (0.5403314188628001, 0.7624093203604012)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (68, 23)
train = (0.76822510003272604, 1.4324589724991448)
scores = (0.38712232550404763, 0.3835680960607975)
score = 0.38534521078242256
holdout = (0.4578652271118003, 0.7155795969823426)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 25)
train = (0.98602529835471897, 1.1307863967410923)
scores = (0.48112658491558591, 0.49223064544999096)
score = 0.48667861518278843
holdout = (0.6384124153950677, 0.67456303027389)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (94, 25)
train = (0.98602529835471897, 1.1307863967410923)
scores = (0.48112658491558591, 0.49223064544999096)
score = 0.48667861518278843
holdout = (0.6384124153950677, 0.67456303027389)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 21)
train = (0.91111187604691957, 1.496510432575427)
scores = (0.31000063098969488, 0.49328369757226542)
score = 0.40164216428098015
holdout = (0.5459260284078284, 0.7776567827067722)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (142, 143)
train = (1.0846379446442715, 1.8004613337215889)
scores = (0.39885435215931869, 0.4320226131646589)
score = 0.4154384826619888
holdout = (0.5650251278247915, 0.7895424571749263)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 25)
train = (0.99981211485871413, 1.130786396741092)
scores = (0.49329110498942941, 0.49223064544999096)
score = 0.4927608752197102
holdout = (0.6451635160483358, 0.6745630302738898)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (89, 25)
train = (0.99981211485871413, 1.130786396741092)
scores = (0.49329110498942941, 0.49223064544999096)
score = 0.4927608752197102
holdout = (0.6451635160483358, 0.6745630302738898)
>>> t = 4202 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 313
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doo|vp1dd)
            & index[1:2,0:2] 
          }
        | ( 
            <> Volatility[20:] 
            | Volatility[10:, 20:]
            & (
                <>Drawdown[ 5:,20:] 
                | Since{Min & index[10]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return)
        & [20:] 
      }
    | 
        | FracRec[62:,250:] 
#<>#
0
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|daoc)
            & index[0,0:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[20:10] 
                | Since{Max&index[0,5]} 
                | Drawup[20:] 
                | Since{Min&index[0]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[10:]
            & (
                <>Drawdown[ 5:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[ 5:,10:,20:] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [60:] 
      }
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[1]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2012.25, 2009.25, 2009.75, 2014.75, 2009.0, 2010.5, 2011.25, 2012.5, 2013.0, 2014.5, 2015.0}), frozenset({2011.5, 2011.75, 2012.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.75, 2011.0, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 17)
train = (0.80462647183504987, 1.1073212102278791)
scores = (0.30877562883411419, 0.41719293808726055)
score = 0.36298428346068734
holdout = (0.5181799208875685, 0.6160778812493274)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 72)
train = (0.7141961312231857, 1.300008464587155)
scores = (0.27691021666800386, 0.4265494908947704)
score = 0.3517298537813871
holdout = (0.467571138641163, 0.6984338398926042)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 50)
train = (0.81820103650607179, 1.2455787386779551)
scores = (0.36145732550522647, 0.50438372415479971)
score = 0.4329205248300131
holdout = (0.5387634963894727, 0.7075863689028742)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (41, 50)
train = (0.81820103650607179, 1.2455787386779551)
scores = (0.36145732550522647, 0.50438372415479971)
score = 0.4329205248300131
holdout = (0.5387634963894727, 0.7075863689028742)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 13)
train = (0.88744439532475361, 1.2527951402780759)
scores = (0.33277153697137524, 0.44617147628513393)
score = 0.3894715066282546
holdout = (0.5581118335794458, 0.6653075892179613)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 45)
train = (0.90055583237084735, 1.4681841119103534)
scores = (0.16251689767803482, 0.41943516145093568)
score = 0.29097602956448526
holdout = (0.5010430868950948, 0.7228522132039129)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (53, 47)
train = (0.88023237408498856, 1.2841683249331333)
scores = (0.37344568932648003, 0.49370535741663896)
score = 0.43357552337155947
holdout = (0.5588581960648841, 0.7083993783654949)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (53, 47)
train = (0.88023237408498856, 1.2841683249331333)
scores = (0.37344568932648003, 0.49370535741663896)
score = 0.43357552337155947
holdout = (0.5588581960648841, 0.7083993783654949)
>>> t = 4300 ===================================================================================================
(pair) len(F.columns) = 25
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[0,20]} 
                | Drawup[ 5:, 10:5] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[21:,62:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.75, 2012.75, 2009.0, 2009.75, 2009.25, 2010.25, 2011.0, 2012.0, 2013.5, 2014.75, 2015.25}), frozenset({2010.75, 2012.5, 2013.25, 2013.75, 2014.25, 2014.0, 2009.5, 2010.0, 2011.5, 2012.25, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (58, 1)
train = (0.80265543390964367, 0.78788782112132949)
scores = (0.30783391793370896, 0.30585743463830739)
score = 0.3068456762860082
holdout = (0.4718664400112545, 0.4090211733816874)
>>> t = 4301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:, 10:] 
            & (
                | Since{Max & index[0,20]} 
                | Drawup[ 5:, 10:5] 
                | Since{Min & index[0]} 
              )
            & Since[21:, 62:] 
          )
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[21:,62:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.0, 2009.25, 2013.5, 2013.0, 2014.0, 2009.75, 2010.75, 2011.25, 2009.0, 2013.25, 2014.75, 2015.25}), frozenset({2010.5, 2011.75, 2012.25, 2012.5, 2012.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.0, 2013.75, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 4)
train = (0.85666599158910151, 0.80163579881987135)
scores = (0.1552428817058697, 0.12686402404266969)
score = 0.14105345287426968
holdout = (0.464165723322016, 0.3928534058496244)
>>> t = 4400 ===================================================================================================
(pair) len(F.columns) = 31
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:5,20:15,15:5] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0]} 
                | Since{Min&index[20]} 
              )
            & Since[21:] 
          )
      )
    | 
        | FracRec[21:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2011.25, 2012.5, 2012.25, 2009.0, 2009.25, 2013.25, 2014.25, 2009.5, 2010.5, 2011.75, 2012.0, 2013.75, 2014.75}), frozenset({2010.25, 2010.75, 2015.0, 2011.5, 2013.5, 2014.0, 2009.75, 2010.0, 2011.0, 2012.75, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 82)
train = (0.91225512643655404, 0.77970735624499421)
scores = (0.49734068938961873, 0.29217511824692893)
score = 0.3947579038182738
holdout = (0.6198218936200088, 0.4253081568372842)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (68, 44)
train = (0.88808128749224613, 1.0717210886859134)
scores = (0.48354120619904289, 0.28974598729828072)
score = 0.3866435967486618
holdout = (0.5932965335402121, 0.5016933737766561)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (123, 153)
train = (0.83433099046931258, 0.70111828842926427)
scores = (0.50348854379324748, 0.3110013902507115)
score = 0.4072449670219795
holdout = (0.5933569496588625, 0.4239695876636162)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (123, 153)
train = (0.83433099046931258, 0.70111828842926427)
scores = (0.50348854379324748, 0.3110013902507115)
score = 0.4072449670219795
holdout = (0.5933569496588625, 0.4239695876636162)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (123, 239)
train = (1.0200416109725836, 1.247191660005885)
scores = (0.5014057156602908, 0.30095623676130046)
score = 0.4011809762107956
holdout = (0.6538365047939818, 0.5457428225719102)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (45, 155)
train = (0.97844571110608536, 1.9905140823178868)
scores = (0.49035993574856751, 0.28579111279415981)
score = 0.38807552427136366
holdout = (0.6198286589438722, 0.6940387965079933)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (119, 166)
train = (0.8951119530096141, 0.74472832740259287)
scores = (0.50772185585066154, 0.31071338638517132)
score = 0.40921762111791643
holdout = (0.6144935864587171, 0.43649219653931676)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (119, 166)
train = (0.8951119530096141, 0.74472832740259287)
scores = (0.50772185585066154, 0.31071338638517132)
score = 0.40921762111791643
holdout = (0.6144935864587171, 0.43649219653931676)
>>> t = 4401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 60
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [10:5,20:15,15:5] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5]} 
              )
            & Since[21:, 62:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:,10:,20:, 10:5] 
                | Since{Max&index[0]} 
                | Since{Min&index[20]} 
              )
            & Since[21:] 
          )
      )
    | 
        | FracRec[21:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2012.5, 2009.5, 2009.75, 2013.0, 2009.25, 2010.75, 2011.5, 2012.0, 2013.5, 2014.25, 2015.25}), frozenset({2010.0, 2011.75, 2012.75, 2013.75, 2014.5, 2014.0, 2009.0, 2010.25, 2011.0, 2012.25, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 2)
train = (0.91521362033474929, 0.64702026340838381)
scores = (0.51919246923368956, 0.18824780161387572)
score = 0.35372013542378267
holdout = (0.6202826813854125, 0.3692800288506642)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (191, 12)
train = (1.1292483317184212, 0.76939672502446965)
scores = (0.49781518186704693, 0.19567283723635015)
score = 0.34674400955169854
holdout = (0.6785204257882265, 0.4206058485714272)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 1)
train = (0.74610094091341039, 0.54413959601569295)
scores = (0.53104609941243752, 0.19147789468117785)
score = 0.36126199704680767
holdout = (0.5518897627709901, 0.33464051385217697)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (50, 1)
train = (0.74610094091341039, 0.54413959601569295)
scores = (0.53104609941243752, 0.19147789468117785)
score = 0.36126199704680767
holdout = (0.5518897627709901, 0.33464051385217697)
>>> t = 4500 ===================================================================================================
(pair) len(F.columns) = 30
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 67
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc)
            & index[0,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [5:,10:,15:,15:10,20:10] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [20:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long| short}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.75, 2012.25, 2012.0, 2012.75, 2013.0, 2013.75, 2013.25, 2014.5, 2010.25, 2011.0, 2012.5, 2013.5, 2014.25}), frozenset({2010.5, 2010.75, 2015.0, 2011.5, 2009.25, 2009.75, 2014.0, 2009.5, 2010.0, 2011.25, 2009.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (402, 186)
train = (1.1069863118905656, 0.85505239897014729)
scores = (0.36903125292807054, 0.33798900290998746)
score = 0.353510127919029
holdout = (0.6179824066859437, 0.5314247172949119)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (325, 158)
train = (1.262315358242031, 0.83871818981872392)
scores = (0.34239642736876341, 0.33838923851377284)
score = 0.3403928329412681
holdout = (0.6670461710662218, 0.5343822932841822)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (411, 88)
train = (0.83640991513961827, 0.54516267738706137)
scores = (0.38341829606599004, 0.35804509695470349)
score = 0.37073169651034676
holdout = (0.5369504895400987, 0.4170209820785038)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (411, 88)
train = (0.83640991513961827, 0.54516267738706137)
scores = (0.38341829606599004, 0.35804509695470349)
score = 0.37073169651034676
holdout = (0.5369504895400987, 0.4170209820785038)
>>> t = 4501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 67
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|aoo|doo|dcc|doc)
            & index[0,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd|Volatility)
            & [5:,10:,15:,15:10,20:10] 
          }
      )
    | Market{.& 
        <>(~Weight)
        & ( VP| Volatility)
        & [20:] 
      }
    | 
        <>AssetEnc{InUni} 
    | 
        Time{long| short}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.75, 2012.0, 2012.5, 2012.75, 2013.75, 2014.25, 2009.75, 2010.0, 2011.5, 2012.25, 2013.5, 2014.75, 2015.25}), frozenset({2010.5, 2011.25, 2011.75, 2009.25, 2013.25, 2014.0, 2009.5, 2010.25, 2011.0, 2009.0, 2013.0, 2014.5, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 10)
train = (1.027022107329846, 0.55697522280918466)
scores = (0.43531855523720303, 0.2860493328135118)
score = 0.3606839440253574
holdout = (0.6468354882732468, 0.3737787911721415)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (325, 10)
train = (1.4802903218362335, 0.6380758056101945)
scores = (0.46201249855295118, 0.29320506674849722)
score = 0.3776087826507242
holdout = (0.7755464248816408, 0.42229412579326187)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (454, 1)
train = (0.92134946530965445, 0.36686833932388591)
scores = (0.44333672394676926, 0.32453290283265812)
score = 0.3839348133897137
holdout = (0.6158375965465451, 0.32315090845854455)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (454, 1)
train = (0.92134946530965445, 0.36686833932388591)
scores = (0.44333672394676926, 0.32453290283265812)
score = 0.3839348133897137
holdout = (0.6158375965465451, 0.32315090845854455)
>>> t = 4600 ===================================================================================================
(pair) len(F.columns) = 104
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2015.0, 2009.25, 2013.0, 2014.25, 2014.5, 2009.0, 2010.5, 2011.0, 2012.25, 2013.75, 2014.0, 2015.25}), frozenset({2010.75, 2011.5, 2011.75, 2012.5, 2012.75, 2009.75, 2013.5, 2009.5, 2010.25, 2011.25, 2012.0, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 173)
train = (0.6504310665279377, 1.3604830932896712)
scores = (0.24711351984451022, 0.37944730246976793)
score = 0.31328041115713906
holdout = (0.399684744325906, 0.6898727329430969)
>>> t = 4601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.75, 2010.25, 2011.5, 2012.0, 2009.75, 2009.0, 2014.5, 2009.5, 2010.5, 2011.0, 2012.5, 2013.0, 2014.0}), frozenset({2015.0, 2011.75, 2012.75, 2013.5, 2013.75, 2014.25, 2009.25, 2010.0, 2011.25, 2012.25, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 242)
train = (0.8324919641639057, 1.1775161282254065)
scores = (0.5484277193260525, 0.44734363973534846)
score = 0.4978856795307005
holdout = (0.6014030422480157, 0.6799586596261865)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (64, 165)
train = (0.73800449009225244, 1.0451157830555629)
scores = (0.46636852624102126, 0.42935119088074486)
score = 0.44785985856088306
holdout = (0.5209642653551209, 0.6502275910301789)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (46, 1210)
train = (0.88651147952688703, 1.7030160348389116)
scores = (0.59653661331282903, 0.50120358736051207)
score = 0.5488701003366705
holdout = (0.6283915073248287, 0.8208375472739843)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (46, 1210)
train = (0.88651147952688703, 1.7030160348389116)
scores = (0.59653661331282903, 0.50120358736051207)
score = 0.5488701003366705
holdout = (0.6283915073248287, 0.8208375472739843)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 306)
train = (0.7999091307062467, 1.3756819521958723)
scores = (0.54536623728582689, 0.48397467569105418)
score = 0.5146704564884406
holdout = (0.590850252963731, 0.7440905648584026)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (45, 218)
train = (0.81852731870412287, 1.3228254774733186)
scores = (0.50031254547100057, 0.4533907362437346)
score = 0.4768516408573676
holdout = (0.5597030883393773, 0.7170755650816215)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (30, 457)
train = (0.94568474346110787, 1.5149288881794341)
scores = (0.59823526116611669, 0.45410879490575939)
score = 0.5261720280359381
holdout = (0.6481540881352054, 0.7646882355187437)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (30, 457)
train = (0.94568474346110787, 1.5149288881794341)
scores = (0.59823526116611669, 0.45410879490575939)
score = 0.5261720280359381
holdout = (0.6481540881352054, 0.7646882355187437)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 518)
train = (1.012293586493588, 1.6698028764001172)
scores = (0.56024024459208943, 0.51862689764155501)
score = 0.5394335711168222
holdout = (0.6607372235898339, 0.8137521266890151)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 394)
train = (0.90884735630518931, 1.7467656491771895)
scores = (0.51455298673851657, 0.49671467253762197)
score = 0.5056338296380692
holdout = (0.5862288811731919, 0.785278360915925)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 704)
train = (0.99279068371665902, 1.8088538016809594)
scores = (0.59000918108655132, 0.49910794571666228)
score = 0.5445585634016068
holdout = (0.6684137940634948, 0.8375136180823781)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (40, 704)
train = (0.99279068371665902, 1.8088538016809594)
scores = (0.59000918108655132, 0.49910794571666228)
score = 0.5445585634016068
holdout = (0.6684137940634948, 0.8375136180823781)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 311)
train = (1.0861978956421157, 1.6534604848665233)
scores = (0.56820953359386717, 0.50509936827054147)
score = 0.5366544509322043
holdout = (0.6900962989669363, 0.8136271314126449)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (28, 19)
train = (0.91548019465843566, 1.4214460238469593)
scores = (0.50743295699524649, 0.41798399997392599)
score = 0.46270847848458624
holdout = (0.5917410860133578, 0.7278983592529986)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (66, 898)
train = (1.1192730352504567, 1.9435616493518382)
scores = (0.5944038291173801, 0.51571278009599053)
score = 0.5550583046066853
holdout = (0.7121851522996662, 0.8584320756253784)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (66, 898)
train = (1.1192730352504567, 1.9435616493518382)
scores = (0.5944038291173801, 0.51571278009599053)
score = 0.5550583046066853
holdout = (0.7121851522996662, 0.8584320756253784)
>>>  k = 16 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (117, 518)
train = (1.0122935864935885, 1.6698028764001753)
scores = (0.56024024459208976, 0.51862689764183045)
score = 0.5394335711169601
holdout = (0.660737223589834, 0.8137521266892557)
>>>  k = 17 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 155)
train = (0.75617864467207296, 1.2872558151303262)
scores = (0.48807355497349764, 0.45302227311608617)
score = 0.4705479140447919
holdout = (0.5234718395206233, 0.7148727291534104)
>>>  k = 18 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 704)
train = (0.99279068371665913, 1.8088538016808935)
scores = (0.59000918108655132, 0.49910794571668399)
score = 0.5445585634016177
holdout = (0.6684137940634948, 0.8375136180823618)
>>>  k = 19 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (40, 704)
train = (0.99279068371665913, 1.8088538016808935)
scores = (0.59000918108655132, 0.49910794571668399)
score = 0.5445585634016177
holdout = (0.6684137940634948, 0.8375136180823618)
>>> t = 4602 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2015.0, 2012.25, 2012.5, 2013.25, 2014.5, 2014.25, 2009.5, 2010.5, 2011.0, 2012.0, 2013.0, 2014.0, 2015.25}), frozenset({2010.0, 2010.75, 2011.5, 2011.75, 2009.25, 2009.75, 2013.75, 2009.0, 2010.25, 2011.25, 2012.75, 2013.5, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (155, 291)
train = (1.2869162620896828, 0.97086806760313593)
scores = (0.57677436029181606, 0.38042516704241475)
score = 0.47859976366711543
holdout = (0.7388161897306728, 0.5986559025479105)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (20, 216)
train = (0.83481064188296783, 0.90414931906863549)
scores = (0.53623934345307001, 0.38690300421963214)
score = 0.46157117383635105
holdout = (0.6037755084688101, 0.5616456125800977)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (153, 424)
train = (1.2426067420124101, 1.1122493446479311)
scores = (0.55710846041387918, 0.36248519198923224)
score = 0.4597968262015557
holdout = (0.7144987497652484, 0.6348178350723565)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (155, 291)
train = (1.2869162620896828, 0.97086806760313593)
scores = (0.57677436029181606, 0.38042516704241475)
score = 0.47859976366711543
holdout = (0.7388161897306728, 0.5986559025479105)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 279)
train = (1.3155040965508273, 1.0462692406742484)
scores = (0.57657933614779433, 0.37658119518733962)
score = 0.47658026566756695
holdout = (0.743268586368394, 0.6234587574398669)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 139)
train = (1.0826442372189389, 0.9735781272174977)
scores = (0.38153774713090227, 0.38841210124596015)
score = 0.3849749241884312
holdout = (0.6213155154199629, 0.5832369310527834)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (148, 284)
train = (1.3670118187020059, 1.1558423723190676)
scores = (0.55686499218689867, 0.35859383239239101)
score = 0.4577294122896448
holdout = (0.7523370273789095, 0.6360245768888184)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (83, 279)
train = (1.3155040965508273, 1.0462692406742484)
scores = (0.57657933614779433, 0.37658119518733962)
score = 0.47658026566756695
holdout = (0.743268586368394, 0.6234587574398669)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (115, 453)
train = (1.470061375521706, 1.2055780222314121)
scores = (0.60211836009811892, 0.39931876301643793)
score = 0.5007185615572785
holdout = (0.7812205020394439, 0.6770808357593701)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 570)
train = (1.2920095513581444, 1.5089029470166868)
scores = (0.30760765883408503, 0.43856029116701251)
score = 0.3730839750005488
holdout = (0.6500646278375306, 0.7107372235563303)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (84, 348)
train = (1.1472731966539063, 1.302679330932869)
scores = (0.55332388902006324, 0.36617020081161272)
score = 0.45974704491583795
holdout = (0.6901601175614712, 0.6843584681965934)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (115, 453)
train = (1.470061375521706, 1.2055780222314121)
scores = (0.60211836009811892, 0.39931876301643793)
score = 0.5007185615572785
holdout = (0.7812205020394439, 0.6770808357593701)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (98, 530)
train = (1.4889297861219903, 1.2959864484972998)
scores = (0.5983154329626682, 0.41666699990063144)
score = 0.5074912164316498
holdout = (0.7882203960994476, 0.703218555857239)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 358)
train = (1.435275891679338, 1.4690657567023588)
scores = (0.29261074983477142, 0.42139776106646926)
score = 0.3570042554506203
holdout = (0.6702203027570915, 0.7009764226167928)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (105, 308)
train = (1.2870815504362523, 1.3198787599054265)
scores = (0.56266674822542595, 0.36536079926545717)
score = 0.46401377374544156
holdout = (0.7358791783780753, 0.682446507320196)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (98, 530)
train = (1.4889297861219903, 1.2959864484972998)
scores = (0.5983154329626682, 0.41666699990063144)
score = 0.5074912164316498
holdout = (0.7882203960994476, 0.703218555857239)
>>> t = 4603 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 201
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doc|vp1dd)
            & index[0,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[1:,10:,20:, 10:5,20:10] 
                | Since{Max&index[0]} 
                | Drawup[ 5:,10:] 
                | Since{Min&index[0]} 
              )
            & Since[21:, 62:, 125:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [20:] 
      }
#<>#
0
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp5dd)
            & [3:,6:,9:,12:,15:,18:15,21:18,12:6,21:15,12:3,15:6,18:9,21:9,21:3] 
          }
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Drawdown[1:] 
                | Since{Max & index[20]} 
                | Drawup[1,10:,20:,20:10] 
                | Since{Min & index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2010.25, 2010.5, 2011.75, 2011.5, 2011.25, 2012.25, 2010.75, 2011.0, 2012.75, 2013.5, 2014.25, 2015.0}), frozenset({2012.5, 2009.0, 2009.25, 2013.25, 2013.75, 2009.75, 2014.5, 2014.0, 2009.5, 2012.0, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (8, 44)
train = (0.70815535821147801, 0.70209216298866484)
scores = (0.28807875814874628, 0.52942680876824666)
score = 0.40875278345849647
holdout = (0.43653597448132714, 0.5397072887981776)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (187, 81)
train = (1.8070407934512325, 0.72348712673885174)
scores = (0.41066137475216258, 0.56551042688430686)
score = 0.4880859008182347
holdout = (0.7521746254736302, 0.49968753315566705)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (479, 40)
train = (1.4173758098347613, 0.75511332408508969)
scores = (0.32294941297318591, 0.50253715001444754)
score = 0.4127432814938167
holdout = (0.6192290692386548, 0.5646789051039299)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (187, 81)
train = (1.8070407934512325, 0.72348712673885174)
scores = (0.41066137475216258, 0.56551042688430686)
score = 0.4880859008182347
holdout = (0.7521746254736302, 0.49968753315566705)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (422, 88)
train = (1.9754640391057117, 0.88296682217251876)
scores = (0.38440372214803575, 0.53326232920136318)
score = 0.45883302567469947
holdout = (0.7507679837538912, 0.6131501448600841)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (40, 75)
train = (1.6096753186114545, 0.83522248348328121)
scores = (0.35844432516272817, 0.55263896894023501)
score = 0.4555416470514816
holdout = (0.6973325379180533, 0.5431049752264759)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (614, 36)
train = (1.7554012163422548, 0.84504221452879247)
scores = (0.33795740817981579, 0.48180859849401664)
score = 0.4098830033369162
holdout = (0.6965019746935207, 0.5928994160683132)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (422, 88)
train = (1.9754640391057117, 0.88296682217251876)
scores = (0.38440372214803575, 0.53326232920136318)
score = 0.45883302567469947
holdout = (0.7507679837538912, 0.6131501448600841)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (515, 80)
train = (2.3036347890993678, 0.94923276642505861)
scores = (0.39049711441469781, 0.52496200640522117)
score = 0.4577295604099595
holdout = (0.7964935146895796, 0.6420135088405619)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (250, 48)
train = (2.5181349371574919, 0.87582377783278409)
scores = (0.43213096445553839, 0.539738782528423)
score = 0.4859348734919807
holdout = (0.8357813658836597, 0.5576510165734817)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (582, 41)
train = (1.8048991003196091, 0.90298651237482053)
scores = (0.35087615520031867, 0.48411016468875318)
score = 0.41749315994453595
holdout = (0.7163184967607327, 0.6110219127419971)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (250, 48)
train = (2.5181349371574919, 0.87582377783278409)
scores = (0.43213096445553839, 0.539738782528423)
score = 0.4859348734919807
holdout = (0.8357813658836597, 0.5576510165734817)
>>> t = 4700 ===================================================================================================
(pair) len(F.columns) = 77
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 121
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:] 
                | Since{Max&index[0]} 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Max & index[0]} 
                | Drawup[1, 5:] 
                | Since{Min & index[0,20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|daoc|vp1dd)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd|Volatility)
            & [3:,12:,15:,9:3,18:9,15:3,18:6,21:9,21:6] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[5,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.0, 2011.75, 2012.25, 2013.25, 2013.0, 2013.75, 2010.5, 2011.5, 2012.5, 2013.5, 2014.0, 2015.0}), frozenset({2011.25, 2012.75, 2009.0, 2009.25, 2009.75, 2014.5, 2014.25, 2009.5, 2010.75, 2011.0, 2012.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (123, 24)
train = (1.0332560550117489, 0.81621358657159082)
scores = (0.34559086477912843, 0.42995966858599233)
score = 0.38777526668256035
holdout = (0.5307459616745676, 0.5369246657972926)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (88, 22)
train = (1.3173588878084095, 0.7760949634295754)
scores = (0.34783400077258209, 0.43483597490714643)
score = 0.39133498783986426
holdout = (0.612455379287775, 0.5349476092015106)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (683, 235)
train = (1.7982976464923306, 0.94257137445460848)
scores = (0.34495279795522243, 0.51231479400845348)
score = 0.42863379598183793
holdout = (0.7092835329479378, 0.6211530035083624)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (683, 235)
train = (1.7982976464923306, 0.94257137445460848)
scores = (0.34495279795522243, 0.51231479400845348)
score = 0.42863379598183793
holdout = (0.7092835329479378, 0.6211530035083624)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (351, 30)
train = (2.1044517562268883, 0.89761525626636884)
scores = (0.37690881704883089, 0.45514424277398957)
score = 0.4160265299114102
holdout = (0.7732091694805291, 0.583887857648279)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (97, 17)
train = (1.9083872565107722, 0.89530241522809462)
scores = (0.35246707407348793, 0.45943929944166711)
score = 0.4059531867575775
holdout = (0.7395874755380168, 0.5860984198568366)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (150, 397)
train = (0.92704287439454935, 1.1446619504226132)
scores = (0.28941913060868996, 0.5255115969821007)
score = 0.40746536379539533
holdout = (0.4777377850156992, 0.6920280296185315)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (351, 30)
train = (2.1044517562268883, 0.89761525626636884)
scores = (0.37690881704883089, 0.45514424277398957)
score = 0.4160265299114102
holdout = (0.7732091694805291, 0.583887857648279)
>>> t = 4701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 121
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|doo[1:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,20:] 
                | Since{Max&index[0]} 
                | Since{Min&index[0,5]} 
              )
            & Since[ 62:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Max & index[0]} 
                | Drawup[1, 5:] 
                | Since{Min & index[0,20]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | 
    | 
        <>AssetEnc{InUni} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo|daoc|vp1dd)
            & index[0,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp1dd|vp5dd|Volatility)
            & [3:,12:,15:,9:3,18:9,15:3,18:6,21:9,21:6] 
          }
        | ( 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,10]} 
                | Drawup[20:10] 
                | Since{Min & index[5,10]} 
              )
            & Since[ 125:] 
          )
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.25, 2012.25, 2009.5, 2009.25, 2013.5, 2013.0, 2014.25, 2014.5, 2009.0, 2010.75, 2012.5, 2013.75, 2014.0}), frozenset({2010.0, 2015.0, 2011.25, 2011.5, 2011.75, 2012.75, 2009.75, 2010.5, 2011.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (49, 14)
train = (0.83785025875402486, 0.69392008418466355)
scores = (0.45147887782717938, 0.39051088137577755)
score = 0.42099487960147847
holdout = (0.5679018648484976, 0.48118914292314074)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 29)
train = (0.78982858974445502, 1.0415588810900174)
scores = (0.43680560742044944, 0.4105124426854917)
score = 0.4236590250529706
holdout = (0.5462229357566364, 0.605238015244705)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 24)
train = (0.72138382114059718, 0.5214148464564522)
scores = (0.44008968827489253, 0.37774384764875529)
score = 0.4089167679618239
holdout = (0.511939401209054, 0.4077525998538302)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (41, 29)
train = (0.78982858974445502, 1.0415588810900174)
scores = (0.43680560742044944, 0.4105124426854917)
score = 0.4236590250529706
holdout = (0.5462229357566364, 0.605238015244705)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (66, 27)
train = (0.91894250972603675, 0.82671066805251592)
scores = (0.45545852178478552, 0.40101871467810851)
score = 0.42823861823144704
holdout = (0.5993920903394503, 0.540213628726078)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (44, 193)
train = (0.90112133558094965, 2.0299586961264144)
scores = (0.42965979229856593, 0.45771094598981599)
score = 0.443685369144191
holdout = (0.5825369873348343, 0.8221052858367383)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (35, 37)
train = (0.74610124034283043, 0.57516705518817279)
scores = (0.43690322448191937, 0.37868805086793167)
score = 0.40779563767492555
holdout = (0.5193306566291147, 0.43142765453722004)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (44, 193)
train = (0.90112133558094965, 2.0299586961264144)
scores = (0.42965979229856593, 0.45771094598981599)
score = 0.443685369144191
holdout = (0.5825369873348343, 0.8221052858367383)
>>> t = 4800 ===================================================================================================
(pair) len(F.columns) = 23
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 48
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Max&index[0,10,20]} 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:] 
      }
    | 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.0, 2011.5, 2012.75, 2009.5, 2013.5, 2013.0, 2014.0, 2009.75, 2011.25, 2009.25, 2013.75, 2014.75, 2015.0}), frozenset({2010.0, 2010.5, 2010.75, 2012.25, 2012.5, 2014.25, 2009.0, 2010.25, 2011.75, 2012.0, 2013.25, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 277)
train = (0.4605307051036886, 0.85985447351121091)
scores = (0.31912360480663204, 0.37476967424977992)
score = 0.346946639528206
holdout = (0.36047415039647673, 0.5498604842868443)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.61812339578091957, 0.59734031970309143)
scores = (0.34568301941519552, 0.35156542977774163)
score = 0.3486242245964686
holdout = (0.43638643651917286, 0.41659383352007884)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 277)
train = (0.38718379124017005, 0.74825281153015788)
scores = (0.28738309117285638, 0.37440216226828554)
score = 0.33089262672057096
holdout = (0.3200710265307469, 0.5004855733221525)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 1)
train = (0.61812339578091957, 0.59734031970309143)
scores = (0.34568301941519552, 0.35156542977774163)
score = 0.3486242245964686
holdout = (0.43638643651917286, 0.41659383352007884)
>>> t = 4801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 48
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [15:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:, 10:5] 
                | Since{Max&index[0,10,20]} 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:] 
      }
    | 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.25, 2011.0, 2013.5, 2013.0, 2014.75, 2014.0, 2009.5, 2010.75, 2011.75, 2012.75, 2013.75, 2014.5, 2015.0}), frozenset({2010.0, 2010.5, 2012.25, 2012.5, 2009.25, 2009.75, 2009.0, 2010.25, 2011.5, 2012.0, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 15)
train = (0.52487826599225262, 0.52455226283921685)
scores = (0.26987525980215776, 0.39054286923588433)
score = 0.33020906451902104
holdout = (0.3608537571829141, 0.4118045410873425)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (373, 3)
train = (1.6227867437077188, 0.59346549861257647)
scores = (0.33487069656873125, 0.41025322245179052)
score = 0.3725619595102609
holdout = (0.704117810578268, 0.45699171051505516)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 335)
train = (0.426614092082369, 0.80424829421725685)
scores = (0.23338147125024183, 0.42133835216377991)
score = 0.32735991170701084
holdout = (0.30357393304623165, 0.5460875561713566)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (373, 3)
train = (1.6227867437077188, 0.59346549861257647)
scores = (0.33487069656873125, 0.41025322245179052)
score = 0.3725619595102609
holdout = (0.704117810578268, 0.45699171051505516)
>>> t = 4900 ===================================================================================================
(pair) len(F.columns) = 26
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.75, 2010.5, 2011.5, 2012.75, 2012.0, 2012.5, 2013.0, 2009.75, 2010.25, 2011.75, 2012.25, 2013.5, 2014.0}), frozenset({2015.0, 2011.25, 2009.25, 2013.75, 2014.5, 2014.25, 2009.5, 2010.0, 2011.0, 2009.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (74, 4)
train = (0.97430161593280973, 0.71811811912329493)
scores = (0.48895946091858611, 0.37914204095957521)
score = 0.43405075093908063
holdout = (0.5843175386975644, 0.4824140519358199)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 365)
train = (0.92258512749542909, 1.0142370066792747)
scores = (0.54139491494490255, 0.47280250587326877)
score = 0.5070987104090856
holdout = (0.5998202414223792, 0.6085923058793932)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 780)
train = (0.47349302872288251, 1.0867422680313918)
scores = (0.43137928006876225, 0.4458635152044142)
score = 0.43862139763658825
holdout = (0.3883345785097463, 0.6628252920363696)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (5, 365)
train = (0.92258512749542909, 1.0142370066792747)
scores = (0.54139491494490255, 0.47280250587326877)
score = 0.5070987104090856
holdout = (0.5998202414223792, 0.6085923058793932)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 37)
train = (0.97514139294718871, 0.80320576726639892)
scores = (0.50196789872554382, 0.38685992926365265)
score = 0.44441391399459823
holdout = (0.5947968171509663, 0.5359349636355272)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (6, 6)
train = (1.1361083357554456, 0.74022413802669562)
scores = (0.52231507712359149, 0.36178793377501606)
score = 0.44205150544930377
holdout = (0.6595419273578516, 0.5074440397429139)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (94, 649)
train = (0.87649886705154456, 1.1782572093593588)
scores = (0.47199003526494093, 0.45752884434510849)
score = 0.4647594398050247
holdout = (0.5382525578070324, 0.6912506055296392)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (94, 649)
train = (0.87649886705154456, 1.1782572093593588)
scores = (0.47199003526494093, 0.45752884434510849)
score = 0.4647594398050247
holdout = (0.5382525578070324, 0.6912506055296392)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (57, 221)
train = (1.1211872419136533, 1.0255762413939149)
scores = (0.50194998187963025, 0.44238224289766598)
score = 0.47216611238864814
holdout = (0.6356319938209509, 0.6343827562723338)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 7)
train = (1.3765642265868885, 0.87178242857821897)
scores = (0.53566770716792578, 0.35758365481487547)
score = 0.44662568099140065
holdout = (0.7307538947526607, 0.5511831579358095)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (83, 8)
train = (0.8515070985301717, 0.68612693564867566)
scores = (0.4678720053654421, 0.37046369009997127)
score = 0.41916784773270666
holdout = (0.5269412157373004, 0.44674842003870857)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (57, 221)
train = (1.1211872419136533, 1.0255762413939149)
scores = (0.50194998187963025, 0.44238224289766598)
score = 0.47216611238864814
holdout = (0.6356319938209509, 0.6343827562723338)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (62, 201)
train = (1.1924407147456655, 1.0631495199729686)
scores = (0.50734808504834294, 0.43469775277442629)
score = 0.4710229189113846
holdout = (0.6593113412177948, 0.6411850262536448)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 5)
train = (1.6128283921079567, 1.0038876332413396)
scores = (0.4973032529969526, 0.37400656010781602)
score = 0.4356549065523843
holdout = (0.7658828035299751, 0.5974521247119676)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (89, 473)
train = (0.86934498873064681, 1.2208727769914152)
scores = (0.46899993139148133, 0.45769075019211858)
score = 0.46334534079179995
holdout = (0.5342480506090432, 0.6956174013223727)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (62, 201)
train = (1.1924407147456655, 1.0631495199729686)
scores = (0.50734808504834294, 0.43469775277442629)
score = 0.4710229189113846
holdout = (0.6593113412177948, 0.6411850262536448)
>>> t = 4901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2010.5, 2011.5, 2009.25, 2014.25, 2014.0, 2009.5, 2015.25, 2011.75, 2012.5, 2013.25, 2014.5, 2015.0}), frozenset({2010.0, 2011.25, 2012.25, 2012.75, 2009.75, 2013.5, 2013.75, 2009.0, 2010.75, 2011.0, 2012.0, 2013.0, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 48)
train = (0.76924942844007338, 0.8612207408338961)
scores = (0.46690871609322965, 0.55464414830160202)
score = 0.5107764321974159
holdout = (0.5249076750660941, 0.5943899489687929)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 8)
train = (1.0336566292198732, 0.99721239288712293)
scores = (0.4861366614325181, 0.47012320723215778)
score = 0.47812993433233797
holdout = (0.6431129866261938, 0.6214896381841016)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 194)
train = (0.68324928094209125, 0.96912612745149462)
scores = (0.45645188256068825, 0.54292151851704307)
score = 0.49968670053886566
holdout = (0.47663963623426187, 0.6302188396759096)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (111, 48)
train = (0.76924942844007338, 0.8612207408338961)
scores = (0.46690871609322965, 0.55464414830160202)
score = 0.5107764321974159
holdout = (0.5249076750660941, 0.5943899489687929)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 51)
train = (0.7581440625953898, 0.92577920611415332)
scores = (0.47940170075556054, 0.55067518020474726)
score = 0.5150384404801539
holdout = (0.5241886697188272, 0.6179467512094808)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (215, 11)
train = (1.1949344838274634, 1.1077695710200746)
scores = (0.50416888369094781, 0.4886665139426154)
score = 0.4964176988167816
holdout = (0.6880675844577211, 0.6666924543573111)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (128, 174)
train = (0.84350064682808834, 1.0446134872457444)
scores = (0.47041812277437978, 0.54115402477613772)
score = 0.5057860737752587
holdout = (0.5277419300403636, 0.6512227745706576)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (48, 51)
train = (0.7581440625953898, 0.92577920611415332)
scores = (0.47940170075556054, 0.55067518020474726)
score = 0.5150384404801539
holdout = (0.5241886697188272, 0.6179467512094808)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 43)
train = (0.7039708685424575, 0.95046709134871976)
scores = (0.47315580848310279, 0.54886856930561978)
score = 0.5110121888943613
holdout = (0.4916874083553583, 0.6228616405239719)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (225, 10)
train = (1.3219152804568928, 1.223607437154389)
scores = (0.50993591399964067, 0.47237531756088064)
score = 0.4911556157802607
holdout = (0.7145780678719427, 0.6854353847213721)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 154)
train = (0.68988970892209989, 1.0188938992281815)
scores = (0.45534576369428242, 0.54044729810641257)
score = 0.49789653090034747
holdout = (0.47808930523087817, 0.6432907006615748)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 43)
train = (0.7039708685424575, 0.95046709134871976)
scores = (0.47315580848310279, 0.54886856930561978)
score = 0.5110121888943613
holdout = (0.4916874083553583, 0.6228616405239719)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (32, 131)
train = (0.83278040514309648, 1.2085344347853395)
scores = (0.47959080295427586, 0.5555563345785216)
score = 0.5175735687663987
holdout = (0.5446629431358112, 0.7062514109014691)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (102, 9)
train = (1.3039421051105651, 1.3098901719031986)
scores = (0.48966212898590611, 0.46227493864921959)
score = 0.4759685338175629
holdout = (0.7130133724569842, 0.7055281563535013)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (318, 175)
train = (1.1373155237337367, 1.0722450191061679)
scores = (0.48688368055613673, 0.53866365360226875)
score = 0.5127736670792027
holdout = (0.6449943304485182, 0.661963070929052)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (32, 131)
train = (0.83278040514309648, 1.2085344347853395)
scores = (0.47959080295427586, 0.5555563345785216)
score = 0.5175735687663987
holdout = (0.5446629431358112, 0.7062514109014691)
>>> t = 4902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2015.0, 2011.5, 2011.0, 2013.25, 2014.25, 2014.75, 2009.75, 2010.0, 2011.25, 2012.0, 2013.75, 2014.0, 2015.25}), frozenset({2010.5, 2010.75, 2012.5, 2012.75, 2009.0, 2009.25, 2013.5, 2009.5, 2010.25, 2011.75, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (240, 7)
train = (1.381538127551236, 0.70129332942961764)
scores = (0.45149801924911059, 0.35074094087866298)
score = 0.40111948006388676
holdout = (0.6881487594510357, 0.4561241200818343)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 215)
train = (1.6987160177207692, 0.86471957379950448)
scores = (0.48829600239028409, 0.45066699386940451)
score = 0.4694814981298443
holdout = (0.7963023851412665, 0.5441950310851232)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 3)
train = (0.5224620987070594, 0.61087773760993336)
scores = (0.26673054532151841, 0.40260506792156919)
score = 0.33466780662154383
holdout = (0.340743672167108, 0.42567186247410704)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (186, 215)
train = (1.6987160177207692, 0.86471957379950448)
scores = (0.48829600239028409, 0.45066699386940451)
score = 0.4694814981298443
holdout = (0.7963023851412665, 0.5441950310851232)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 6)
train = (0.62961189570453335, 0.80797181884116465)
scores = (0.30589181203451726, 0.38628417687499295)
score = 0.34608799445475513
holdout = (0.4319679370420946, 0.5084442968053595)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (156, 4)
train = (1.8139571879773568, 0.64171672217794129)
scores = (0.48718960169611397, 0.37405011460221232)
score = 0.43061985814916315
holdout = (0.8086499863627775, 0.4533678741170987)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1051, 3)
train = (1.8645764518632462, 0.61087773760993336)
scores = (0.50101970889571545, 0.40260506792156914)
score = 0.4518123884086423
holdout = (0.8253588673482594, 0.42567186247410704)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1051, 3)
train = (1.8645764518632462, 0.61087773760993336)
scores = (0.50101970889571545, 0.40260506792156914)
score = 0.4518123884086423
holdout = (0.8253588673482594, 0.42567186247410704)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (297, 73)
train = (1.7395095699294689, 0.87463295487246639)
scores = (0.47328678260994661, 0.40270274598944172)
score = 0.4379947642996942
holdout = (0.780103498187092, 0.5448246846608099)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (131, 112)
train = (1.8783977567506918, 0.93161345837387477)
scores = (0.47421235337104417, 0.43304485344921845)
score = 0.45362860341013134
holdout = (0.8105496277657233, 0.5615257842150163)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (556, 3)
train = (1.6394802240163957, 0.61087773760993336)
scores = (0.48211059529392836, 0.40260506792156919)
score = 0.4423578316077488
holdout = (0.7718717460290048, 0.42567186247410704)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (131, 112)
train = (1.8783977567506918, 0.93161345837387477)
scores = (0.47421235337104417, 0.43304485344921845)
score = 0.45362860341013134
holdout = (0.8105496277657233, 0.5615257842150163)
>>> t = 4903 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 37
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]})} 
            & (
                | Drawdown[10:,20:,20:10] 
                | Since{Max&index[0]} 
                | Since{Min&index[5]} 
              )
            & Since[21:, 250:] 
          )
      )
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[0]} 
              )
            & Since[21:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight| Weight)
        & ( VP)
        & [10:] 
      }
    | 
        | Return{mix[1,3,4,7,9,11,12,13,19]}
#<>#
    <>0
    | Corr & Corr{ 
        <>[62]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2011.75, 2012.0, 2009.0, 2014.75, 2009.25, 2010.0, 2011.25, 2012.75, 2013.0, 2014.5, 2015.0}), frozenset({2010.75, 2012.5, 2009.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.5, 2011.0, 2012.25, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 45)
train = (0.6882204913507326, 0.73911003739846437)
scores = (0.46428815036635168, 0.54666279685663832)
score = 0.505475473611495
holdout = (0.4935181187173002, 0.564215681638777)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 38)
train = (0.67495212144110484, 0.98456856332717158)
scores = (0.49984110421733091, 0.52296294878892036)
score = 0.5114020265031256
holdout = (0.4848798679370535, 0.6339695038943387)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 492)
train = (0.51677279342295546, 1.3295121600797393)
scores = (0.47621264271134139, 0.55123892888729387)
score = 0.5137257857993176
holdout = (0.4174330699537848, 0.743562745443727)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 492)
train = (0.51677279342295546, 1.3295121600797393)
scores = (0.47621264271134139, 0.55123892888729387)
score = 0.5137257857993176
holdout = (0.4174330699537848, 0.743562745443727)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 37)
train = (0.7221629876352843, 0.78308515305285342)
scores = (0.47499748716781259, 0.56582183860354918)
score = 0.5204096628856809
holdout = (0.49244185182744227, 0.5902831458653853)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (161, 202)
train = (0.98112373827124943, 1.8775863519134863)
scores = (0.52806081615701916, 0.54869298183839399)
score = 0.5383768989977066
holdout = (0.5900812779222443, 0.868592396539611)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 480)
train = (0.54606530701705958, 1.4489080614918273)
scores = (0.47201621943973776, 0.56172682560881204)
score = 0.5168715225242749
holdout = (0.43020044435809957, 0.7775540418828748)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (161, 202)
train = (0.98112373827124943, 1.8775863519134863)
scores = (0.52806081615701916, 0.54869298183839399)
score = 0.5383768989977066
holdout = (0.5900812779222443, 0.868592396539611)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 21)
train = (0.76721541649377789, 0.75460869043575596)
scores = (0.48119276676439621, 0.55604202661563329)
score = 0.5186173966900147
holdout = (0.5112427676402138, 0.5708219069407275)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (197, 144)
train = (1.1200064644817003, 2.0194788015899068)
scores = (0.51249914092682769, 0.5670325901938994)
score = 0.5397658655603635
holdout = (0.6201563281839513, 0.897563498158927)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 407)
train = (0.54606530701705958, 1.3991365056061553)
scores = (0.47201621943973776, 0.54593155696104778)
score = 0.5089738882003928
holdout = (0.43020044435809957, 0.7548288937083028)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (197, 144)
train = (1.1200064644817003, 2.0194788015899068)
scores = (0.51249914092682769, 0.5670325901938994)
score = 0.5397658655603635
holdout = (0.6201563281839513, 0.897563498158927)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 37)
train = (0.77137694620908448, 0.87708647673076756)
scores = (0.47917424313983092, 0.5617972391428151)
score = 0.5204857411413231
holdout = (0.512235756003398, 0.6209248864493431)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (213, 118)
train = (1.2048874446985165, 2.0484012496330539)
scores = (0.53368306992706782, 0.56156202197952942)
score = 0.5476225459532986
holdout = (0.6396944117329133, 0.8936828155239197)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 395)
train = (0.54606530701705958, 1.4134477533787897)
scores = (0.47201621943973776, 0.54979319995815878)
score = 0.5109047096989483
holdout = (0.43020044435809957, 0.7619863838178862)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (213, 118)
train = (1.2048874446985165, 2.0484012496330539)
scores = (0.53368306992706782, 0.56156202197952942)
score = 0.5476225459532986
holdout = (0.6396944117329133, 0.8936828155239197)
>>> t = 5000 ===================================================================================================
(pair) len(F.columns) = 25
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 54
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [9:,12:9,18:15,12:6,12:3,18:9,15:3,18:6,21:9,21:6,21:3] 
          }
      )
    | 
        <>FaceValue{Volume| Close} 
        | Return{mix[2,3,7,8,9,11,12,14,16,17,19]}
        | Return{ af| it} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2012.0, 2012.75, 2012.25, 2009.25, 2009.75, 2013.0, 2013.5, 2009.5, 2010.75, 2012.5, 2013.75, 2014.0, 2015.25}), frozenset({2010.25, 2010.5, 2011.25, 2011.5, 2011.75, 2014.5, 2014.25, 2009.0, 2010.0, 2011.0, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (230, 129)
train = (0.89939344427335977, 0.83728302084335526)
scores = (0.45249512870775743, 0.36686251145731519)
score = 0.4096788200825363
holdout = (0.6007364152189238, 0.5250759253219003)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (76, 44)
train = (0.7777439401805023, 0.69157604755134494)
scores = (0.38608505765496576, 0.37107552051185527)
score = 0.3785802890834105
holdout = (0.525346953966944, 0.4845136333203156)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (189, 113)
train = (0.85254576651146952, 0.79933902009003965)
scores = (0.46128043322187723, 0.36543697638588607)
score = 0.41335870480388165
holdout = (0.5904381108786335, 0.4982087576268577)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (189, 113)
train = (0.85254576651146952, 0.79933902009003965)
scores = (0.46128043322187723, 0.36543697638588607)
score = 0.41335870480388165
holdout = (0.5904381108786335, 0.4982087576268577)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (109, 36)
train = (0.91585485188028359, 0.83155334178022422)
scores = (0.4559472279945837, 0.36339709268111892)
score = 0.4096721603378513
holdout = (0.6128442188108033, 0.5153247381921938)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 12)
train = (0.9523485059216219, 0.81529226567649493)
scores = (0.39814269514593154, 0.32122979312869826)
score = 0.35968624413731487
holdout = (0.59025812457596, 0.5160703304432003)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (254, 119)
train = (0.97900347869956483, 0.84872267645113775)
scores = (0.47717068399293905, 0.36178923129474527)
score = 0.41947995764384216
holdout = (0.6375782488308258, 0.5139208822876468)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (254, 119)
train = (0.97900347869956483, 0.84872267645113775)
scores = (0.47717068399293905, 0.36178923129474527)
score = 0.41947995764384216
holdout = (0.6375782488308258, 0.5139208822876468)
>>> t = 5001 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 54
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(doo|vp5dd)
            & [9:,12:9,18:15,12:6,12:3,18:9,15:3,18:6,21:9,21:6,21:3] 
          }
      )
    | 
        <>FaceValue{Volume| Close} 
        | Return{mix[2,3,7,8,9,11,12,14,16,17,19]}
        | Return{ af| it} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10]
      }
len(samps) = 2
(frozenset({2010.5, 2015.0, 2012.5, 2013.75, 2014.75, 2014.0, 2009.0, 2010.0, 2011.5, 2012.0, 2013.0, 2014.5, 2015.25}), frozenset({2010.75, 2011.25, 2011.75, 2012.75, 2009.25, 2009.75, 2013.5, 2009.5, 2010.25, 2011.0, 2012.25, 2013.25, 2014.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (41, 11)
train = (0.759800459311469, 0.75891963941771234)
scores = (0.45665698708645996, 0.31164509013746206)
score = 0.384151038611961
holdout = (0.5435379260750633, 0.4455159979469378)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 7)
train = (0.57931298835447231, 0.78448560337422879)
scores = (0.46848592172787717, 0.26812683915881413)
score = 0.3683063804433456
holdout = (0.43922220193186706, 0.44998331159812843)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (60, 20)
train = (0.68512079643793655, 0.72149338923146977)
scores = (0.4385514696686495, 0.31606428196848613)
score = 0.37730787581856784
holdout = (0.5153974020734209, 0.44959493228470526)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (41, 11)
train = (0.759800459311469, 0.75891963941771234)
scores = (0.45665698708645996, 0.31164509013746206)
score = 0.384151038611961
holdout = (0.5435379260750633, 0.4455159979469378)
>>> t = 5100 ===================================================================================================
(pair) len(F.columns) = 29
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 66
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [10:,15:,15:10,20:15,20:10,20:5] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2015.0, 2011.75, 2013.25, 2013.5, 2014.0, 2009.25, 2010.0, 2011.0, 2012.0, 2013.75, 2014.75, 2015.25}), frozenset({2010.75, 2011.5, 2012.5, 2012.75, 2009.0, 2009.75, 2014.25, 2009.5, 2010.5, 2011.25, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1022, 51)
train = (1.2613883274091706, 0.66408879851680536)
scores = (0.46979890766813115, 0.44494589607312784)
score = 0.4573724018706295
holdout = (0.698324648145988, 0.5180661696973824)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (280, 38)
train = (1.113446136993864, 0.70085916768600098)
scores = (0.42694006496321985, 0.43895428276698617)
score = 0.432947173865103
holdout = (0.6514633080854475, 0.531524365754897)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (325, 68)
train = (0.76358768381179309, 0.57296369139050607)
scores = (0.44219257841299942, 0.42002481327087238)
score = 0.4311086958419359
holdout = (0.5323063417102193, 0.4658386873439001)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1022, 51)
train = (1.2613883274091706, 0.66408879851680536)
scores = (0.46979890766813115, 0.44494589607312784)
score = 0.4573724018706295
holdout = (0.698324648145988, 0.5180661696973824)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (645, 42)
train = (1.2819579425869558, 0.69816081275148323)
scores = (0.47552353908460604, 0.44536287132402036)
score = 0.4604432052043132
holdout = (0.7028703730174053, 0.5306433008723828)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (470, 23)
train = (1.3459057876736289, 0.82376721861039293)
scores = (0.44274190086277571, 0.44532936206828649)
score = 0.4440356314655311
holdout = (0.7134860776168023, 0.582105894190276)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (732, 49)
train = (1.0555442854311423, 0.57196645684317238)
scores = (0.48660433228552535, 0.42265840356533324)
score = 0.4546313679254293
holdout = (0.6468312842761775, 0.4670817620554724)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (645, 42)
train = (1.2819579425869558, 0.69816081275148323)
scores = (0.47552353908460604, 0.44536287132402036)
score = 0.4604432052043132
holdout = (0.7028703730174053, 0.5306433008723828)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (685, 37)
train = (1.3978972592756431, 0.70090933878844486)
scores = (0.4876877773868572, 0.44680574730581324)
score = 0.4672467623463352
holdout = (0.7398392159398984, 0.5313214217548308)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 24)
train = (1.3706521870926656, 0.93003658277362788)
scores = (0.43124465832503422, 0.4628697631456965)
score = 0.44705721073536536
holdout = (0.7172205975571585, 0.6276227911806607)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (616, 47)
train = (1.0390394923838528, 0.5683176954550806)
scores = (0.48612588689848396, 0.41892189623907072)
score = 0.45252389156877737
holdout = (0.6402789108050466, 0.46289617528807514)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (685, 37)
train = (1.3978972592756431, 0.70090933878844486)
scores = (0.4876877773868572, 0.44680574730581324)
score = 0.4672467623463352
holdout = (0.7398392159398984, 0.5313214217548308)
>>> t = 5101 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 66
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [10:,15:,15:10,20:15,20:10,20:5] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2015.25, 2011.25, 2012.75, 2012.5, 2009.75, 2014.25, 2009.5, 2010.0, 2011.5, 2012.0, 2013.0, 2014.5, 2015.0}), frozenset({2010.25, 2010.75, 2011.75, 2009.25, 2013.5, 2013.75, 2014.0, 2009.0, 2010.5, 2011.0, 2012.25, 2013.25, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (55, 440)
train = (0.72047209087112885, 0.87319554839468227)
scores = (0.48785984471289306, 0.34306329841589805)
score = 0.41546157156439556
holdout = (0.5514796007884716, 0.5400507682337982)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (25, 56)
train = (0.91457935746891261, 0.78612519011526483)
scores = (0.47090277264459629, 0.30102017155947031)
score = 0.3859614721020333
holdout = (0.6108315819511211, 0.5022479098556212)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (18, 812)
train = (0.58261167374312683, 0.90020464668222056)
scores = (0.4931504924251236, 0.36342995718539151)
score = 0.4282902248052576
holdout = (0.5114253877666672, 0.5550456567435179)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (18, 812)
train = (0.58261167374312683, 0.90020464668222056)
scores = (0.4931504924251236, 0.36342995718539151)
score = 0.4282902248052576
holdout = (0.5114253877666672, 0.5550456567435179)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (52, 73)
train = (0.7793129698542085, 0.76974883589085907)
scores = (0.4894396877805664, 0.31827529336214233)
score = 0.40385749057135434
holdout = (0.5743034566868152, 0.4887700470072983)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (13, 44)
train = (1.0508235094131138, 0.92668502302593769)
scores = (0.47266671389768322, 0.30574169744947527)
score = 0.3892042056735793
holdout = (0.6648931497735424, 0.5557232315940452)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 564)
train = (0.59277103577401069, 0.88699881577059092)
scores = (0.499641040176385, 0.36163371493241403)
score = 0.4306373775543995
holdout = (0.5191947540388854, 0.5460246596994197)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (19, 564)
train = (0.59277103577401069, 0.88699881577059092)
scores = (0.499641040176385, 0.36163371493241403)
score = 0.4306373775543995
holdout = (0.5191947540388854, 0.5460246596994197)
>>> t = 5102 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 66
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|aoo|dcc|daoc)
            & index[0,1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|doo|vp1dd|Volatility)
            & [10:,15:,15:10,20:15,20:10,20:5] 
          }
      )
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2010.75, 2011.25, 2012.25, 2012.75, 2014.25, 2009.25, 2010.5, 2011.75, 2012.5, 2013.0, 2014.5, 2015.0}), frozenset({2011.5, 2009.0, 2009.75, 2013.5, 2013.75, 2014.0, 2009.5, 2010.25, 2011.0, 2012.0, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (163, 120)
train = (0.76148534685204872, 0.782359327670199)
scores = (0.44559616728686285, 0.38646813378160888)
score = 0.41603215053423587
holdout = (0.5229300734007909, 0.5354609259862594)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (45, 72)
train = (0.79037679096432445, 0.82986759125291731)
scores = (0.42384232628734597, 0.37348595430761111)
score = 0.39866414029747854
holdout = (0.5458458435137643, 0.5547777606384423)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 602)
train = (0.47124322456167106, 0.88493445163837148)
scores = (0.44307424684841828, 0.41818745839301408)
score = 0.4306308526207162
holdout = (0.4297185612549378, 0.584179685441047)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (11, 602)
train = (0.47124322456167106, 0.88493445163837148)
scores = (0.44307424684841828, 0.41818745839301408)
score = 0.4306308526207162
holdout = (0.4297185612549378, 0.584179685441047)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (324, 232)
train = (0.98965003570096599, 0.91630069056545105)
scores = (0.47723673485604806, 0.39155371175994985)
score = 0.43439522330799896
holdout = (0.6184488055624604, 0.5789769926451384)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (68, 45)
train = (0.98141439945075548, 0.972582920402004)
scores = (0.44598238418707425, 0.38025284172509066)
score = 0.41311761295608246
holdout = (0.6270540854352518, 0.6057436282470384)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 639)
train = (0.47583569940419018, 0.96904524637196776)
scores = (0.44782401147433665, 0.423529556874566)
score = 0.4356767841744513
holdout = (0.432865854741472, 0.6146008414456378)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (11, 639)
train = (0.47583569940419018, 0.96904524637196776)
scores = (0.44782401147433665, 0.423529556874566)
score = 0.4356767841744513
holdout = (0.432865854741472, 0.6146008414456378)
>>> t = 5200 ===================================================================================================
(pair) len(F.columns) = 37
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 81
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|daoc|vp1dd)
            & index[1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,15:,15:5] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[20]} 
                | Drawup[1:] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2010.25, 2011.5, 2012.5, 2012.75, 2009.25, 2013.75, 2009.0, 2010.0, 2011.0, 2012.25, 2013.5, 2015.25}), frozenset({2011.75, 2009.75, 2013.25, 2014.5, 2014.25, 2014.0, 2009.5, 2010.75, 2011.25, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (21, 134)
train = (0.61983154618915692, 1.4301320364600991)
scores = (0.20821438817795296, 0.4985309949970006)
score = 0.35337269158747675
holdout = (0.34781466695824725, 0.7607824616803983)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (11, 187)
train = (0.65818602293694217, 1.6170388370275584)
scores = (0.18037113601551957, 0.41634507723373043)
score = 0.29835810662462503
holdout = (0.3712466147681243, 0.7487187295157229)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (360, 362)
train = (0.99542504423361367, 1.5017315125790278)
scores = (0.23412584284077595, 0.51526501227948707)
score = 0.3746954275601315
holdout = (0.5122165829895673, 0.7735856432111998)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (360, 362)
train = (0.99542504423361367, 1.5017315125790278)
scores = (0.23412584284077595, 0.51526501227948707)
score = 0.3746954275601315
holdout = (0.5122165829895673, 0.7735856432111998)
>>> t = 5201 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 81
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|daoc|vp1dd)
            & index[1,2, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(aoo|vp1dd)
            & [5:,15:,15:5] 
          }
        | ( 
            <>Return{(aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 10:5] 
                | Since{Min&index[0,20]} 
              )
            & Since[ 62:] 
          )
        | ( 
            <> Volatility[ 60:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[1:, 5:, 10:5] 
                | Since{Max & index[20]} 
                | Drawup[1:] 
                | Since{Min & index[10]} 
              )
            & Since[ 125:, 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2011.25, 2012.0, 2012.5, 2012.75, 2009.5, 2009.75, 2009.25, 2010.0, 2011.75, 2009.0, 2014.25, 2015.0}), frozenset({2010.5, 2010.75, 2013.25, 2013.5, 2013.75, 2014.5, 2014.0, 2010.25, 2011.0, 2012.25, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (4, 19)
train = (0.53807007461975875, 0.66330084181383353)
scores = (0.34930931921865116, 0.1995347044943955)
score = 0.2744220118565233
holdout = (0.3821717033309448, 0.34669526689045727)
>>> t = 5300 ===================================================================================================
(pair) len(F.columns) = 8
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 16
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2011.25, 2011.5, 2009.75, 2013.5, 2013.75, 2014.75, 2014.0, 2009.5, 2011.75, 2012.0, 2013.0, 2014.5, 2015.25}), frozenset({2010.0, 2010.5, 2010.75, 2012.5, 2012.75, 2009.25, 2009.0, 2010.25, 2011.0, 2012.25, 2013.25, 2014.25, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (2, 31)
train = (0.40877636629746755, 0.49984867848856879)
scores = (0.16811808695105357, 0.068549061887275525)
score = 0.11833357441916455
holdout = (0.18735480244512578, 0.27284214986769667)
>>> t = 5301 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 16
    <>~Market & (
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                | Since{Max & index[10]} 
                | Since{Min & index[10]} 
              )
            & Since[21:, 125:, 250:] 
          )
      )
    | Market{.& 
        <>(~Weight)
        & ( Volatility)
        & [1:,10:] 
      }
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.25, 2010.5, 2011.25, 2012.5, 2014.25, 2014.0, 2014.5, 2009.75, 2010.0, 2011.5, 2012.0, 2014.75, 2015.0}), frozenset({2011.75, 2012.75, 2009.0, 2009.25, 2013.25, 2013.5, 2013.75, 2009.5, 2010.75, 2011.0, 2012.25, 2013.0, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.38741939301998879, 0.45119852525491161)
scores = (0.16063854745144232, 0.019043132429327331)
score = 0.08984083994038483
holdout = (0.20581865304046656, 0.21362239895499746)
>>> t = 5400 ===================================================================================================
(pair) len(F.columns) = 133
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 153
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [10:,15:,10:5,15:10,15:5,20:10] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,5:,10:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[10:,20:] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 125:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2011.25, 2011.75, 2011.0, 2012.5, 2013.75, 2013.25, 2014.0, 2009.25, 2010.25, 2011.5, 2009.0, 2013.5, 2014.75}), frozenset({2010.5, 2010.75, 2015.0, 2012.25, 2012.75, 2009.75, 2014.25, 2009.5, 2010.0, 2012.0, 2013.0, 2014.5, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (122, 35)
train = (1.0904579401522545, 1.3147729222243367)
scores = (0.17683818437108453, 0.32064328430204109)
score = 0.2487407343365628
holdout = (0.550313373219214, 0.6317937067756949)
>>> t = 5401 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 153
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(acc|doc|vp1dd)
            & index[1,2,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|Volatility)
            & [10:,15:,10:5,15:10,15:5,20:10] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [1:,5:,10:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[250:] 
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
    <>~Market & (
        | ( 
            <>Return{(oo{.&[10:]}|doo[10:])} 
            & (
                | Drawdown[10:,20:] 
                | Since{Max&index[0,20]} 
                | Since{Min&index[20]} 
              )
            & Since[21:, 125:] 
          )
        | ( 
            <>Return{dd} & VP[ 5:] 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 10:5] 
                | Since{Max & index[0]} 
                | Drawup[20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 125:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                | Since{Max & index[0,5,10]} 
                | Since{Min & index[5,10]} 
              )
            & Since[ 250:] 
          )
      )
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,250]
        & ay[10]
      }
len(samps) = 2
(frozenset({2010.5, 2012.0, 2012.5, 2012.75, 2013.0, 2013.25, 2014.0, 2009.0, 2010.25, 2012.25, 2013.5, 2014.25, 2015.0}), frozenset({2010.75, 2011.25, 2011.5, 2011.75, 2009.75, 2014.5, 2009.5, 2010.0, 2011.0, 2009.25, 2013.75, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (14, 2)
train = (0.81986644670154651, 0.85123376109834137)
scores = (0.26268182451991384, 0.3915763544749612)
score = 0.3271290894974375
holdout = (0.47657011823823653, 0.5226981435607718)
>>> t = 5500 ===================================================================================================
(pair) len(F.columns) = 16
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | 
        | Return{ it} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.0, 2015.0, 2011.0, 2013.0, 2013.5, 2014.25, 2009.0, 2010.5, 2011.75, 2009.25, 2013.25, 2014.0, 2015.25}), frozenset({2010.75, 2011.5, 2012.25, 2012.5, 2012.75, 2009.75, 2014.5, 2009.5, 2010.25, 2011.25, 2012.0, 2013.75, 2014.75}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 141)
train = (0.54528636689330512, 0.92498734267022009)
scores = (0.28780425886660937, 0.38796937357452138)
score = 0.3378868162205654
holdout = (0.3753990309176213, 0.5807803173153935)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 1)
train = (0.56390742570406116, 0.74329063631795977)
scores = (0.28989904276871997, 0.24423301417001353)
score = 0.2670660284693668
holdout = (0.3964076533555571, 0.4263332735051485)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (1, 151)
train = (0.46747847845574142, 0.69179516225361593)
scores = (0.30979280519586411, 0.38316354180822265)
score = 0.34647817350204335
holdout = (0.3575241159853661, 0.49482367741313077)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (1, 151)
train = (0.46747847845574142, 0.69179516225361593)
scores = (0.30979280519586411, 0.38316354180822265)
score = 0.34647817350204335
holdout = (0.3575241159853661, 0.49482367741313077)
>>> t = 5501 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        | ( 
            <>Return{(oo{.&[1:]}|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[ 5:,20:, 10:5,20:10] 
                | Since{Min&index[0]} 
              )
            & Since[21:] 
          )
      )
    | 
        | Return{ it} 
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[20]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.25, 2010.75, 2011.0, 2012.0, 2009.75, 2009.5, 2013.5, 2009.25, 2010.5, 2011.75, 2012.5, 2013.25, 2014.5}), frozenset({2015.0, 2011.5, 2012.75, 2013.75, 2014.25, 2014.0, 2009.0, 2010.0, 2011.25, 2012.25, 2013.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (181, 238)
train = (1.0520366469177271, 0.85978352399205271)
scores = (0.45883714620471744, 0.31052859174022585)
score = 0.3846828689724716
holdout = (0.6578172196874672, 0.5091390650852885)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (104, 40)
train = (0.99819053401547697, 0.79729215506344897)
scores = (0.42044748496203493, 0.25716537279866553)
score = 0.33880642888035023
holdout = (0.6388391368789744, 0.4683091890038679)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (201, 462)
train = (0.86889352390802077, 0.8497258318030253)
scores = (0.44545997932263753, 0.30656582373837765)
score = 0.3760129015305076
holdout = (0.5995229580961682, 0.4941259307847673)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (181, 238)
train = (1.0520366469177271, 0.85978352399205271)
scores = (0.45883714620471744, 0.31052859174022585)
score = 0.3846828689724716
holdout = (0.6578172196874672, 0.5091390650852885)
>>> t = 5600 ===================================================================================================
(pair) len(F.columns) = 65
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.25, 2012.25, 2012.75, 2012.5, 2013.25, 2013.5, 2013.75, 2014.0, 2014.5, 2011.5, 2012.0, 2013.0, 2014.25}), frozenset({2010.25, 2010.5, 2010.75, 2015.0, 2011.75, 2009.25, 2009.75, 2009.5, 2010.0, 2011.0, 2009.0, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (169, 6)
train = (1.3283836864038685, 0.71412554884524926)
scores = (0.45427488858864579, 0.39745045278864799)
score = 0.4258626706886469
holdout = (0.714603920355443, 0.49756974804026893)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (126, 9)
train = (1.4891486597484687, 0.67518376793502577)
scores = (0.4502223798642318, 0.39490994622286635)
score = 0.4225661630435491
holdout = (0.7503080836421536, 0.48434527827452517)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (230, 33)
train = (1.0821584023994886, 0.70819281971715919)
scores = (0.42202977826799054, 0.38435344898892471)
score = 0.4031916136284576
holdout = (0.6207745984980257, 0.475445534156149)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (169, 6)
train = (1.3283836864038685, 0.71412554884524926)
scores = (0.45427488858864579, 0.39745045278864799)
score = 0.4258626706886469
holdout = (0.714603920355443, 0.49756974804026893)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (186, 7)
train = (1.5405447840638433, 0.76579551929500322)
scores = (0.45765343934310349, 0.41809818976806645)
score = 0.437875814555585
holdout = (0.7688446582783431, 0.5282704421001305)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (218, 10)
train = (1.8360083080346155, 0.79689031326869642)
scores = (0.47341366509511029, 0.41042652158046189)
score = 0.4419200933377861
holdout = (0.8195826545894211, 0.537276429389851)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (213, 24)
train = (1.1722361859861337, 0.68902889028704284)
scores = (0.41797252788236156, 0.38726294278545526)
score = 0.40261773533390843
holdout = (0.6481048357460983, 0.47187567837887984)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (218, 10)
train = (1.8360083080346155, 0.79689031326869642)
scores = (0.47341366509511029, 0.41042652158046189)
score = 0.4419200933377861
holdout = (0.8195826545894211, 0.537276429389851)
>>> t = 5601 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2012.75, 2012.0, 2009.75, 2013.25, 2013.0, 2014.75, 2009.0, 2010.75, 2011.0, 2012.5, 2013.5, 2014.5}), frozenset({2010.25, 2010.5, 2015.0, 2011.75, 2009.25, 2014.0, 2009.5, 2010.0, 2011.25, 2012.25, 2013.75, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (277, 38)
train = (1.1146398496456673, 0.78068162187197099)
scores = (0.56565594829140997, 0.45217712290602047)
score = 0.5089165355987152
holdout = (0.7018344152762724, 0.5170585994684185)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (179, 11)
train = (0.95695697335902585, 0.71931182343218558)
scores = (0.56158294726490887, 0.44655059196652808)
score = 0.5040667696157185
holdout = (0.6311805764398645, 0.517618510774157)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (373, 27)
train = (1.1830734619431931, 0.62777345432275822)
scores = (0.54979183083896255, 0.44231448960401087)
score = 0.4960531602214867
holdout = (0.7081347886482017, 0.4609851302533613)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (277, 38)
train = (1.1146398496456673, 0.78068162187197099)
scores = (0.56565594829140997, 0.45217712290602047)
score = 0.5089165355987152
holdout = (0.7018344152762724, 0.5170585994684185)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (250, 17)
train = (1.2183130613979241, 0.78339509700191423)
scores = (0.57850883505505846, 0.46538191782841198)
score = 0.5219453764417352
holdout = (0.732950096802504, 0.533447488361222)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (245, 14)
train = (1.1450359986634095, 0.88644457928892373)
scores = (0.57769055200214503, 0.45636942240756001)
score = 0.5170299872048525
holdout = (0.6675988470361434, 0.5837912117548519)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (264, 25)
train = (1.1831759871981804, 0.62102171533397721)
scores = (0.54341248317692881, 0.44297909976357641)
score = 0.4931957914702526
holdout = (0.7034063916109095, 0.4597534569417579)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (250, 17)
train = (1.2183130613979241, 0.78339509700191423)
scores = (0.57850883505505846, 0.46538191782841198)
score = 0.5219453764417352
holdout = (0.732950096802504, 0.533447488361222)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (220, 37)
train = (1.2862090642105708, 0.91378586241046833)
scores = (0.58321658389826425, 0.46614525291508618)
score = 0.5246809184066752
holdout = (0.7533251318079731, 0.5704249380015791)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (244, 15)
train = (1.2965739325001504, 1.0593891103574375)
scores = (0.58863629412617036, 0.46298325923119815)
score = 0.5258097766786842
holdout = (0.6977978203249883, 0.6431761358117327)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (348, 25)
train = (1.3562566991363882, 0.62171091331951667)
scores = (0.56120833386099966, 0.44351399043645118)
score = 0.5023611621487254
holdout = (0.753584817348933, 0.46026495076328694)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (244, 15)
train = (1.2965739325001504, 1.0593891103574375)
scores = (0.58863629412617036, 0.46298325923119815)
score = 0.5258097766786842
holdout = (0.6977978203249883, 0.6431761358117327)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (232, 45)
train = (1.3712671133420189, 0.98845262505780129)
scores = (0.59234549178441831, 0.46479712615740176)
score = 0.5285713089709101
holdout = (0.7719486425857501, 0.5882184272212114)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (292, 11)
train = (1.4527883688239829, 1.1687118965284213)
scores = (0.58317878219085806, 0.46810062634519239)
score = 0.5256397042680252
holdout = (0.7200314338237827, 0.6707828990852783)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (458, 25)
train = (1.4891882421005871, 0.62171091331951644)
scores = (0.56268242176942973, 0.44351399043645107)
score = 0.5030982061029404
holdout = (0.7825867034975013, 0.4602649507632868)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (232, 45)
train = (1.3712671133420189, 0.98845262505780129)
scores = (0.59234549178441831, 0.46479712615740176)
score = 0.5285713089709101
holdout = (0.7719486425857501, 0.5882184272212114)
>>> t = 5602 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.25, 2011.5, 2012.75, 2013.75, 2014.75, 2014.0, 2009.5, 2010.0, 2011.75, 2012.5, 2013.25, 2014.5, 2015.0}), frozenset({2010.75, 2011.25, 2012.25, 2009.25, 2009.75, 2013.5, 2009.0, 2010.5, 2011.0, 2012.0, 2013.0, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (101, 23)
train = (0.90977771554422981, 0.76094625706229202)
scores = (0.36980850646294694, 0.60281836044228287)
score = 0.4863134334526149
holdout = (0.5261349294442226, 0.5944173573620687)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (69, 14)
train = (1.0552912397818321, 0.65193392223152613)
scores = (0.36087946689896183, 0.58577321642284763)
score = 0.4733263416609047
holdout = (0.5767600688648947, 0.5203663578382396)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (338, 61)
train = (1.108756807412145, 0.72442253813056612)
scores = (0.32192521338746011, 0.57893143262813718)
score = 0.45042832300779867
holdout = (0.5600701118677965, 0.5536472427186694)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (101, 23)
train = (0.90977771554422981, 0.76094625706229202)
scores = (0.36980850646294694, 0.60281836044228287)
score = 0.4863134334526149
holdout = (0.5261349294442226, 0.5944173573620687)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (136, 21)
train = (1.1525078857427216, 0.82745221642797717)
scores = (0.37470122608439249, 0.60196294869004741)
score = 0.48833208738721995
holdout = (0.5958677954160866, 0.6202006086935111)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (87, 22)
train = (1.4593141915436454, 0.71375708071840227)
scores = (0.36849063563293943, 0.59761237066030803)
score = 0.4830515031466237
holdout = (0.6854928218137365, 0.5260764724212172)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (368, 43)
train = (1.2909529330824834, 0.76084586042385016)
scores = (0.33052753884370251, 0.59089406102586561)
score = 0.46071079993478403
holdout = (0.6103318070701541, 0.5746424418733103)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (136, 21)
train = (1.1525078857427216, 0.82745221642797717)
scores = (0.37470122608439249, 0.60196294869004741)
score = 0.48833208738721995
holdout = (0.5958677954160866, 0.6202006086935111)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (385, 24)
train = (1.9823139416334936, 0.90328043716825479)
scores = (0.43182305116546665, 0.615939972181198)
score = 0.5238815116733323
holdout = (0.790540350049386, 0.6544434280535435)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (59, 10)
train = (1.5596469944245677, 0.84632501208722288)
scores = (0.38637538773451269, 0.60320289079035105)
score = 0.49478913926243184
holdout = (0.722467305822686, 0.5893976467513697)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (642, 47)
train = (1.7420501755478355, 0.82189830953694243)
scores = (0.36347301496548495, 0.58517859995552957)
score = 0.47432580746050723
holdout = (0.7189953073998311, 0.5941984702379601)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (385, 24)
train = (1.9823139416334936, 0.90328043716825479)
scores = (0.43182305116546665, 0.615939972181198)
score = 0.5238815116733323
holdout = (0.790540350049386, 0.6544434280535435)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (516, 26)
train = (2.2652135145067298, 0.92942617817339412)
scores = (0.43449709421163529, 0.61841683644013667)
score = 0.5264569653258859
holdout = (0.8318796857231427, 0.6624960618931471)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (175, 8)
train = (2.2805403637295854, 0.96907209646182502)
scores = (0.39770007582408035, 0.61958799954619892)
score = 0.5086440376851397
holdout = (0.8220375026989734, 0.6480815675257705)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (798, 53)
train = (1.9228183005616646, 0.87223129287925694)
scores = (0.37011651769434173, 0.58754451436039445)
score = 0.4788305160273681
holdout = (0.7540874634342278, 0.6131987680587069)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (516, 26)
train = (2.2652135145067298, 0.92942617817339412)
scores = (0.43449709421163529, 0.61841683644013667)
score = 0.5264569653258859
holdout = (0.8318796857231427, 0.6624960618931471)
>>> t = 5603 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 133
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|doo)
            & index[0,1,2, 0:1,1:2] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:]|oo{.&[10:]})} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[10:,20:] 
                | Since{Min&index[20]} 
              )
            & Since[21:, 250:] 
          )
        | ( 
            <>Return{dd} & VP[1:, 10:] 
            & (
                | Since{Max & index[0]} 
                | Drawup[20:,20:10] 
                | Since{Min & index[0]} 
              )
            & Since[ 62:, 250:] 
          )
      )
    | Market{.& 
        <>( Weight)
        & (Return| Volatility)
        & [5:] 
      }
    | 
        <>Return{pure&~dd} & VP[60:] 
        | FracRec[62:] 
    | 
        | Return{rr| af} 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|daoc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [18:,9:6,15:12,18:15,12:6,18:12,15:6,18:6,21:9,18:3] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.5, 2012.75, 2009.0, 2013.75, 2014.75, 2009.5, 2015.25, 2011.75, 2012.0, 2013.25, 2014.25, 2015.0}), frozenset({2010.0, 2010.75, 2011.25, 2012.5, 2009.75, 2013.5, 2014.0, 2009.25, 2010.25, 2011.0, 2012.25, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (685, 189)
train = (1.193471141642638, 1.1194224711024403)
scores = (0.52450710383461419, 0.49390950420630353)
score = 0.5092083040204589
holdout = (0.6967559276661405, 0.656692217604892)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (251, 87)
train = (0.98879591148154633, 0.90429204382393769)
scores = (0.48005831306983626, 0.46991354389893908)
score = 0.4749859284843877
holdout = (0.6162025059075463, 0.5961659376152878)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (358, 157)
train = (1.0619171422576443, 0.96738521004704758)
scores = (0.50180746259429387, 0.45480587593154903)
score = 0.4783066692629214
holdout = (0.6608575408546018, 0.5776510042965031)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (685, 189)
train = (1.193471141642638, 1.1194224711024403)
scores = (0.52450710383461419, 0.49390950420630353)
score = 0.5092083040204589
holdout = (0.6967559276661405, 0.656692217604892)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (348, 103)
train = (1.1673970491935444, 1.1576291673785004)
scores = (0.53570045565798829, 0.49510601370511081)
score = 0.5154032346815496
holdout = (0.6956422606903417, 0.6607914785400512)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (480, 44)
train = (1.3313303845215694, 1.096132625257771)
scores = (0.54577143265721828, 0.46424698648313401)
score = 0.5050092095701761
holdout = (0.6925604572619639, 0.6588577641814061)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (382, 439)
train = (1.1934771589411617, 1.4602870677840276)
scores = (0.51603791895645379, 0.49905214610459325)
score = 0.5075450325305235
holdout = (0.7048615737900241, 0.7327669525122642)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (348, 103)
train = (1.1673970491935444, 1.1576291673785004)
scores = (0.53570045565798829, 0.49510601370511081)
score = 0.5154032346815496
holdout = (0.6956422606903417, 0.6607914785400512)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (404, 153)
train = (1.2866147784858362, 1.3763101732770744)
scores = (0.56269494826732613, 0.50607438155650719)
score = 0.5343846649119166
holdout = (0.7251108251609949, 0.7270611795184714)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (151, 47)
train = (1.1447250087008445, 1.2941402016548111)
scores = (0.51092370333763459, 0.47985080829661886)
score = 0.4953872558171267
holdout = (0.6582978366755924, 0.7201860171663512)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (491, 455)
train = (1.3461205887657255, 1.555668057811052)
scores = (0.53016123618318078, 0.49190373157005773)
score = 0.5110324838766193
holdout = (0.7509007474297916, 0.7531012879101623)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (404, 153)
train = (1.2866147784858362, 1.3763101732770744)
scores = (0.56269494826732613, 0.50607438155650719)
score = 0.5343846649119166
holdout = (0.7251108251609949, 0.7270611795184714)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (473, 90)
train = (1.3714868220056216, 1.3324833977844224)
scores = (0.56060868256308372, 0.50875494973555802)
score = 0.5346818161493209
holdout = (0.735645484447844, 0.7100327267189859)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (323, 45)
train = (1.45981991575862, 1.47266000760556)
scores = (0.57262253952582298, 0.4915545624171081)
score = 0.5320885509714656
holdout = (0.7182422982595323, 0.7597230473273251)
>>>  k = 14 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (437, 351)
train = (1.3555523151136428, 1.4757037938373945)
scores = (0.53029285727630859, 0.49028397489144843)
score = 0.5102884160838785
holdout = (0.7483633146817567, 0.726867313920432)
>>>  k = 15 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (473, 90)
train = (1.3714868220056216, 1.3324833977844224)
scores = (0.56060868256308372, 0.50875494973555802)
score = 0.5346818161493209
holdout = (0.735645484447844, 0.7100327267189859)
>>> t = 5700 ===================================================================================================
(pair) len(F.columns) = 14
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[0,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|vp5dd)
            & [10:5,15:5] 
          }
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[0,1:2] 
          }
      )
    | 
        | FracRec[62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2015.25, 2011.5, 2011.0, 2009.25, 2013.75, 2014.0, 2009.0, 2010.25, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}), frozenset({2010.5, 2010.75, 2012.5, 2012.75, 2009.75, 2013.5, 2014.25, 2009.5, 2010.0, 2011.25, 2012.25, 2013.25, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (22, 80)
train = (0.57966093562343934, 0.7903478835886748)
scores = (0.39577086065262973, 0.31801387686987342)
score = 0.3568923687612516
holdout = (0.44589641724067913, 0.4669200813194083)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (19, 15)
train = (0.59521022234467069, 0.76143698184937392)
scores = (0.35843278270407058, 0.30660545026680103)
score = 0.3325191164854358
holdout = (0.426549467454191, 0.44964664802626764)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (50, 4)
train = (0.53419509122818942, 0.44868594044358767)
scores = (0.40122154163475704, 0.30844404433338912)
score = 0.3548327929840731
holdout = (0.4235847926043816, 0.33316740100992287)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (22, 80)
train = (0.57966093562343934, 0.7903478835886748)
scores = (0.39577086065262973, 0.31801387686987342)
score = 0.3568923687612516
holdout = (0.44589641724067913, 0.4669200813194083)
>>> t = 5701 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 34
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(cc|doo|daoc|vp1dd)
            & index[0,1:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(vp1dd|vp5dd)
            & [10:5,15:5] 
          }
      )
    | 
        <>Return{pure&~dd} & VP[1:] 
        | FracRec[250:] 
#<>#
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|dcc|daoc|vp1dd)
            & index[0,1:2] 
          }
      )
    | 
        | FracRec[62:] 
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1,10,20]
      }
len(samps) = 2
(frozenset({2011.5, 2011.75, 2012.0, 2009.0, 2013.0, 2014.5, 2009.75, 2010.5, 2011.0, 2012.25, 2013.75, 2014.75, 2015.0}), frozenset({2010.25, 2010.75, 2012.75, 2009.25, 2013.5, 2014.0, 2009.5, 2010.0, 2011.25, 2012.5, 2013.25, 2014.25, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (5, 21)
train = (0.46460908576461596, 0.65223891407094825)
scores = (0.39331147440067804, 0.32138159068025268)
score = 0.35734653254046533
holdout = (0.3862098874096077, 0.4235554026507309)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (29, 19)
train = (0.67472280052557898, 0.76027975435705197)
scores = (0.36276526685259114, 0.30623686053518773)
score = 0.33450106369388943
holdout = (0.4706191966211774, 0.46378441798331393)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (42, 38)
train = (0.48427731041892308, 0.53257959253827258)
scores = (0.41781001207549351, 0.31434074329512329)
score = 0.3660753776853084
holdout = (0.4053245010451859, 0.3714300646865441)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (42, 38)
train = (0.48427731041892308, 0.53257959253827258)
scores = (0.41781001207549351, 0.31434074329512329)
score = 0.3660753776853084
holdout = (0.4053245010451859, 0.3714300646865441)
>>> t = 5800 ===================================================================================================
(pair) len(F.columns) = 16
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|dcc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [10:5,15:10,20:10,20:5] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [10:] 
      }
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2011.0, 2012.0, 2013.5, 2014.0, 2009.5, 2010.25, 2011.75, 2012.25, 2013.0, 2014.25, 2015.25}), frozenset({2010.0, 2012.75, 2009.25, 2009.75, 2013.75, 2014.5, 2009.0, 2010.75, 2011.5, 2012.5, 2013.25, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (43, 1)
train = (0.59155944182290487, 0.39598879235994944)
scores = (0.31870089578903599, 0.28938678042910043)
score = 0.3040438381090682
holdout = (0.40123313439004943, 0.3172020768312853)
>>> t = 5801 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 32
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|aoo|dcc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo)
            & [10:5,15:10,20:10,20:5] 
          }
      )
    | Market{.& 
        <>( Weight)
        & ( Volatility)
        & [10:] 
      }
    | 
        Time{long}
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[250]
        & ay[1,20]
      }
len(samps) = 2
(frozenset({2010.5, 2011.25, 2012.25, 2012.75, 2013.5, 2013.75, 2009.5, 2010.0, 2011.0, 2012.0, 2013.0, 2014.5, 2015.0}), frozenset({2010.25, 2011.75, 2009.25, 2009.75, 2014.25, 2014.0, 2009.0, 2010.75, 2011.5, 2012.5, 2013.25, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (212, 38)
train = (0.72023240835977853, 0.57343993858830089)
scores = (0.30748239679666245, 0.31460575710572997)
score = 0.3110440769511962
holdout = (0.44967678622032486, 0.3912334254417638)
>>> t = 5900 ===================================================================================================
(pair) len(F.columns) = 48
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:12,18:12,21:15,15:6,18:9,18:6,18:3] 
          }
        | ( 
            <>Return{(doo[1:]|oo{.&[10:]}|aoo[10:]|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2011.25, 2011.5, 2009.75, 2013.25, 2013.5, 2014.5, 2009.0, 2010.5, 2011.0, 2012.75, 2013.75, 2014.25, 2015.25}), frozenset({2010.25, 2010.75, 2012.25, 2012.5, 2009.25, 2014.0, 2009.5, 2010.0, 2011.75, 2012.0, 2013.0, 2014.75, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (200, 197)
train = (1.1139202195948126, 1.1002378671498314)
scores = (0.4552467895991083, 0.47549580202781783)
score = 0.46537129581346304
holdout = (0.6569627805730057, 0.6393964939301366)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (489, 310)
train = (1.1701503641528483, 1.3251830557845847)
scores = (0.43360185266025758, 0.39628202873355722)
score = 0.4149419406969074
holdout = (0.653138329887888, 0.6785773572905325)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (190, 135)
train = (0.98177661451163023, 1.0307727149168491)
scores = (0.3871125459767672, 0.56389315436933096)
score = 0.47550285017304905
holdout = (0.5709810877523037, 0.6342166639544584)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (190, 135)
train = (0.98177661451163023, 1.0307727149168491)
scores = (0.3871125459767672, 0.56389315436933096)
score = 0.47550285017304905
holdout = (0.5709810877523037, 0.6342166639544584)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (267, 234)
train = (1.2673252407232249, 1.3366934025786619)
scores = (0.45705250377064321, 0.50459434025465322)
score = 0.4808234220126482
holdout = (0.7046424023879351, 0.7173648522292351)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (402, 264)
train = (1.3250105950371562, 1.5385172167417707)
scores = (0.4448743205411802, 0.42066607763677993)
score = 0.43277019908898007
holdout = (0.6895369811579162, 0.7257603648176434)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (134, 109)
train = (0.96525787221289905, 1.0988255329215235)
scores = (0.39412072945814153, 0.55883580278676759)
score = 0.4764782661224546
holdout = (0.5737812083941771, 0.6456145715769401)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (267, 234)
train = (1.2673252407232249, 1.3366934025786619)
scores = (0.45705250377064321, 0.50459434025465322)
score = 0.4808234220126482
holdout = (0.7046424023879351, 0.7173648522292351)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 188)
train = (1.3957852381301148, 1.4049195529668641)
scores = (0.4643725327118759, 0.52876746470600178)
score = 0.4965699987089388
holdout = (0.7380485105066141, 0.743831975316371)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (12, 128)
train = (0.94825718739706655, 1.3977433351294615)
scores = (0.32273496112528877, 0.40708484189107452)
score = 0.36490990150818164
holdout = (0.5562125676028746, 0.6907746690638863)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (222, 134)
train = (1.1598359029184329, 1.2499970026656742)
scores = (0.39729341677934199, 0.56645538680585761)
score = 0.48187440179259977
holdout = (0.6294808525954962, 0.6974340300788944)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (271, 188)
train = (1.3957852381301148, 1.4049195529668641)
scores = (0.4643725327118759, 0.52876746470600178)
score = 0.4965699987089388
holdout = (0.7380485105066141, 0.743831975316371)
>>> t = 5901 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:12,18:12,21:15,15:6,18:9,18:6,18:3] 
          }
        | ( 
            <>Return{(doo[1:]|oo{.&[10:]}|aoo[10:]|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2015.0, 2011.25, 2011.5, 2012.25, 2013.5, 2009.25, 2010.75, 2011.75, 2012.75, 2013.25, 2014.0, 2015.25}), frozenset({2010.5, 2012.5, 2009.0, 2009.75, 2013.75, 2014.75, 2014.25, 2009.5, 2010.25, 2011.0, 2012.0, 2013.0, 2014.5}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (13, 5)
train = (0.77671741070488365, 0.88413345317713321)
scores = (0.47990184207256326, 0.24070090125526614)
score = 0.3603013716639147
holdout = (0.4993017244905177, 0.46865402312454185)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (288, 220)
train = (1.3458463128462359, 1.0952719691157531)
scores = (0.43847765810260503, 0.47861506184176794)
score = 0.4585463599721865
holdout = (0.7195311045255138, 0.6251378181754231)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (7, 184)
train = (0.69839016481397953, 1.0761385925642775)
scores = (0.44989723505547247, 0.52321070805590775)
score = 0.48655397155569013
holdout = (0.46424192895819566, 0.6698005850692832)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (7, 184)
train = (0.69839016481397953, 1.0761385925642775)
scores = (0.44989723505547247, 0.52321070805590775)
score = 0.48655397155569013
holdout = (0.46424192895819566, 0.6698005850692832)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (48, 22)
train = (1.0191088052266222, 0.96653261573935023)
scores = (0.48586984315052933, 0.38406013217244406)
score = 0.4349649876614867
holdout = (0.5971975425652144, 0.5552813095573446)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (181, 153)
train = (1.4331214884616006, 1.1684109252180661)
scores = (0.42162619475206614, 0.4831442634548615)
score = 0.4523852291034638
holdout = (0.7280594433973309, 0.6403481037803076)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (45, 217)
train = (0.82506357830869093, 1.2577861044863061)
scores = (0.43688528240446561, 0.54420427527848714)
score = 0.4905447788414764
holdout = (0.5104672016484565, 0.7317424268812748)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (45, 217)
train = (0.82506357830869093, 1.2577861044863061)
scores = (0.43688528240446561, 0.54420427527848714)
score = 0.4905447788414764
holdout = (0.5104672016484565, 0.7317424268812748)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (39, 24)
train = (1.0477551801984153, 1.0133463072117224)
scores = (0.48488897489167904, 0.40605145458913677)
score = 0.44547021474040793
holdout = (0.6058645317024227, 0.584798089968314)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (56, 243)
train = (1.0881138242887056, 1.3681223106562712)
scores = (0.3912952978918296, 0.51549678882919392)
score = 0.45339604336051176
holdout = (0.6293168823426839, 0.6834625686347794)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (47, 183)
train = (0.86112192927011177, 1.2546532433101723)
scores = (0.44133338383619991, 0.52918164917030841)
score = 0.48525751650325416
holdout = (0.5256472201464494, 0.7205268517714046)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (47, 183)
train = (0.86112192927011177, 1.2546532433101723)
scores = (0.44133338383619991, 0.52918164917030841)
score = 0.48525751650325416
holdout = (0.5256472201464494, 0.7205268517714046)
>>> t = 5902 ===================================================================================================
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 97
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|cc|acc)
            & index[0,1, 0:1,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|vp1dd)
            & [9:,12:,15:12,18:12,21:15,15:6,18:9,18:6,18:3] 
          }
        | ( 
            <>Return{(doo[1:]|oo{.&[10:]}|aoo[10:]|doo[10:])} 
            & (
                <> ~Drawdown&~Drawup&~Since{Min}&~Since{Max} 
                | Drawdown[1:, 5:,10:,20:,20:10] 
                | Since{Max&index[20]} 
                | Since{Min&index[0,10]} 
              )
            & Since[ 250:] 
          )
      )
    | 
        <>AssetEnc{InUni} 
#<>#
0
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[21,62,250]
        & ay[20]
      }
len(samps) = 2
(frozenset({2010.0, 2012.0, 2012.75, 2009.5, 2009.75, 2013.25, 2009.0, 2010.5, 2011.5, 2012.25, 2013.0, 2014.5, 2015.0}), frozenset({2010.75, 2011.25, 2011.75, 2013.75, 2014.25, 2014.0, 2009.25, 2010.25, 2011.0, 2012.5, 2013.5, 2014.75, 2015.25}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (129, 124)
train = (0.89123212879437397, 1.0950689649051775)
scores = (0.42749708412083376, 0.4394461155222435)
score = 0.4334715998215386
holdout = (0.5682613273044883, 0.626857475165533)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (166, 135)
train = (0.92807258727778486, 1.1610034089617767)
scores = (0.37725508249659173, 0.40343777253528068)
score = 0.3903464275159362
holdout = (0.5535115038416588, 0.6465730947232536)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (124, 301)
train = (0.93514593727337825, 1.3726895268631285)
scores = (0.44536198150889494, 0.37968704317630636)
score = 0.4125245123426007
holdout = (0.5708543205008577, 0.6588048983673206)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (129, 124)
train = (0.89123212879437397, 1.0950689649051775)
scores = (0.42749708412083376, 0.4394461155222435)
score = 0.4334715998215386
holdout = (0.5682613273044883, 0.626857475165533)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (67, 53)
train = (0.88305191291479224, 0.99052415369468583)
scores = (0.42182446939296725, 0.43082552615520464)
score = 0.42632499777408595
holdout = (0.5558645158243313, 0.5915222332651334)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (147, 93)
train = (1.0491420192340808, 1.288778796952833)
scores = (0.40997512972467814, 0.39053304637052144)
score = 0.40025408804759977
holdout = (0.5925016626927486, 0.6728062206217725)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (111, 278)
train = (0.98551476252055359, 1.4759333208494385)
scores = (0.4513809112026233, 0.39432738610558093)
score = 0.4228541486541021
holdout = (0.5929741932572052, 0.691153866518683)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (67, 53)
train = (0.88305191291479224, 0.99052415369468583)
scores = (0.42182446939296725, 0.43082552615520464)
score = 0.42632499777408595
holdout = (0.5558645158243313, 0.5915222332651334)
>>> t = 6000 ===================================================================================================
(pair) len(F.columns) = 159
(pair) generating [353]0.........100.........200.........300.....
(pair) putting together... (pair) done
setup_training %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
len(feats) = 320
    <>~Market & (
        <>Return{.&pure&~digit&~TEN} & ~Since & Return{.& 
            <>(oo|doo|doc)
            & index[0,1,2, 0:1,1:2,0:2] 
          }
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|doo|vp5dd|Volatility)
            & [5:,15:,10:5,20:10,20:5] 
          }
        | ( 
            <>Return{(oo{.&[1:]}|aoo[1:])} 
            & (
                | Drawdown[1:] 
                | Since{Max&index[0]} 
                | Drawup[1:,10:] 
                | Since{Min&index[0,10]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
        | ( 
            <> Volatility[20:] 
            | Volatility[ 20:]
            & (
                <>Drawdown[20:10] 
                | Since{Max & index[10]} 
                | Since{Min & index[5,10]} 
              )
            & Since[21:, 62:, 125:, 250:] 
          )
      )
#<>#
    <>~Market & (
        | Return{.&pure&~index} & ~Since & Return{.& 
            <>(oo|aoo|vp5dd)
            & [5:,20:10,20:5] 
          }
      )
#<>#
0
#<>#
    <>0
    | Corr & Corr{ 
        <>[10,21,250]
        & ay[1]
      }
    | Corr{Uni} 
len(samps) = 2
(frozenset({2010.75, 2010.0, 2011.25, 2011.5, 2014.5, 2014.75, 2009.5, 2010.5, 2011.75, 2012.25, 2013.0, 2014.25, 2015.25}), frozenset({2012.0, 2012.75, 2009.25, 2009.75, 2013.5, 2013.75, 2009.0, 2010.25, 2011.0, 2012.5, 2013.25, 2014.0, 2015.0}))
>>>  k = 0 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (271, 750)
train = (1.8166002586651251, 1.0454391031514216)
scores = (0.63894359961396674, 0.50837490280237896)
score = 0.5736592512081728
holdout = (0.879462111953103, 0.6129279116572122)
>>>  k = 1 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (232, 801)
train = (1.9213703654578411, 1.286361574897976)
scores = (0.63366662726740863, 0.544767168636897)
score = 0.5892168979521528
holdout = (0.8510319145963975, 0.6582079623762606)
>>>  k = 2 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (775, 420)
train = (2.1170554863735114, 1.0703156032441095)
scores = (0.59002529369103263, 0.48859833516023476)
score = 0.5393118144256337
holdout = (0.9111255374848504, 0.642539333152367)
>>>  k = 3 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 6, 'num_leaves': 64}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (232, 801)
train = (1.9213703654578411, 1.286361574897976)
scores = (0.63366662726740863, 0.544767168636897)
score = 0.5892168979521528
holdout = (0.8510319145963975, 0.6582079623762606)
>>>  k = 4 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (300, 60)
train = (2.0595900797272919, 0.87058186210018362)
scores = (0.64578176117148878, 0.41357370678914263)
score = 0.5296777339803157
holdout = (0.9078323620194814, 0.559940809275878)
>>>  k = 5 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (245, 122)
train = (2.2103407545892537, 0.9681162478992591)
scores = (0.65602481411284275, 0.48420519619094904)
score = 0.570115005151896
holdout = (0.8697797490044783, 0.5759953363884006)
>>>  k = 6 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (490, 560)
train = (2.0289243440792788, 1.2392502667079766)
scores = (0.57005548202644041, 0.53106427624464592)
score = 0.5505598791355432
holdout = (0.8945817599520319, 0.6985946572199885)
>>>  k = 7 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 8, 'num_leaves': 256}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (245, 122)
train = (2.2103407545892537, 0.9681162478992591)
scores = (0.65602481411284275, 0.48420519619094904)
score = 0.570115005151896
holdout = (0.8697797490044783, 0.5759953363884006)
>>>  k = 8 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (251, 566)
train = (2.0781483665059439, 1.1445740825862591)
scores = (0.62521006292185233, 0.53798326727821255)
score = 0.5815966651000324
holdout = (0.9012741724328713, 0.6472447735600876)
>>>  k = 9 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (312, 564)
train = (2.4670186771317022, 1.4987360696914465)
scores = (0.68462272169605787, 0.57536416361160947)
score = 0.6299934426538336
holdout = (0.8687326014987549, 0.6993502564692547)
>>>  k = 10 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 150.0, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (345, 618)
train = (1.8917792375786764, 1.3680862067229056)
scores = (0.55894258397125218, 0.55267842725515171)
score = 0.5558105056132019
holdout = (0.8711182639888723, 0.7339687013406384)
>>>  k = 11 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 10, 'num_leaves': 1024}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
nboost = (312, 564)
train = (2.4670186771317022, 1.4987360696914465)
scores = (0.68462272169605787, 0.57536416361160947)
score = 0.6299934426538336
holdout = (0.8687326014987549, 0.6993502564692547)
>>>  k = 12 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 50, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (355, 727)
train = (2.2715574707486912, 1.2836819686227801)
scores = (0.66749927459600911, 0.56395453102255844)
score = 0.6157269028092838
holdout = (0.9197515994374705, 0.6813473365991773)
>>>  k = 13 ---------------------------------------------------------------------------------------------------
{'learning_rate': 0.05, 'max_depth': 12, 'num_leaves': 4096}
{'min_data_in_leaf': 120, 'min_sum_hessian_in_leaf': 6.1, 'lambda_l1': 0, 'lambda_l2': 0}
>>> training...
nboost = (144, 517)
train = (2.3667400634195599, 1.5843848155748299)
scores = (0.706883729530421, 0.5949035833397196)
score = 0.6508936564350702
holdout = (0.8810621078820058, 0.7145041852187496)
>>>  k = 14 ---------------------------------------------------------------------------------------------------